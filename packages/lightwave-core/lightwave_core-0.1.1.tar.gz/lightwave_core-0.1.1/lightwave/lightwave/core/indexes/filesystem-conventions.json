{
  "conventions": {},
  "structures": {
    "Common Project": "text\nrepository-name/\n├── README.md               # Project overview and quickstart\n├── CONTRIBUTING.md         # Contribution guidelines\n├── LICENSE                 # Project license\n├── CHANGELOG.md            # Version history and changes\n├── .github/                # GitHub specific files\n│   ├── workflows/          # GitHub Actions workflows\n│   └── ISSUE_TEMPLATE/     # Issue templates\n├── docs/                   # Documentation\n├── src/                    # Source code\n│   ├── backend/            # Backend code\n│   └── frontend/           # Frontend code\n├── tests/                  # Test files\n├── scripts/                # Utility scripts\n├── config/                 # Configuration files\n└── .editorconfig           # Editor configuration",
    "Django Application": "text\ndjango-application/\n├── src/backend/\n│   ├── config/             # Project settings\n│   │   ├── settings/       # Environment-specific settings\n│   │   ├── urls.py         # URL routing\n│   │   └── wsgi.py         # WSGI configuration\n│   ├── apps/               # Django applications\n│   │   ├── users/          # User management app\n│   │   │   ├── __init__.py\n│   │   │   ├── admin.py    # Admin interface\n│   │   │   ├── apps.py     # App configuration\n│   │   │   ├── models.py   # Data models\n│   │   │   ├── serializers.py # API serializers\n│   │   │   ├── services.py # Business logic\n│   │   │   ├── urls.py     # URL patterns\n│   │   │   └── views.py    # View controllers\n│   │   └── # Other apps following the same structure\n│   ├── core/               # Core functionality\n│   │   ├── __init__.py\n│   │   ├── middleware.py   # Custom middleware\n│   │   ├── exceptions.py   # Custom exceptions\n│   │   └── utils.py        # Utility functions\n│   ├── templates/          # HTML templates\n│   │   ├── base.html       # Base template\n│   │   └── # App-specific templates\n│   ├── static/             # Static files\n│   │   ├── css/            # CSS files\n│   │   ├── js/             # JavaScript files\n│   │   └── images/         # Image files\n│   └── manage.py           # Django management script\n├── tests/                  # Test files\n│   ├── conftest.py         # Test configuration\n│   ├── factories.py        # Test factories\n│   └── # Test modules\n└── requirements/           # Dependency files\n    ├── base.txt            # Base requirements\n    ├── dev.txt             # Development requirements\n    └── prod.txt            # Production requirements",
    "Frontend Application": "text\nfrontend-application/\n├── src/frontend/\n│   ├── public/             # Public assets\n│   │   ├── index.html      # HTML entry point\n│   │   ├── favicon.ico     # Favicon\n│   │   └── robots.txt      # Robots file\n│   ├── src/                # Source code\n│   │   ├── components/     # UI components\n│   │   │   ├── common/     # Common components\n│   │   │   │   ├── Button.tsx\n│   │   │   │   ├── Card.tsx\n│   │   │   │   └── # Other common components\n│   │   │   └── # Feature-specific components\n│   │   ├── pages/          # Page components\n│   │   │   ├── Home.tsx    # Home page\n│   │   │   ├── Dashboard.tsx # Dashboard page\n│   │   │   └── # Other pages\n│   │   ├── hooks/          # Custom hooks\n│   │   ├── contexts/       # React contexts\n│   │   ├── services/       # API services\n│   │   │   ├── api.ts      # API client\n│   │   │   ├── auth.ts     # Authentication service\n│   │   │   └── # Other services\n│   │   ├── utils/          # Utility functions\n│   │   ├── types/          # TypeScript type definitions\n│   │   ├── assets/         # Static assets\n│   │   │   ├── images/     # Image files\n│   │   │   └── styles/     # Global styles\n│   │   ├── App.tsx         # Main application component\n│   │   ├── index.tsx       # Application entry point\n│   │   └── routes.tsx      # Route definitions\n│   ├── package.json        # Dependencies and scripts\n│   ├── tsconfig.json       # TypeScript configuration\n│   └── .eslintrc.js        # ESLint configuration\n└── tests/                  # Test files\n    ├── setupTests.ts       # Test setup\n    └── # Test files",
    "Infrastructure as Code": "text\nterraform/\n├── modules/                # Reusable Terraform modules\n│   ├── networking/         # Networking module\n│   │   ├── main.tf         # Main configuration\n│   │   ├── variables.tf    # Input variables\n│   │   ├── outputs.tf      # Output values\n│   │   └── README.md       # Module documentation\n│   ├── database/           # Database module\n│   │   └── # Similar structure\n│   └── # Other modules\n├── environments/           # Environment-specific configurations\n│   ├── dev/                # Development environment\n│   │   ├── main.tf         # Main configuration\n│   │   ├── variables.tf    # Environment variables\n│   │   └── terraform.tfvars # Variable values\n│   ├── staging/            # Staging environment\n│   │   └── # Similar structure\n│   └── production/         # Production environment\n│       └── # Similar structure\n└── scripts/                # Terraform scripts\n    ├── init.sh             # Initialization script\n    └── apply.sh            # Apply script"
  },
  "naming": {},
  "guidelines": {},
  "metadata": {
    "title": "LightWave Ecosystem Filesystem Conventions",
    "source_file": "filesystem-conventions.md",
    "generation_time": "2025-03-17T21:28:48.161395"
  }
}