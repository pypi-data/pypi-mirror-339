[build-system]
requires = [
    "setuptools>=60",
    "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "optiwindnet"
description = "Tools for optimizing the electrical cable network (collection system) for offshore wind power plants."
authors = [   { name="DTU Wind Energy"},   { name="Mauricio Souza de Alencar", email="ma___@dtu.dk" }, ]
dynamic = ["version"]
keywords = ["optimization", "wind farms", "routing"]
classifiers = [
    "Development Status :: 4 - Beta", 
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
]
readme = "README.md"
license = "MIT"
requires-python = ">= 3.10"
dependencies = [
    'bidict~=0.23.1',
    'condeltri~=0.0.2',
    'darkdetect~=0.8.0',
    'hybgensea~=0.0.1',
    'matplotlib~=3.10.1',
    'networkx~=3.4.2',
    'numba~=0.61.0',
    'numpy~=2.1.3',
    'ortools~=9.12.4544',
    'osmium~=4.0.2',
    'pony~=0.7.18',
    'py~=1.11.0',
    'Pyomo~=6.9.1',
    'PyYAML~=6.0.2',
    'scipy~=1.15.2',
    'shapely~=2.0.7',
    'svg.py~=1.6.0',
    'utm~=0.7.0',
]

[project.urls]
'Documentation'= 'https://topfarm.pages.windenergy.dtu.dk/OptiWindNet/'
# 'Changelog'= 'https://topfarm.pages.windenergy.dtu.dk/OptiWindNet/'
'Source code'= 'https://gitlab.windenergy.dtu.dk/TOPFARM/OptiWindNet'
'Issue tracker'= 'https://gitlab.windenergy.dtu.dk/TOPFARM/OptiWindNet/-/issues'

[project.optional-dependencies]
test  = [ 'pytest',  # for testing
          'pytest-cov',  # for calculating coverage
          'psutil',  # memory profiling
          'memory_profiler',  # memory profiling
          'line_profiler',  # to check speed
        ] 
docs = [
          'sphinx',  # generating documentation
          'sphinx_rtd_theme',  # docs theme
          'ipywidgets',  # notebook widgets
          "numpydoc", 
          "nbsphinx", 
          "sphinx_copybutton", 
          "sphinx_sitemap", 
          "ipympl", 
          "ipykernel",
          "pypandoc",
          'sphinx-autoapi',
        ]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["optiwindnet", "optiwindnet/**/*"]
# exclude = []

[tool.setuptools.package-data]
optiwindnet = ['data/*']

[tool.setuptools_scm]
version_file = "optiwindnet/version.py"
