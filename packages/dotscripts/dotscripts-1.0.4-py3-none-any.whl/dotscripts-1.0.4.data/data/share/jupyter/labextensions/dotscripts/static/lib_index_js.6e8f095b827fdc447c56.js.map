{"version":3,"file":"lib_index_js.6e8f095b827fdc447c56.js","mappings":"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","sources":["webpack://dotscripts/./src/index.ts"],"sourcesContent":["import {\r\n  JupyterFrontEnd,\r\n  JupyterFrontEndPlugin\r\n} from '@jupyterlab/application';\r\n\r\nimport {\r\n  INotebookTracker\r\n} from '@jupyterlab/notebook';\r\n\r\nconst extension: JupyterFrontEndPlugin<void> = {\r\n  id: 'dotscripts',\r\n  autoStart: true,\r\n  requires: [INotebookTracker],\r\n  activate: (app: JupyterFrontEnd, notebooks: INotebookTracker) => {\r\n    console.log('✅ JupyterLab extension dotscripts is activated.');\r\n\r\n    const command = 'dotscripts:run-tagged-and-below';\r\n    app.commands.addCommand(command, {\r\n      label: 'Run Tagged Cell and All Below (No Scrolling)',\r\n      execute: async (args: any) => {\r\n        const tagName = args.tag || 'my-tag';\r\n\r\n        // ✅ Create and show loading overlay with a spinner\r\n        const overlay = document.createElement('div');\r\n        overlay.style.position = 'fixed';\r\n        overlay.style.top = '0';\r\n        overlay.style.left = '0';\r\n        overlay.style.width = '100%';\r\n        overlay.style.height = '100%';\r\n        overlay.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';\r\n        overlay.style.display = 'flex';\r\n        overlay.style.alignItems = 'center';\r\n        overlay.style.justifyContent = 'center';\r\n        overlay.style.zIndex = '10000';\r\n        overlay.innerHTML = `\r\n          <div style=\"background: white; padding: 20px; border-radius: 10px; text-align: center; display: flex; flex-direction: column; align-items: center;\">\r\n            <p>Calculation running...</p>\r\n            <div class=\"spinner\" style=\"border: 4px solid rgba(0,0,0,0.1); border-left-color: black; width: 40px; height: 40px; border-radius: 50%; animation: spin 1s linear infinite;\"></div>\r\n            <style>\r\n              @keyframes spin {\r\n                from { transform: rotate(0deg); }\r\n                to { transform: rotate(360deg); }\r\n              }\r\n            </style>\r\n          </div>\r\n        `;\r\n        document.body.appendChild(overlay);\r\n\r\n        // ✅ 1. Find all scrollable containers\r\n        const scrollContainers = document.querySelectorAll('.jp-WindowedPanel-outer');\r\n        const activeCells = document.querySelectorAll('.jp-Cell.jp-CodeCell');\r\n\r\n        const previousScrollPositions: Map<Element, number> = new Map();\r\n\r\n        // ✅ 2. Disable scrolling (lock scrollTop)\r\n        const disableScrolling = () => {\r\n          scrollContainers.forEach(el => {\r\n            previousScrollPositions.set(el, el.scrollTop);\r\n            (el as HTMLElement).style.overflow = 'hidden';\r\n            (el as HTMLElement).dataset.lockScroll = 'true';\r\n          });\r\n\r\n          activeCells.forEach(cell => {\r\n            (cell as HTMLElement).setAttribute('tabindex', '-1');\r\n          });\r\n\r\n          document.addEventListener('scroll', preventForcedScroll, true);\r\n        };\r\n\r\n        const enableScrolling = () => {\r\n          scrollContainers.forEach(el => {\r\n            (el as HTMLElement).style.overflow = '';\r\n            el.scrollTop = previousScrollPositions.get(el) || 0;\r\n            (el as HTMLElement).dataset.lockScroll = 'false';\r\n          });\r\n\r\n          activeCells.forEach(cell => {\r\n            (cell as HTMLElement).setAttribute('tabindex', '0');\r\n          });\r\n\r\n          document.removeEventListener('scroll', preventForcedScroll, true);\r\n        };\r\n\r\n        const preventForcedScroll = (event: Event) => {\r\n          const target = event.target as HTMLElement;\r\n          if (target.dataset.lockScroll === 'true') {\r\n            target.scrollTop = previousScrollPositions.get(target) || 0;\r\n            event.preventDefault();\r\n          }\r\n        };\r\n\r\n        disableScrolling();\r\n        await new Promise(resolve => setTimeout(resolve, 0));\r\n\r\n        try {\r\n          const current = notebooks.currentWidget;\r\n          if (!current) {\r\n            document.body.removeChild(overlay);\r\n            return;\r\n          }\r\n\r\n          const notebook = current.content;\r\n\r\n          for (let index = 0; index < notebook.widgets.length; index++) {\r\n            const cell = notebook.widgets[index];\r\n            const tags = cell.model.metadata?.tags as string[] | undefined;\r\n\r\n            if (Array.isArray(tags) && tags.includes(tagName)) {\r\n              notebook.activeCellIndex = index;\r\n              await app.commands.execute('notebook:run-all-below');\r\n              document.body.removeChild(overlay);\r\n              return;\r\n            }\r\n          }\r\n        } catch (error) {\r\n          document.body.removeChild(overlay);\r\n        } finally {\r\n          enableScrolling();\r\n        }\r\n      }\r\n    });\r\n  }\r\n};\r\n\r\nexport default extension;"],"names":[],"sourceRoot":""}