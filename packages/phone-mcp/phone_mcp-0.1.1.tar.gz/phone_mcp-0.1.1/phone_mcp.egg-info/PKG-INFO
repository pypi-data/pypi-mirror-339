Metadata-Version: 2.4
Name: phone-mcp
Version: 0.1.1
Summary: A phone control MCP plugin using ADB
Home-page: https://github.com/yourusername/phone-mcp
Author: Your Name
Author-email: your.email@example.com
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: mcp>=1.6.0
Requires-Dist: aiohttp>=3.8.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Phone MCP Plugin

A phone control plugin for MCP that allows you to control your Android phone through ADB commands.

## Features

- Make and receive phone calls
- Send and receive text messages
- Take screenshots and screen recordings
- Control media playback
- Set alarms
- Open apps
- Check device connection
- And more...

## Prerequisites

- Python 3.7 or higher
- ADB (Android Debug Bridge) installed and in your system PATH
- An Android device with USB debugging enabled
- Connected Android device via USB

## Installation

```bash
pip install phone-mcp
```

## Usage

This plugin can be used with uvx. Here are some example commands:

```bash
# Make a phone call
uvx phone call_number "1234567890"

# Send a text message
uvx phone send_text_message "1234567890" "Hello from MCP!"

# Take a screenshot
uvx phone take_screenshot

# Check device connection
uvx phone check_device_connection

# Open an app
uvx phone open_app "camera"
```

## Available Commands

- `call_number(phone_number: str)`: Make a phone call
- `end_call()`: End the current call
- `send_text_message(phone_number: str, message: str)`: Send a text message
- `take_screenshot()`: Take a screenshot
- `start_screen_recording(duration_seconds: int = 30)`: Record screen
- `open_app(app_name: str)`: Open an application
- `set_alarm(hour: int, minute: int, label: str = "Alarm")`: Set an alarm
- `play_media()`: Play/pause media
- `receive_text_messages(limit: int = 5)`: Check recent messages
- `receive_incoming_call()`: Handle incoming calls
- `check_device_connection()`: Check ADB connection

## License

MIT License 
