Metadata-Version: 2.4
Name: EssenceBinder
Version: 0.1.1.dev0
Summary: A brief description of EssenceBinder
Author-email: DirtyWork Solutions Limited <essencebinder@open.dirtywork.solutions>
License: MIT License
        
        Copyright (c) 2025 DirtyWork Solutions
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://open.dirtywork.solutions/EssenceBinder/
Project-URL: Repository, https://github.com/DirtyWork-Solutions/EssenceBinder
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.12
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: pyforged~=0.3.0.dev4
Provides-Extra: test
Requires-Dist: pytest>=6.0; extra == "test"
Requires-Dist: pytest-cov>=2.10; extra == "test"
Provides-Extra: dev
Provides-Extra: military
Provides-Extra: society
Provides-Extra: social
Provides-Extra: biology
Provides-Extra: industry
Provides-Extra: science
Provides-Extra: culture
Dynamic: license-file

# EssenceBinder

__THIS PROJECT IS IN ALPHA!__ _YOU HAVE  BE WARNED!_
****

EssenceBinder is an open-source and general purpose development framework design to model, interact with and
manipulate __any entity__ - abstract or tangible - through a structured model inspired by the _Suggested Upper Merged
Ontology_. It's core focus is on providing a rich, extensible foundation for representing and working with __Things__ in
a flexible and scalable way.

More than a typical object-oriented framework; it's a __generalised, structured way to model reality itself__.
Whether you're building AI-driven applications knowledge graphs, automation systems, or just looking to cut down your workload.
EssenceBinder provides a __standardised yet flexible__ foundation.

PyThings is a comprehensive, extendable, and structured Python framework for representing, interacting with, and reasoning about entities, concepts, and structured data. It provides a flexible ontology-based foundation, allowing users to model relationships, attributes, and metadata with high interoperability across various domains.

Whether you're working with semantic data models, composable objects, knowledge graphs, or hierarchical systems, PyThings streamlines the process with extensible ontologies, advanced inference capabilities, and multi-format data outputs.

PyThings is a modular and extensible Python framework for working with structured, composable objects—whether they are real-world entities, abstract concepts, or system components.

Instead of reinventing data structures and relationships, PyThings provides a ready-to-use base of standardized objects while allowing you to define your own with minimal effort. Import predefined structures, enhance your own classes, or seamlessly integrate semantic tools without needing to manually build complex models.

Key features:
- 
- Prebuilt, Modular Object System – Import rich, structured entities without having to define everything from scratch.
- Composable and Extendable – Objects can have relationships, attributes, and metadata, supporting bidirectional interactions (e.g., a Computer → HasPart → CPU, and CPU → IsPartOf → Computer).
- Flexible Data Representation – Supports a range of formats, from relational data models to knowledge graphs.
- Plug-and-Play with Python Ecosystem – Works seamlessly with NumPy, Pint, Pandas, Pydantic, and more.
- Ontology-Compatible, but Not Required – Uses SUMO as a foundation to provide structured defaults, but you don’t need to think about ontologies unless you want to.
