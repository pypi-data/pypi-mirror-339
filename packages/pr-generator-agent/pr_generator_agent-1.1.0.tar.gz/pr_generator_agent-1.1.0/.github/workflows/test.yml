name: Python Tests & Lint

on:
  pull_request:
    branches:
      - main
  push:
    branches-ignore:
      - main  # Exclude main as it's handled by release workflow
      - 'dependabot/**'  # Exclude dependabot branches
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
      - 'LICENSE'

# Minimal permissions required for running tests and linting
permissions:
  contents: read  # Needed to checkout code
  checks: write   # Needed for test reporting

jobs:
  lint:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'  # Use latest stable Python for linting
          
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-lint-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-lint-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: Run linters
        run: |
          black --check aipr/ tests/
          isort --check aipr/ tests/
          flake8 aipr/ tests/

  test:
    name: Python Tests
    needs: lint  # Only run tests if linting passes
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        # We support the latest two stable Python versions plus beta
        python-version: ['3.11']  # Removed 3.10 as it is incompatible
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: true
          
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-test-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-test-${{ matrix.python-version }}-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
          
      - name: Run tests
        run: |
          pytest --cov=aipr --cov-report=term-missing