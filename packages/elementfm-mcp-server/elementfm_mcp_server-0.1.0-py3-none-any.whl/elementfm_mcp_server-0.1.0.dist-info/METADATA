Metadata-Version: 2.4
Name: elementfm-mcp-server
Version: 0.1.0
Summary: MCP (Model Control Protocol) server for Element.fm, providing tools for managing podcasts
Project-URL: Homepage, https://element.fm
Project-URL: Repository, https://gitlab.com/elementfm/mcp
Project-URL: Documentation, https://gitlab.com/elementfm/docs
Author: Element.fm Team
License-Expression: GPL-3.0-or-later
License-File: LICENSE
Keywords: element.fm,mcp,podcast
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Multimedia :: Sound/Audio
Requires-Python: >=3.13
Requires-Dist: mcp[cli]>=1.6.0
Requires-Dist: requests>=2.32.3
Description-Content-Type: text/markdown

# Element.fm MCP Server

This is the MCP server implementation for Element.fm, providing a command-line interface for interacting with the Element.fm API.

## Installation

You can install this package using pip:

```bash
pip install elementfm-mcp-server
```

## Configuration

Before using the server, you need to set up your API key as an environment variable:

```bash
export API_KEY=your_api_key_here
```

You can also optionally configure the frontend URL (defaults to https://app.element.fm):

```bash
export FRONTEND_ROOT_URL=https://your-custom-url.com
```

## Usage

Once installed, you can run the MCP server using:

```bash
elementfm-mcp stdio  # For standard I/O mode
# or
elementfm-mcp sse   # For Server-Sent Events mode
```

## Features

The MCP server provides the following functionality:

- Workspace management (create, list, get)
- Show management (create, list, get, update)
- Episode management (create, list, get, update, publish)
- AI features (transcription, chapter generation, show notes generation)
- Workspace invitations
- Recipient management
- Workspace search

## Development

To set up the development environment:

1. Clone the repository
2. Install dependencies: `pip install -e .`
3. Set up your API key as described in the Configuration section
4. Run the server in development mode: `python server.py stdio`

## License

MIT License