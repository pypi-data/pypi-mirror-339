[tool.poetry]
name = "sktaip-api"
version = "0.1.6"
description = "AIX Platform Agent API Server for Deployment"
authors = ["AIX Enterprise"]
license = "Proprietary"
packages = [
  { include = "sktaip_api" },
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
target-version = "py310"

line-length = 120
indent-width = 4

select = [
    "YTT", #flake8-2020
    "ANN", #flake8-annotations
    "ASYNC", #flake8-async
    "S", #flake8-bandit
    "BLE", #flake8-blind-except
    "FBT", #flake8-boolean-trap
    "B", #flake8-bugbear
    "A", #flake8-builtins
    "COM", #flake8-commas
    "C4", #flake8-comprehensions
    "CPY", #flake8-copyright
    "DTZ", #flake8-datetimez
    "T10", #flake8-debugger
    "DJ", #flake8-django
    "EM", #flake8-errmsg
    "EXE", #flake8-executable
    "INT", #flake8-gettext
    "ISC", #flake8-implicit-str-concat
    "ICN", #flake8-import-conventions
    "LOG", #flake8-logging
    "G", #flake8-logging-format
    "INP", #flake8-no-pep420
    "PIE", #flake8-pie
    "T20", #flake8-print
    "PT", #flake8-pytest-style
    "Q", #flake8-quotes
    "RSE", #flake8-raise
    "RET", #flake8-return
    "SLF", #flake8-self
    "SIM", #flake8-simplify
    "SLOT", #flake8-slots
    "TID", #flake8-tidy-imports
    "TD", #flake8-todos
    "TRIO", #flake8-trio
    "TCH", #flake8-type-checking
    "PTH", #flake8-use-pathlib
    "FLY", #flynt 
    "C90", #mccabe
    "PD", #pandas-vet
    "N", #pep8-naming
    "PERF", #perflint
    "TRY", #tryceratops
    "E", #pycodestyle
    "W",   # pycodestyle
    "F", #pyflakes
    "I",   # isort
    "FA", #flake8-future-annotations
    "PGH", # pygrep-hooks
    "RUF", # ruff-specific rules
    "PL",  # pylint
    "UP",  # pyupgrade
    "D", #pydocstyle
]

ignore = [
    "ANN101",  # missing-type-self
    "D100",    # public module
    "D101",    # public class
    "D102",    # public method
    "D103",    # public function
    "D104",    # public package
    "D105",    # magic methods
    "D106",    # nested class
    "D107",    # init
    "D202",    # blank lines after function docstring
    "D203",    # blank line before class docstring
    "D213",    # Multi-line docstring summary should start at the second line
    "D401",    # Imperative mood
    "D402",    # First line should not be the function's signature
]
exclude = [
    "migrations",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    ".next",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.112.2"
sqlalchemy = "^2.0.32"
psycopg = {version = "^3.2.1", extras = ["binary", "pool"]}
sqlmodel = "^0.0.22"
pydantic = {extras = ["email"], version = ">=2.10.0,<2.11.0"}
pydantic-settings = "^2.4.0"
python-dotenv = "^1.0.1"
dependency-injector = "^4.41.0"
alembic = "^1.13.2"
autologging = "^1.3.2"
python-jose = "^3.3.0"
gunicorn = "^23.0.0"
uvicorn = "^0.30.6"
python-multipart = "^0.0.9"
sqlalchemy-filters = "^0.13.0"
httpx = "^0.27.2"
coverage = "^7.6.1"
pytest = "^8.3.2"
ptvsd = "^4.3.2"
pydevd = "^3.1.0"
kubernetes = "^30.1.0"
sqladmin = {extras = ["full"], version = "^0.18.0"}
fastapi-authz = "^1.0.0"
starlette-admin = "^0.14.1"
fastapi-keycloak = "^1.0.11"
authlib = "^1.3.2"
opensearch-py = "2.6.0"
fastapi-versioning = "0.10.0"

asyncpg = "^0.29.0"
greenlet = "^3.0.3"
isort = "^5.13.2"
pre-commit = "^3.8.0"
pyjwt = "^2.8.0"
passlib = "^1.7.4"
pytest-asyncio = "^0.23.8"
langchain-openai = "^0.2.0"
langchain-community = "^0.3.0"
langchain = "^0.3.0"
langgraph = "^0.2.26"
langserve = {extras = ["all"], version = "^0.3.0"}
sse-starlette = "1.8.2"
azure-search-documents = "^11.5.1"
azure-identity = "^1.18.0"
websockets = "^14.1"
setuptools = "^75.6.0"
redis = "^5.2.0"
pyinstrument = "^5.0.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
black = "^24.4.2"
flake8 = "^7.1.0"
isort = "^5.13.2"
coverage = "^7.6.0"
mypy = "^1.11.1"
pre-commit = "^3.8.0"
langchain-experimental = "^0.3.0"
wikipedia = "^1.4.0"
networkx = "^3.3"
pyvis = "^0.3.2"



[tool.poetry.group.shared.dependencies]
# keycloak = "^3.1.5"
python-keycloak = "3.9.1"
loguru = "^0.7.2"


[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
      .git          # root of the project
    | venv
    | build
    | dist
  )/
'''

[tool.flake8]
show-source = true
exclude = [
  ".git",
  ".gitignore",
  "*.py[co]",
  "__pycache__",
  "venv",
  ".env.*",
  "build",
  "dist"
  ]
ignore = ["E501", "W503", "F401"]
#E501: line too long
#W503: line break occurred before binary operator
extend-ignore = "E203"
max-complexity = 10
max-line-length = 88

[tool.isort]
profile = "black"
multi_line_output = 3
