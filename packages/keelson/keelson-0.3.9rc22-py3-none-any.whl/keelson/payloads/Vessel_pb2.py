# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: Vessel.proto
# Protobuf Python Version: 6.30.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    2,
    '',
    'Vessel.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from . import LocationFix_pb2 as LocationFix__pb2
from . import VoyagePlan_pb2 as VoyagePlan__pb2
from . import Navigation_pb2 as Navigation__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cVessel.proto\x12\x0ekeelson.vessel\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x11LocationFix.proto\x1a\x10VoyagePlan.proto\x1a\x10Navigation.proto\"a\n\x07Vessels\x12-\n\ttimestamp\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\'\n\x07vessels\x18\x01 \x03(\x0b\x32\x16.keelson.vessel.Vessel\"\xaa\x05\n\x06Vessel\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x36\n\x0binformation\x18\x02 \x01(\x0b\x32!.keelson.vessel.VesselInformation\x12\'\n\x08position\x18\x03 \x01(\x0b\x32\x15.foxglove.PositionFix\x12\x42\n\x13speed_through_water\x18\x05 \x01(\x0b\x32%.keelson.navigation.SpeedThroughWater\x12H\n\x16trajectory_over_ground\x18\x06 \x01(\x0b\x32(.keelson.navigation.TrajectoryOverGround\x12\x34\n\x0crate_of_turn\x18\x07 \x01(\x0b\x32\x1e.keelson.navigation.RateOfTurn\x12,\n\x07heading\x18\x08 \x01(\x0b\x32\x1b.keelson.navigation.Heading\x12?\n\x11navigation_status\x18\t \x01(\x0b\x32$.keelson.navigation.NavigationStatus\x12H\n\x16\x63ommon_reference_point\x18\n \x01(\x0b\x32(.keelson.navigation.CommonReferencePoint\x12\x35\n\x0b\x64\x61ta_source\x18\x0b \x03(\x0b\x32 .keelson.vessel.VesselDataSource\x12,\n\x06voyage\x18\x0c \x01(\x0b\x32\x1c.keelson.vessel.VesselVoyage\x12.\n\x07statics\x18\r \x01(\x0b\x32\x1d.keelson.vessel.VesselStatics\"\xca\x04\n\x11VesselInformation\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0c\n\x04mmsi\x18\x02 \x01(\x05\x12\x0b\n\x03imo\x18\x03 \x01(\x05\x12\x0c\n\x04name\x18\x04 \x01(\t\x12\x11\n\tcall_sign\x18\x05 \x01(\t\x12\x1e\n\x16length_over_all_meters\x18\x06 \x01(\x02\x12\x1d\n\x15width_over_all_meters\x18\x07 \x01(\x02\x12\x14\n\x0c\x64raft_meters\x18\x08 \x01(\x02\x12:\n\x04type\x18\t \x01(\x0e\x32,.keelson.vessel.VesselInformation.VesselType\x12\x10\n\x08json_str\x18\x63 \x01(\t\"\xa6\x02\n\nVesselType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03WIG\x10\x14\x12\x0b\n\x07\x46ISHING\x10\x1e\x12\n\n\x06TOWING\x10\x1f\x12\x0f\n\x0bTOWING_LONG\x10 \x12\x0c\n\x08\x44REDGING\x10!\x12\n\n\x06\x44IVING\x10\"\x12\x0c\n\x08MILITARY\x10#\x12\x0b\n\x07SAILING\x10$\x12\x0c\n\x08PLEASURE\x10%\x12\x07\n\x03HSC\x10(\x12\t\n\x05PILOT\x10\x32\x12\x07\n\x03SAR\x10\x33\x12\x07\n\x03TUG\x10\x34\x12\x08\n\x04PORT\x10\x35\x12\x12\n\x0e\x41NTI_POLLUTION\x10\x36\x12\x13\n\x0fLAW_ENFORCEMENT\x10\x37\x12\x0b\n\x07MEDICAL\x10:\x12\r\n\tPASSENGER\x10<\x12\t\n\x05\x43\x41RGO\x10\x46\x12\n\n\x06TANKER\x10P\x12\t\n\x05OTHER\x10Z\"\xe1\x03\n\x0cVesselVoyage\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1d\n\x15\x64\x65parted_country_name\x18\x02 \x01(\t\x12\x1d\n\x15\x64\x65parted_country_code\x18\x03 \x01(\t\x12\x1b\n\x13\x64\x65parture_port_name\x18\x04 \x01(\t\x12\x1b\n\x13\x64\x65parture_port_code\x18\x05 \x01(\t\x12 \n\x18\x64\x65stination_country_name\x18\x06 \x01(\t\x12 \n\x18\x64\x65stination_country_code\x18\x07 \x01(\t\x12\x1d\n\x15\x64\x65stination_port_name\x18\x08 \x01(\t\x12\x1d\n\x15\x64\x65stination_port_code\x18\t \x01(\t\x12\x1a\n\x12time_to_go_seconds\x18\n \x01(\x05\x12I\n\x19time_of_departure_arrival\x18\x0b \x01(\x0b\x32&.keelson.voyage.TimeOfDepartureArrival\x12/\n\x0bvoyage_plan\x18\x0c \x01(\x0b\x32\x1a.keelson.voyage.VoyagePlan\x12\x10\n\x08json_str\x18\x63 \x01(\t\"\xf4\x01\n\x10VesselDataSource\x12\x37\n\x06source\x18\x01 \x01(\x0e\x32\'.keelson.vessel.VesselDataSource.Source\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x10\n\x08json_str\x18\x63 \x01(\t\"r\n\x06Source\x12\x16\n\x12\x41IS_RADIO_RECEIVER\x10\x00\x12\x10\n\x0c\x41IS_PROVIDER\x10\x01\x12\t\n\x05RADAR\x10\x03\x12\t\n\x05LIDAR\x10\x04\x12\n\n\x06\x43\x41MERA\x10\x05\x12\x0e\n\nSIMULATION\x10\x06\x12\x0c\n\x08PLATFORM\x10\x07\"\x98\x03\n\rVesselStatics\x12\r\n\x05model\x18\x01 \x01(\t\x12\x14\n\x0crudder_count\x18\x02 \x01(\x05\x12\x1a\n\x12rudder_single_mode\x18\x03 \x01(\x08\x12\x18\n\x10propulsion_count\x18\x04 \x01(\x05\x12\x45\n\x0fpropulsion_type\x18\x05 \x01(\x0e\x32,.keelson.vessel.VesselStatics.PropulsionType\x12\x1a\n\x12\x62ow_thruster_count\x18\x06 \x01(\x05\x12\x1c\n\x14stern_thruster_count\x18\x07 \x01(\x05\x12\x11\n\tgps_count\x18\x08 \x01(\x05\x12\x19\n\x11gyrocompass_count\x18\t \x01(\x05\x12\x1e\n\x16magnetic_compass_count\x18\n \x01(\x05\"]\n\x0ePropulsionType\x12\x0f\n\x0bUNSPECIFIED\x10\x00\x12\n\n\x06SINGLE\x10\x01\x12\x08\n\x04\x44UAL\x10\x02\x12\n\n\x06\x44IESEL\x10\x03\x12\x0c\n\x08\x45LECTRIC\x10\x04\x12\n\n\x06HYBRID\x10\x05\"\xc4\x01\n\tAutopilot\x12\x14\n\x0c\x61utopilot_on\x18\x01 \x01(\x08\x12\x14\n\x0c\x63ontrol_mode\x18\x02 \x01(\t\x12\x0e\n\x06\x63ourse\x18\x03 \x01(\x02\x12\x0e\n\x06radius\x18\x04 \x01(\x02\x12\x0b\n\x03rot\x18\x05 \x01(\x02\x12\x14\n\x0crudder_limit\x18\x06 \x01(\x02\x12\x1a\n\x12rudder_performance\x18\x07 \x01(\t\x12\x15\n\rrudder_timing\x18\x08 \x01(\t\x12\x15\n\rsteering_mode\x18\t \x01(\t\"P\n\x0bOrientation\x12\x0c\n\x04roll\x18\x01 \x01(\x01\x12\r\n\x05pitch\x18\x02 \x01(\x01\x12\x0b\n\x03yaw\x18\x03 \x01(\x01\x12\x17\n\x0freference_frame\x18\x04 \x01(\t\"\xa3\x01\n\x06\x44\x65vice\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0c\n\x04type\x18\x03 \x01(\t\x12*\n\x08location\x18\x04 \x01(\x0b\x32\x18.keelson.vessel.Location\x12\x30\n\x0borientation\x18\x05 \x01(\x0b\x32\x1b.keelson.vessel.Orientation\x12\x13\n\x0b\x64\x65scription\x18\x06 \x01(\t\"D\n\x08Location\x12\t\n\x01x\x18\x01 \x01(\x01\x12\t\n\x01y\x18\x02 \x01(\x01\x12\t\n\x01z\x18\x03 \x01(\x01\x12\x17\n\x0freference_frame\x18\x04 \x01(\t\"g\n\x0bLimitMinMax\x12\x11\n\tmin_value\x18\x01 \x01(\x01\x12\x11\n\tmax_value\x18\x02 \x01(\x01\x12\x18\n\x10min_safety_value\x18\x03 \x01(\x01\x12\x18\n\x10max_safety_value\x18\x04 \x01(\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'Vessel_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_VESSELS']._serialized_start=120
  _globals['_VESSELS']._serialized_end=217
  _globals['_VESSEL']._serialized_start=220
  _globals['_VESSEL']._serialized_end=902
  _globals['_VESSELINFORMATION']._serialized_start=905
  _globals['_VESSELINFORMATION']._serialized_end=1491
  _globals['_VESSELINFORMATION_VESSELTYPE']._serialized_start=1197
  _globals['_VESSELINFORMATION_VESSELTYPE']._serialized_end=1491
  _globals['_VESSELVOYAGE']._serialized_start=1494
  _globals['_VESSELVOYAGE']._serialized_end=1975
  _globals['_VESSELDATASOURCE']._serialized_start=1978
  _globals['_VESSELDATASOURCE']._serialized_end=2222
  _globals['_VESSELDATASOURCE_SOURCE']._serialized_start=2108
  _globals['_VESSELDATASOURCE_SOURCE']._serialized_end=2222
  _globals['_VESSELSTATICS']._serialized_start=2225
  _globals['_VESSELSTATICS']._serialized_end=2633
  _globals['_VESSELSTATICS_PROPULSIONTYPE']._serialized_start=2540
  _globals['_VESSELSTATICS_PROPULSIONTYPE']._serialized_end=2633
  _globals['_AUTOPILOT']._serialized_start=2636
  _globals['_AUTOPILOT']._serialized_end=2832
  _globals['_ORIENTATION']._serialized_start=2834
  _globals['_ORIENTATION']._serialized_end=2914
  _globals['_DEVICE']._serialized_start=2917
  _globals['_DEVICE']._serialized_end=3080
  _globals['_LOCATION']._serialized_start=3082
  _globals['_LOCATION']._serialized_end=3150
  _globals['_LIMITMINMAX']._serialized_start=3152
  _globals['_LIMITMINMAX']._serialized_end=3255
# @@protoc_insertion_point(module_scope)
