# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: RadarReading.proto
# Protobuf Python Version: 6.30.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    30,
    2,
    '',
    'RadarReading.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from . import Pose_pb2 as Pose__pb2
from . import PackedElementField_pb2 as PackedElementField__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12RadarReading.proto\x12\rkeelson.radar\x1a\nPose.proto\x1a\x18PackedElementField.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc7\x01\n\nRadarSpoke\x12-\n\ttimestamp\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x10\n\x08\x66rame_id\x18\x02 \x01(\t\x12\x1c\n\x04pose\x18\x03 \x01(\x0b\x32\x0e.foxglove.Pose\x12\x0f\n\x07\x61zimuth\x18\x04 \x01(\x02\x12\r\n\x05range\x18\x05 \x01(\x02\x12,\n\x06\x66ields\x18\x06 \x03(\x0b\x32\x1c.foxglove.PackedElementField\x12\x0c\n\x04\x64\x61ta\x18\x07 \x01(\x0c\"7\n\nRadarSweep\x12)\n\x06spokes\x18\x01 \x03(\x0b\x32\x19.keelson.radar.RadarSpokeb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'RadarReading_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_RADARSPOKE']._serialized_start=109
  _globals['_RADARSPOKE']._serialized_end=308
  _globals['_RADARSWEEP']._serialized_start=310
  _globals['_RADARSWEEP']._serialized_end=365
# @@protoc_insertion_point(module_scope)
