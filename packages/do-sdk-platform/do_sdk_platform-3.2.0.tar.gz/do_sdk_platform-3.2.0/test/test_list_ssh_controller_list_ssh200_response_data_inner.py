# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.list_ssh_controller_list_ssh200_response_data_inner import ListSshControllerListSsh200ResponseDataInner

class TestListSshControllerListSsh200ResponseDataInner(unittest.TestCase):
    """ListSshControllerListSsh200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSshControllerListSsh200ResponseDataInner:
        """Test ListSshControllerListSsh200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSshControllerListSsh200ResponseDataInner`
        """
        model = ListSshControllerListSsh200ResponseDataInner()
        if include_optional:
            return ListSshControllerListSsh200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.ssh_dto.SshDto(
                    name = '', 
                    value = '', )
            )
        else:
            return ListSshControllerListSsh200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.ssh_dto.SshDto(
                    name = '', 
                    value = '', ),
        )
        """

    def testListSshControllerListSsh200ResponseDataInner(self):
        """Test ListSshControllerListSsh200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
