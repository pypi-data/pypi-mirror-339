# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.subscription_controller_get_active_subscriptions200_response_data_inner import SubscriptionControllerGetActiveSubscriptions200ResponseDataInner

class TestSubscriptionControllerGetActiveSubscriptions200ResponseDataInner(unittest.TestCase):
    """SubscriptionControllerGetActiveSubscriptions200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionControllerGetActiveSubscriptions200ResponseDataInner:
        """Test SubscriptionControllerGetActiveSubscriptions200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionControllerGetActiveSubscriptions200ResponseDataInner`
        """
        model = SubscriptionControllerGetActiveSubscriptions200ResponseDataInner()
        if include_optional:
            return SubscriptionControllerGetActiveSubscriptions200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.subscriptions_plans_dto.SubscriptionsPlansDto(
                    id = '', 
                    plan_id = '', 
                    group_id = '', 
                    group = '', 
                    description = '', 
                    qty = 1.337, 
                    name = '', 
                    price = '', 
                    period = 1, 
                    is_available = True, 
                    qty_required = True, 
                    can_delete = True, 
                    auto_set_qty = True, 
                    meta = do_sdk_platform.models.subscription_meta_data_dto.SubscriptionMetaDataDto(
                        includes = [
                            ''
                            ], 
                        coming_soon = [
                            ''
                            ], 
                        max_days = 1.337, 
                        renewable = True, 
                        max_invites = 1.337, 
                        max_subscriptions = 1.337, 
                        index = 1.337, 
                        can_buy_credits = True, 
                        is_coming_soon = True, 
                        needs_credit_card = True, ), 
                    enabled = True, 
                    monthly_price = 1.337, 
                    annually_price = 1.337, 
                    semi_annually_price = 1.337, 
                    quarterly_price = 1.337, 
                    auto_renew = True, 
                    to_date = '', )
            )
        else:
            return SubscriptionControllerGetActiveSubscriptions200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.subscriptions_plans_dto.SubscriptionsPlansDto(
                    id = '', 
                    plan_id = '', 
                    group_id = '', 
                    group = '', 
                    description = '', 
                    qty = 1.337, 
                    name = '', 
                    price = '', 
                    period = 1, 
                    is_available = True, 
                    qty_required = True, 
                    can_delete = True, 
                    auto_set_qty = True, 
                    meta = do_sdk_platform.models.subscription_meta_data_dto.SubscriptionMetaDataDto(
                        includes = [
                            ''
                            ], 
                        coming_soon = [
                            ''
                            ], 
                        max_days = 1.337, 
                        renewable = True, 
                        max_invites = 1.337, 
                        max_subscriptions = 1.337, 
                        index = 1.337, 
                        can_buy_credits = True, 
                        is_coming_soon = True, 
                        needs_credit_card = True, ), 
                    enabled = True, 
                    monthly_price = 1.337, 
                    annually_price = 1.337, 
                    semi_annually_price = 1.337, 
                    quarterly_price = 1.337, 
                    auto_renew = True, 
                    to_date = '', ),
        )
        """

    def testSubscriptionControllerGetActiveSubscriptions200ResponseDataInner(self):
        """Test SubscriptionControllerGetActiveSubscriptions200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
