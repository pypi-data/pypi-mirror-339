# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.subscription_group_dto import SubscriptionGroupDto

class TestSubscriptionGroupDto(unittest.TestCase):
    """SubscriptionGroupDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionGroupDto:
        """Test SubscriptionGroupDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionGroupDto`
        """
        model = SubscriptionGroupDto()
        if include_optional:
            return SubscriptionGroupDto(
                group_id = '',
                group_name = '',
                description = '',
                plans = [
                    do_sdk_platform.models.subscriptions_plans_dto.SubscriptionsPlansDto(
                        id = '', 
                        plan_id = '', 
                        group_id = '', 
                        group = '', 
                        description = '', 
                        qty = 1.337, 
                        name = '', 
                        price = '', 
                        period = 1, 
                        is_available = True, 
                        qty_required = True, 
                        can_delete = True, 
                        auto_set_qty = True, 
                        meta = do_sdk_platform.models.subscription_meta_data_dto.SubscriptionMetaDataDto(
                            includes = [
                                ''
                                ], 
                            coming_soon = [
                                ''
                                ], 
                            max_days = 1.337, 
                            renewable = True, 
                            max_invites = 1.337, 
                            max_subscriptions = 1.337, 
                            index = 1.337, 
                            can_buy_credits = True, 
                            is_coming_soon = True, 
                            needs_credit_card = True, ), 
                        enabled = True, 
                        monthly_price = 1.337, 
                        annually_price = 1.337, 
                        semi_annually_price = 1.337, 
                        quarterly_price = 1.337, 
                        auto_renew = True, 
                        to_date = '', )
                    ]
            )
        else:
            return SubscriptionGroupDto(
                group_id = '',
                group_name = '',
                description = '',
                plans = [
                    do_sdk_platform.models.subscriptions_plans_dto.SubscriptionsPlansDto(
                        id = '', 
                        plan_id = '', 
                        group_id = '', 
                        group = '', 
                        description = '', 
                        qty = 1.337, 
                        name = '', 
                        price = '', 
                        period = 1, 
                        is_available = True, 
                        qty_required = True, 
                        can_delete = True, 
                        auto_set_qty = True, 
                        meta = do_sdk_platform.models.subscription_meta_data_dto.SubscriptionMetaDataDto(
                            includes = [
                                ''
                                ], 
                            coming_soon = [
                                ''
                                ], 
                            max_days = 1.337, 
                            renewable = True, 
                            max_invites = 1.337, 
                            max_subscriptions = 1.337, 
                            index = 1.337, 
                            can_buy_credits = True, 
                            is_coming_soon = True, 
                            needs_credit_card = True, ), 
                        enabled = True, 
                        monthly_price = 1.337, 
                        annually_price = 1.337, 
                        semi_annually_price = 1.337, 
                        quarterly_price = 1.337, 
                        auto_renew = True, 
                        to_date = '', )
                    ],
        )
        """

    def testSubscriptionGroupDto(self):
        """Test SubscriptionGroupDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
