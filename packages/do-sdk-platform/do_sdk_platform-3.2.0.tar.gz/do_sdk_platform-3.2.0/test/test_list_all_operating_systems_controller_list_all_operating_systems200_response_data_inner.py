# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.list_all_operating_systems_controller_list_all_operating_systems200_response_data_inner import ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner

class TestListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner(unittest.TestCase):
    """ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner:
        """Test ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner`
        """
        model = ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner()
        if include_optional:
            return ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.operating_system_object.OperatingSystemObject(
                    authors = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    created = '', 
                    description = '', 
                    family_id = '', 
                    icon = '', 
                    license = null, 
                    location = '', 
                    name = '', 
                    publication_references = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    requirements = do_sdk_platform.models.hardware_requirements_object.HardwareRequirementsObject(
                        hardware = null, ), 
                    resource_links = [
                        
                        ], 
                    summary = '', 
                    type_id = '', 
                    use_case_ids = [
                        ''
                        ], 
                    variant_tags = [
                        ''
                        ], 
                    use_case_names = [
                        ''
                        ], 
                    version = '', )
            )
        else:
            return ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner(
                id = '',
                type = '',
                attributes = do_sdk_platform.models.operating_system_object.OperatingSystemObject(
                    authors = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    created = '', 
                    description = '', 
                    family_id = '', 
                    icon = '', 
                    license = null, 
                    location = '', 
                    name = '', 
                    publication_references = [
                        do_sdk_platform.models.external_entity_object.ExternalEntityObject(
                            name = '', 
                            url = '', )
                        ], 
                    requirements = do_sdk_platform.models.hardware_requirements_object.HardwareRequirementsObject(
                        hardware = null, ), 
                    resource_links = [
                        
                        ], 
                    summary = '', 
                    type_id = '', 
                    use_case_ids = [
                        ''
                        ], 
                    variant_tags = [
                        ''
                        ], 
                    use_case_names = [
                        ''
                        ], 
                    version = '', ),
        )
        """

    def testListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner(self):
        """Test ListAllOperatingSystemsControllerListAllOperatingSystems200ResponseDataInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
