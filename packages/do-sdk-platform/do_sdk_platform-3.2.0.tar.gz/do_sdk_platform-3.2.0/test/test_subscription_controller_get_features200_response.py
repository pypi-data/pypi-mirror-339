# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.subscription_controller_get_features200_response import SubscriptionControllerGetFeatures200Response

class TestSubscriptionControllerGetFeatures200Response(unittest.TestCase):
    """SubscriptionControllerGetFeatures200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionControllerGetFeatures200Response:
        """Test SubscriptionControllerGetFeatures200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionControllerGetFeatures200Response`
        """
        model = SubscriptionControllerGetFeatures200Response()
        if include_optional:
            return SubscriptionControllerGetFeatures200Response(
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    self = '', 
                    next = '', 
                    prev = '', 
                    first = '', ),
                data = [
                    do_sdk_platform.models.subscription_controller_get_features_200_response_data_inner.SubscriptionController_getFeatures_200_response_data_inner(
                        id = '', 
                        type = '', 
                        attributes = do_sdk_platform.models.features_dto.FeaturesDto(
                            platform = 'MMA', ), )
                    ]
            )
        else:
            return SubscriptionControllerGetFeatures200Response(
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    self = '', 
                    next = '', 
                    prev = '', 
                    first = '', ),
                data = [
                    do_sdk_platform.models.subscription_controller_get_features_200_response_data_inner.SubscriptionController_getFeatures_200_response_data_inner(
                        id = '', 
                        type = '', 
                        attributes = do_sdk_platform.models.features_dto.FeaturesDto(
                            platform = 'MMA', ), )
                    ],
        )
        """

    def testSubscriptionControllerGetFeatures200Response(self):
        """Test SubscriptionControllerGetFeatures200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
