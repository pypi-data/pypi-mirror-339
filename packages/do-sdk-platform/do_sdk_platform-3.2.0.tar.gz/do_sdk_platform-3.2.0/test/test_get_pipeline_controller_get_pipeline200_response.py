# coding: utf-8

"""
    Computebench Service API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from do_sdk_platform.models.get_pipeline_controller_get_pipeline200_response import GetPipelineControllerGetPipeline200Response

class TestGetPipelineControllerGetPipeline200Response(unittest.TestCase):
    """GetPipelineControllerGetPipeline200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPipelineControllerGetPipeline200Response:
        """Test GetPipelineControllerGetPipeline200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPipelineControllerGetPipeline200Response`
        """
        model = GetPipelineControllerGetPipeline200Response()
        if include_optional:
            return GetPipelineControllerGetPipeline200Response(
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    self = '', 
                    next = '', 
                    prev = '', 
                    first = '', ),
                data = do_sdk_platform.models.get_pipeline_controller_get_pipeline_200_response_data.GetPipelineController_getPipeline_200_response_data(
                    id = '', 
                    type = '', 
                    attributes = do_sdk_platform.models.pipeline_dto.PipelineDto(
                        name = '', 
                        version = '', 
                        summary = '', 
                        pipeline_language = 'nextflow', 
                        pipeline_language_version = '', 
                        pipeline_url = '', 
                        schema = do_sdk_platform.models.schema.schema(), 
                        sample_schema = do_sdk_platform.models.sample_schema.sampleSchema(), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), )
            )
        else:
            return GetPipelineControllerGetPipeline200Response(
                links = do_sdk_platform.models.http_links_dto.HttpLinksDto(
                    self = '', 
                    next = '', 
                    prev = '', 
                    first = '', ),
                data = do_sdk_platform.models.get_pipeline_controller_get_pipeline_200_response_data.GetPipelineController_getPipeline_200_response_data(
                    id = '', 
                    type = '', 
                    attributes = do_sdk_platform.models.pipeline_dto.PipelineDto(
                        name = '', 
                        version = '', 
                        summary = '', 
                        pipeline_language = 'nextflow', 
                        pipeline_language_version = '', 
                        pipeline_url = '', 
                        schema = do_sdk_platform.models.schema.schema(), 
                        sample_schema = do_sdk_platform.models.sample_schema.sampleSchema(), 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), ),
        )
        """

    def testGetPipelineControllerGetPipeline200Response(self):
        """Test GetPipelineControllerGetPipeline200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
