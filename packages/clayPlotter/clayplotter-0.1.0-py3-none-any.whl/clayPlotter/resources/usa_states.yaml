# Configuration for plotting choropleth maps, initially based on USA settings

# --- Data Selection ---
country_codes: ['US'] # ISO A2 codes of countries to primarily focus on

# Level 1 admin codes (e.g., US state postal codes) for the main map viewport
# Assumes all US codes *except* AK and HI are desired for the main 'lower 48' view.
# This list might need refinement based on the exact codes present in the shapefile.
# A placeholder is used here; the function should dynamically determine these if not explicitly listed.
main_level1_codes: [AL, AZ, AR, CA, CO, CT, DE, DC, FL, GA, ID, IL, IN, IA, KS, KY, LA, ME, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, OH, OK, OR, PA, RI, SC, SD, TN, TX, UT, VT, VA, WA, WV, WI, WY] # Lower 48 + DC

# --- Inset Regions ---
inset_level1_regions:
  - codes: ['AK'] # Alaska
    location: # Parameters for mpl_toolkits.axes_grid1.inset_locator.inset_axes
      width: "25%"
      height: "25%"
      loc: 'lower left'
      bbox_to_anchor: [0.0, 0.0, 1, 1] # Relative to the main axes
      bbox_transform: 'ax.transAxes' # Use main axes' transform
      borderpad: 0
    xlim: [-170, -130]
    ylim: [50, 72]
    include_lakes: false # Specific setting for this inset

  - codes: ['HI'] # Hawaii
    location:
      width: "15%"
      height: "15%"
      loc: 'lower left'
      bbox_to_anchor: [0.25, 0.0, 1, 1] # Offset slightly more from AK
      bbox_transform: 'ax.transAxes'
      borderpad: 0
    xlim: [-160.5, -154.5]
    ylim: [18.5, 22.5]
    include_lakes: false

# --- Main Map View Settings ---
main_map_settings:
  xlim: [-130, -65]
  ylim: [24, 50]   # Reverted northern limit
  target_crs: 'EPSG:5070' # Added projection for CONUS Albers
  include_lakes: true # Plot lakes on the main map
  include_neighboring_countries: true # Plot neighboring countries (e.g., CA, MX)
  include_neighboring_level1: true # Plot neighboring L1 regions (e.g., Canadian provinces)
  include_lake_names: ['Lake Superior', 'Lake Michigan', 'Lake Huron', 'Lake Erie', 'Lake Ontario'] # Specific lakes to plot

# --- Styling ---
styling:
  cmap: 'bwr_r' # Default colormap for data values (red, white, blue) reverse
  missing_color: 'lightgrey'
  lake_color: 'aliceblue'
  lake_edge_color: 'darkgrey'
  lake_linewidth: 0.3
  level1_edge_color: 'darkgrey' # Softer border color
  level1_linewidth: 0.5
  country_color: 'lightgrey' # Fill color for neighboring countries
  country_edge_color: 'darkgrey'
  country_linewidth: 0.5
  neighbor_l1_edgecolor: 'darkgrey' # Edge color for neighboring L1 regions
  neighbor_l1_linewidth: 0.5
  neighbor_l1_linestyle: '--'
  neighbor_l1_fill_color: 'lightgrey' # Fill color for neighboring L1 regions
  ocean_color: 'aliceblue' # Background color for the axes (ocean)

# --- Label Settings ---
label_settings:
  add_labels: true
  level1_code_column: 'postal' # Column name in the GeoDataFrame holding the L1 code (e.g., 'postal' for US)
  value_format: "{:.0f}" # Format string for the value part of the label (e.g., "{:.0f}" for integer)
  label_format: "{code} - {value}" # Format string for the full label text
  na_value_text: "N/A" # Text to display if value is missing
  label_fontsize: 8 # Increased label size
  annotation_fontsize: 8 # Increased annotation size
  label_bbox_style: # Settings for matplotlib.text.Text.set_bbox
    boxstyle: "round,pad=0.3" # Use round boxstyle with more padding
    fc: "white"
    ec: "darkgrey" # Add a subtle edge color
    alpha: 0.8 # Slightly less transparent
  annotation_bbox_style: # Settings for annotation bbox
    boxstyle: "round,pad=0.3" # Use round boxstyle with more padding
    fc: "white"
    ec: "darkgrey" # Add a subtle edge color
    alpha: 0.8 # Slightly less transparent
  annotation_arrowprops: # Settings for annotation arrow
    arrowstyle: "-"
    color: 'gray'
    lw: 0.5

  # L1 codes requiring offset labels (annotations) are defined solely by the keys in 'offsets' below
  # Offsets for small_regions (mapping L1 code to [lon_offset, lat_offset])
  offsets:
    'RI': [260000, -20000]      
    'CT': [200000, -80000] 
    'NJ': [180000, -60000]
    'MD': [270000, -200000]
    'DC': [300000, -350000]
    'VT': [-50000, 160000] 
    'NH': [180000, -90000] 
    'MA': [250000, 10000]    
    'DE': [250000, -50000]      

  # L1 codes requiring label placement within a clipped portion of their geometry
  # Format: 'L1_CODE': ['clip_side', clip_percentage]
  # clip_side can be 'top', 'bottom', 'left', 'right'
  clipped_regions:
    'ID': ['bottom', 0.5]
    'KY': ['bottom', 0.7]
    'MI': ['bottom', 0.35]
    'VA': ['right', 0.45]
    'NC': ['top', 0.8]
    'NV': ['top', 0.5]
    'PA': ['bottom', 0.8]
    'MT': ['top', 0.9]
    'LA': ['bottom', 0.7]
    # 'AK': ['top', 0.5] # Handled separately
    'SD': ['top', 0.9]
    'NY': ['right', 0.6]

  # Special handling for specific inset labels
  inset_label_handling:
    'HI': # Settings specific to Hawaii's label
      positioning: 'relative_to_largest_polygon' # Method to find anchor point
      anchor_point: 'centroid' # Point on the largest polygon to anchor from
      placement: # Where to place the label relative to the anchor
        ha: 'left'
        va: 'center'
        # Use relative positioning within the inset axes instead of fixed offsets
        x_rel: 0.1 # 10% from the left edge of the inset axes
        y_rel: 'centroid_y' # Align vertically with the anchor centroid

# --- Figure Settings ---
figure:
  figsize: [18, 10] # Wider figure aspect ratio
  title: 'Level 1 Admin Choropleth' # Generic title
  title_fontsize: 20 # Increased font size for the title
  tight_layout_rect: [0, 0.03, 1, 0.95] # Arguments for plt.tight_layout

# --- Data Loading/Preparation Hints (Informational) ---
# These are not directly used by the plotting function but help understand data needs
data_hints:
  geopackage_layer: 'ne_50m_admin_1_states_provinces' # Layer for primary US states data
  level1_name_column: 'NAME' # Expected column name for L1 admin region name (e.g., 'NAME' for US states)
  level1_code_column: 'postal' # Expected column name for L1 admin region code (e.g., 'postal' for US states)
  country_code_column: 'iso_a2' # Expected column name for country ISO code in L1 shapefile
  neighboring_country_codes: ['CA', 'MX'] # ISO A2 codes considered neighbors
  neighboring_country_name_column: 'ADMIN' # Potential column name for country name in country shapefile (fallback: NAME, SOVEREIGNT)
  lake_name_column: 'name' # Potential column name for lake name (fallback: name_en, gn_name)
  great_lakes_names: ['Lake Superior', 'Lake Michigan', 'Lake Huron', 'Lake Erie', 'Lake Ontario']