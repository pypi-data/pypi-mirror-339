[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "sdhdf"
dynamic = ["version"]
description = "A collection of tools for interrogating Spectral-Domain Hierarchical Data Format (SDHDF) files"
authors = [
    {name="Lawrence Toomey"},
    {name="George Hobbs"},
    {name="Alec Thomson"},
]
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Typing :: Typed",
]

dependencies = [
    "numpy >=1.21",
    "astropy >=5",
    "h5py >=3.7",
    "pandas >=1.4",
    "xarray >=2022",
    "matplotlib >=3.5",
    "tables >=3.7",
    "tabulate",
    "dask",
    "distributed",
    "tqdm",
]

[project.optional-dependencies]
dev = [
    "ruff >= 0.9.9",
    "pre-commit",
    "sphinx >=4.2",
    "sphinx_mdinclude >=0.5",
    "sphinx_rtd_theme >=1.1",
    "nbconvert >=7.2",
    "sphinx-autoapi >=2",
    "nox",
    "pytest >=6",
    "pytest-cov >=3",
    "sphinx-argparse",
    "furo",
    "nbsphinx",
    "myst_parser",
    "sphinx_autodoc_typehints",
    "jupyter",
    "ipykernel",
    "ipython",
]

[tool.hatch]
version.source = "vcs"
build.hooks.vcs.version-file = "sdhdf/_version.py"

[project.urls]
Homepage = "https://bitbucket.csiro.au/projects/CPDA/repos/sdhdf_tools/browse"
"Bug Tracker" = "https://jira.csiro.au/projects/CPDA/"

[tool.ruff]
extend-exclude = ["examples/*.py", "docs/conf.py"]

[tool.ruff.lint]
extend-select = [
    "B",   # flake8-bugbear
    "I",   # isort
    "ARG", # flake8-unused-arguments
    "C4",  # flake8-comprehensions
    "EM",  # flake8-errmsg
    "ICN", # flake8-import-conventions
    "G",   # flake8-logging-format
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-return
    "RUF", # Ruff-specific
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "UP",  # pyupgrade
    "YTT", # flake8-2020
    "EXE", # flake8-executable
    "NPY", # NumPy specific rules
    "PD",  # pandas-vet,
    "RET", # flake8-return
]
ignore = [
    "PLR09",   # Too many <...>
    "PLR2004", # Magic value used in comparison
    "ISC001",  # Conflicts with formatter
]
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["spinifex._compat.typing"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["T20", "E402"]
"docs/examples/*" = ["T20", "E402", "T201"]
"docs/examples/*.ipynb" = ["T20", "E402", "T201"]
"*.ipynb" = ["T20", "E402", "T201"]
