[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[project]
name = "agentic-kernel"
version = "0.1.22"
description = "A Python library for building agentic applications"
authors = [
    {name = "Qredence.ai", email = "contact@qredence.ai"}
]
requires-python = ">=3.10,<=3.13"
readme = "README.md"
license = "MIT"
license-files = ["LICENSE*", "CHANGELOG.md"]
keywords = ["ai", "agents", "automation", "semantic-kernel", "langchain", "openai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence"
]
dependencies = [
    # Core dependencies
    "pydantic>=2.6.3,<3.0.0",
    "aiohttp>=3.11.14,<4.0.0",
    "python-dotenv>=1.0.1,<2.0.0",
    "requests>=2.31.0,<3.0.0",

    # Azure dependencies
    "azure-core>=1.30.1,<2.0.0",
    "azure-identity>=1.15.0,<2.0.0",
    "azure-storage-blob>=12.19.0,<13.0.0",
    "azure-ai-projects>=1.0.0b6,<2.0.0",
    "azure-ai-inference>=1.0.0b1,<2.0.0",
    "azure-ai-evaluation>=1.0.0b1,<2.0.0",
    "azure-search-documents==11.6.0b10",
    "azure-ai-documentintelligence==1.0.1",

    # AI/ML dependencies
    "semantic-kernel>=1.27.1,<2.0.0",
    "openai>=1.67.0,<2.0.0",
    "langchain>=0.0.309,<1.0.0",
    "mem0ai>=0.1.86",

    # UI/Interaction dependencies
    "chainlit>=2.4.400,<3.0.0",
    "playwright>=1.51.0,<2.0.0",
    "pyautogui>=0.9.54,<1.0.0",

    # Database/Storage
    "asyncpg>=0.29.0,<1.0.0",
    "beautifulsoup4>=4.12.2,<5.0.0",

    # CLI/Dev tools
    "typer>=0.15.2,<1.0.0",
    "ruff>=0.11.4,<1.0.0",
    "black>=24.10.0",
    "isort>=5.13.2",
    "mypy>=1.15.0",

    # Testing
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "responses>=0.25.0,<1.0.0"
]

[project.optional-dependencies]
dev = [
    "black>=24.2.0,<25.0.0",
    "isort>=5.13.2,<6.0.0",
    "mypy>=1.9.0,<2.0.0",
    "pylint>=3.1.0,<4.0.0",
    "pytest>=8.3.5,<9.0.0",
    "pytest-asyncio>=0.23.0,<1.0.0"
]

[project.urls]
Homepage = "https://github.com/qredence/agentic-kernel"
Documentation = "https://github.com/qredence/agentic-kernel/docs"
Repository = "https://github.com/qredence/agentic-kernel.git"
"Bug Tracker" = "https://github.com/qredence/agentic-kernel/issues"
Changelog = "https://github.com/qredence/agentic-kernel/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/agentic_kernel"]

[tool.hatch.envs.default]
dependencies = [
    "coverage[toml]>=7.4.0",
    "pytest"
]

[tool.hatch.envs.test]
dependencies = [
    "coverage[toml]>=7.4.0",
    "pytest>=8.3.5",
    "pytest-asyncio>=0.23.0"
]

[tool.hatch.envs.test.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
    "coverage combine",
    "coverage report"
]
cov = [
    "test-cov",
    "cov-report"
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests"
]
python_files = ["test_*.py"]
asyncio_mode = "auto"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true

[tool.pylint.messages_control]
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "C0330",  # bad-continuation
    "C0326"   # bad-whitespace
]

[tool.pylint.format]
max-line-length = 88

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "B", "I"]
ignore = []

[tool.coverage.run]
branch = true
parallel = true
source = ["src/agentic_kernel"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == '__main__':",
    "if TYPE_CHECKING:"
]
ignore_errors = true
omit = [
    "tests/*",
    "setup.py"
]
