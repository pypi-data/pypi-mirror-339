# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

from . import _utilities
import typing
# Export this package's modules as members:
from .provider import *
from ._inputs import *

# Make subpackages available:
if typing.TYPE_CHECKING:
    import pulumiverse_heroku.account as __account
    account = __account
    import pulumiverse_heroku.addon as __addon
    addon = __addon
    import pulumiverse_heroku.app as __app
    app = __app
    import pulumiverse_heroku.build as __build
    build = __build
    import pulumiverse_heroku.cert as __cert
    cert = __cert
    import pulumiverse_heroku.collaborator as __collaborator
    collaborator = __collaborator
    import pulumiverse_heroku.config as __config
    config = __config
    import pulumiverse_heroku.domain as __domain
    domain = __domain
    import pulumiverse_heroku.drain as __drain
    drain = __drain
    import pulumiverse_heroku.formation as __formation
    formation = __formation
    import pulumiverse_heroku.pipeline as __pipeline
    pipeline = __pipeline
    import pulumiverse_heroku.review as __review
    review = __review
    import pulumiverse_heroku.slug as __slug
    slug = __slug
    import pulumiverse_heroku.space as __space
    space = __space
    import pulumiverse_heroku.ssl as __ssl
    ssl = __ssl
    import pulumiverse_heroku.team as __team
    team = __team
else:
    account = _utilities.lazy_import('pulumiverse_heroku.account')
    addon = _utilities.lazy_import('pulumiverse_heroku.addon')
    app = _utilities.lazy_import('pulumiverse_heroku.app')
    build = _utilities.lazy_import('pulumiverse_heroku.build')
    cert = _utilities.lazy_import('pulumiverse_heroku.cert')
    collaborator = _utilities.lazy_import('pulumiverse_heroku.collaborator')
    config = _utilities.lazy_import('pulumiverse_heroku.config')
    domain = _utilities.lazy_import('pulumiverse_heroku.domain')
    drain = _utilities.lazy_import('pulumiverse_heroku.drain')
    formation = _utilities.lazy_import('pulumiverse_heroku.formation')
    pipeline = _utilities.lazy_import('pulumiverse_heroku.pipeline')
    review = _utilities.lazy_import('pulumiverse_heroku.review')
    slug = _utilities.lazy_import('pulumiverse_heroku.slug')
    space = _utilities.lazy_import('pulumiverse_heroku.space')
    ssl = _utilities.lazy_import('pulumiverse_heroku.ssl')
    team = _utilities.lazy_import('pulumiverse_heroku.team')

_utilities.register(
    resource_modules="""
[
 {
  "pkg": "heroku",
  "mod": "account/feature",
  "fqn": "pulumiverse_heroku.account",
  "classes": {
   "heroku:account/feature:Feature": "Feature"
  }
 },
 {
  "pkg": "heroku",
  "mod": "addon/addon",
  "fqn": "pulumiverse_heroku.addon",
  "classes": {
   "heroku:addon/addon:Addon": "Addon"
  }
 },
 {
  "pkg": "heroku",
  "mod": "addon/attachment",
  "fqn": "pulumiverse_heroku.addon",
  "classes": {
   "heroku:addon/attachment:Attachment": "Attachment"
  }
 },
 {
  "pkg": "heroku",
  "mod": "app/app",
  "fqn": "pulumiverse_heroku.app",
  "classes": {
   "heroku:app/app:App": "App"
  }
 },
 {
  "pkg": "heroku",
  "mod": "app/config",
  "fqn": "pulumiverse_heroku.app",
  "classes": {
   "heroku:app/config:Config": "Config"
  }
 },
 {
  "pkg": "heroku",
  "mod": "app/configAssociation",
  "fqn": "pulumiverse_heroku.app",
  "classes": {
   "heroku:app/configAssociation:ConfigAssociation": "ConfigAssociation"
  }
 },
 {
  "pkg": "heroku",
  "mod": "app/feature",
  "fqn": "pulumiverse_heroku.app",
  "classes": {
   "heroku:app/feature:Feature": "Feature"
  }
 },
 {
  "pkg": "heroku",
  "mod": "app/release",
  "fqn": "pulumiverse_heroku.app",
  "classes": {
   "heroku:app/release:Release": "Release"
  }
 },
 {
  "pkg": "heroku",
  "mod": "app/webhook",
  "fqn": "pulumiverse_heroku.app",
  "classes": {
   "heroku:app/webhook:Webhook": "Webhook"
  }
 },
 {
  "pkg": "heroku",
  "mod": "build/build",
  "fqn": "pulumiverse_heroku.build",
  "classes": {
   "heroku:build/build:Build": "Build"
  }
 },
 {
  "pkg": "heroku",
  "mod": "cert/cert",
  "fqn": "pulumiverse_heroku.cert",
  "classes": {
   "heroku:cert/cert:Cert": "Cert"
  }
 },
 {
  "pkg": "heroku",
  "mod": "collaborator/collaborator",
  "fqn": "pulumiverse_heroku.collaborator",
  "classes": {
   "heroku:collaborator/collaborator:Collaborator": "Collaborator"
  }
 },
 {
  "pkg": "heroku",
  "mod": "domain/domain",
  "fqn": "pulumiverse_heroku.domain",
  "classes": {
   "heroku:domain/domain:Domain": "Domain"
  }
 },
 {
  "pkg": "heroku",
  "mod": "drain/drain",
  "fqn": "pulumiverse_heroku.drain",
  "classes": {
   "heroku:drain/drain:Drain": "Drain"
  }
 },
 {
  "pkg": "heroku",
  "mod": "formation/formation",
  "fqn": "pulumiverse_heroku.formation",
  "classes": {
   "heroku:formation/formation:Formation": "Formation"
  }
 },
 {
  "pkg": "heroku",
  "mod": "pipeline/configVar",
  "fqn": "pulumiverse_heroku.pipeline",
  "classes": {
   "heroku:pipeline/configVar:ConfigVar": "ConfigVar"
  }
 },
 {
  "pkg": "heroku",
  "mod": "pipeline/coupling",
  "fqn": "pulumiverse_heroku.pipeline",
  "classes": {
   "heroku:pipeline/coupling:Coupling": "Coupling"
  }
 },
 {
  "pkg": "heroku",
  "mod": "pipeline/pipeline",
  "fqn": "pulumiverse_heroku.pipeline",
  "classes": {
   "heroku:pipeline/pipeline:Pipeline": "Pipeline"
  }
 },
 {
  "pkg": "heroku",
  "mod": "review/appConfig",
  "fqn": "pulumiverse_heroku.review",
  "classes": {
   "heroku:review/appConfig:AppConfig": "AppConfig"
  }
 },
 {
  "pkg": "heroku",
  "mod": "slug/slug",
  "fqn": "pulumiverse_heroku.slug",
  "classes": {
   "heroku:slug/slug:Slug": "Slug"
  }
 },
 {
  "pkg": "heroku",
  "mod": "space/appAccess",
  "fqn": "pulumiverse_heroku.space",
  "classes": {
   "heroku:space/appAccess:AppAccess": "AppAccess"
  }
 },
 {
  "pkg": "heroku",
  "mod": "space/inboundRuleset",
  "fqn": "pulumiverse_heroku.space",
  "classes": {
   "heroku:space/inboundRuleset:InboundRuleset": "InboundRuleset"
  }
 },
 {
  "pkg": "heroku",
  "mod": "space/peeringConnectionAccepter",
  "fqn": "pulumiverse_heroku.space",
  "classes": {
   "heroku:space/peeringConnectionAccepter:PeeringConnectionAccepter": "PeeringConnectionAccepter"
  }
 },
 {
  "pkg": "heroku",
  "mod": "space/space",
  "fqn": "pulumiverse_heroku.space",
  "classes": {
   "heroku:space/space:Space": "Space"
  }
 },
 {
  "pkg": "heroku",
  "mod": "space/vpnConnection",
  "fqn": "pulumiverse_heroku.space",
  "classes": {
   "heroku:space/vpnConnection:VpnConnection": "VpnConnection"
  }
 },
 {
  "pkg": "heroku",
  "mod": "ssl/ssl",
  "fqn": "pulumiverse_heroku.ssl",
  "classes": {
   "heroku:ssl/ssl:Ssl": "Ssl"
  }
 },
 {
  "pkg": "heroku",
  "mod": "team/collaborator",
  "fqn": "pulumiverse_heroku.team",
  "classes": {
   "heroku:team/collaborator:Collaborator": "Collaborator"
  }
 },
 {
  "pkg": "heroku",
  "mod": "team/member",
  "fqn": "pulumiverse_heroku.team",
  "classes": {
   "heroku:team/member:Member": "Member"
  }
 }
]
""",
    resource_packages="""
[
 {
  "pkg": "heroku",
  "token": "pulumi:providers:heroku",
  "fqn": "pulumiverse_heroku",
  "class": "Provider"
 }
]
"""
)
