[tool.poetry]
name = "warg-shell"
version = "1.1.0"
description = "DigitalOcean Warg - SSH-like connection to DigitalOcean PaaS console"
authors = ["RÃ©my Sanchez <remy.sanchez@hyperthese.net>"]
license = "WTFPL"
readme = "README.md"
packages = [
    { include = "warg_shell", from = "src" },
]

[tool.poetry.scripts]
warg-shell = 'warg_shell._cli:main'

[tool.poetry.dependencies]
python = "^3.10"
websockets = "*"
rich-click = "*"
rich = "*"
click = "*"
keyring = "*"
httpx = "*"
psutil = "*"


[tool.poetry.group.dev.dependencies]
ruff = "*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff.lint]
select = [
    # -- Core --
    "E",  # pycodestyle (errors)
    "W",  # pycodestyle (warnings)
    "F",  # Pyflakes
    "I",  # isort
    "C90",  # McCabe Complexity
    "D1",  # Mandatory docstrings
    "S",  # Bandit

    # -- Bonus --
    "A",  # flake8-bugbear
    "B",  # flake8-bugbear
    "DTZ",  # date/time zone
    "T10",  # debugger
    "EM",  # error messages
    "EXE",  # executable
    "G",  # logging
    "UP",  # pyupgrade
    "ASYNC",  # async
    "INP",  # PEP 420
    "T20",  # no print
    "PT",  # pytest
    "SLOT",  # slots
    "TCH",  # type checking blocks
    "PTH",  # Use pathlib
    "FIX",  # Don't allow not done stuff in code
    "ERA",  # Don't comment code
    "RUF",  # Ruff stuff
    "TID251",  # See below
]

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"requests".msg = "Use `httpx` instead, which has timeouts by default."

[tool.ruff.lint.pydocstyle]
convention = "numpy"
