name: On Release

on:
  release:
    types: [published]

jobs:
  test:
    uses: ./.github/workflows/pytest-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  static-type-check:
    uses: ./.github/workflows/static-type-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  code-style-check:
    uses: ./.github/workflows/code-style-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
  build:
    needs: [test, static-type-check, code-style-check]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync --dev
      - name: Build the package
        run: |
          uv build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: dist/
  deploy-to-github:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/
      - name: Upload wheel and tar.gz to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*.whl
            dist/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RELEASE_ID: ${{ github.event.release.id }}
  deploy-to-PyPI:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install uv
          uv sync --dev
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist/
      - name: Upload to PyPI
        run: |
          uv run twine upload dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          TWINE_REPOSITORY_URL: https://upload.pypi.org/legacy/
          TWINE_SKIP_EXISTING: true
