# Generated by Django 4.1.9 on 2023-07-03 20:16

import aleksis.core.managers
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("resint", "0008_public_live_documents"),
    ]

    operations = [
        migrations.AlterModelManagers(
            name="poster",
            managers=[
                ("objects", aleksis.core.managers.AlekSISBaseManager()),
            ],
        ),
        migrations.AlterModelManagers(
            name="postergroup",
            managers=[
                ("objects", aleksis.core.managers.AlekSISBaseManager()),
            ],
        ),
        migrations.AddField(
            model_name="livedocument",
            name="managed_by_app_label",
            field=models.CharField(
                blank=True,
                editable=False,
                max_length=255,
                verbose_name="App label of app responsible for managing this instance",
            ),
        ),
        migrations.AddField(
            model_name="poster",
            name="managed_by_app_label",
            field=models.CharField(
                blank=True,
                editable=False,
                max_length=255,
                verbose_name="App label of app responsible for managing this instance",
            ),
        ),
        migrations.AddField(
            model_name="postergroup",
            name="managed_by_app_label",
            field=models.CharField(
                blank=True,
                editable=False,
                max_length=255,
                verbose_name="App label of app responsible for managing this instance",
            ),
        ),
        migrations.AlterField(
            model_name="livedocument",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_%(app_label)s.%(class)s_set+",
                to="contenttypes.contenttype",
            ),
        ),
    ]
