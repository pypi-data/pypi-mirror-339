---
# /tasks/main.yml
#
# ansible-galaxy collection install community.libvirt

- name: Create file to add device
  template:
    src: device.j2
    dest: /tmp/{{ device }}.yml
    mode: 0600
  when: mac is not defined and (operation == 'attach' or operation == 'detach')

- name: Create file to add device
  template:
    src: device_with_mac.j2
    dest: /tmp/{{ device }}.yml
    mode: 0600
  when: mac is defined and (operation == 'attach' or operation == 'detach')

- name: Add PCI Card to VM
  ansible.builtin.shell:
    virsh attach-device {{ kvmguest_name }} /tmp/{{ device }}.yml --live --persistent
  when: operation == 'attach'

- name: Remove PCI Card to VM
  ansible.builtin.shell:
    virsh detach-device {{ kvmguest_name }} /tmp/{{ device }}.yml --live --persistent
  when: operation == 'detach'

- name: Delete file
  file:
    path: /tmp/{{ device }}.yml
    state: absent
  when: operation == 'attach' or operation == 'detach'

- name: Get PCI Device Number from the Host
  ansible.builtin.shell:
    lspci -n | grep {{ bdf }} | awk '{print $3}'
  when: operation == 'attach'
  register: pci_device_number

- set_fact:
    pci_device_number: "{{ pci_device_number.stdout }}"
  when: operation == 'attach'

- name: Run pcie_disable_fatal.sh for each PCI device
  command: "/opt/mlnx-scripts/pcie_disable_fatal.sh {{ item | regex_replace('^0000:', '') }}"
  loop: "{{ bdf }}"
  when: operation == 'rescan' and pci_ids is defined

- name: Remove each PCI device
  command: "echo 1 > /sys/bus/pci/devices/{{ item }}/remove"
  loop: "{{ bdf }}"
  when: operation == 'rescan' and pci_ids is defined

- name: Rescan PCI bus
  command: "echo 1 > /sys/bus/pci/rescan"
  when: operation == 'rescan'