# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/ragas_annotator',
                'doc_host': 'https://explodinggradients.github.io',
                'git_url': 'https://github.com/explodinggradients/ragas_annotator',
                'lib_path': 'ragas_annotator'},
  'syms': { 'ragas_annotator.backends.factory': { 'ragas_annotator.backends.factory.NotionBackendFactory': ( 'backends/factory.html#notionbackendfactory',
                                                                                                             'ragas_annotator/backends/factory.py'),
                                                  'ragas_annotator.backends.factory.NotionBackendFactory.create': ( 'backends/factory.html#notionbackendfactory.create',
                                                                                                                    'ragas_annotator/backends/factory.py'),
                                                  'ragas_annotator.backends.factory.NotionClientFactory': ( 'backends/factory.html#notionclientfactory',
                                                                                                            'ragas_annotator/backends/factory.py'),
                                                  'ragas_annotator.backends.factory.NotionClientFactory.create': ( 'backends/factory.html#notionclientfactory.create',
                                                                                                                   'ragas_annotator/backends/factory.py')},
            'ragas_annotator.backends.mock_notion': { 'ragas_annotator.backends.mock_notion.MockBlockChildrenAPI': ( 'backends/mock_notion_client.html#mockblockchildrenapi',
                                                                                                                     'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockBlockChildrenAPI.__init__': ( 'backends/mock_notion_client.html#mockblockchildrenapi.__init__',
                                                                                                                              'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockBlockChildrenAPI.list': ( 'backends/mock_notion_client.html#mockblockchildrenapi.list',
                                                                                                                          'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockBlocksAPI': ( 'backends/mock_notion_client.html#mockblocksapi',
                                                                                                              'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockBlocksAPI.__init__': ( 'backends/mock_notion_client.html#mockblocksapi.__init__',
                                                                                                                       'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockBlocksAPI.retrieve': ( 'backends/mock_notion_client.html#mockblocksapi.retrieve',
                                                                                                                       'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockDatabasesAPI': ( 'backends/mock_notion_client.html#mockdatabasesapi',
                                                                                                                 'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockDatabasesAPI.__init__': ( 'backends/mock_notion_client.html#mockdatabasesapi.__init__',
                                                                                                                          'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockDatabasesAPI._extract_title': ( 'backends/mock_notion_client.html#mockdatabasesapi._extract_title',
                                                                                                                                'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockDatabasesAPI.create': ( 'backends/mock_notion_client.html#mockdatabasesapi.create',
                                                                                                                        'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockDatabasesAPI.query': ( 'backends/mock_notion_client.html#mockdatabasesapi.query',
                                                                                                                       'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockDatabasesAPI.retrieve': ( 'backends/mock_notion_client.html#mockdatabasesapi.retrieve',
                                                                                                                          'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient': ( 'backends/mock_notion_client.html#mocknotionclient',
                                                                                                                 'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient.__init__': ( 'backends/mock_notion_client.html#mocknotionclient.__init__',
                                                                                                                          'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient.__str__': ( 'backends/mock_notion_client.html#mocknotionclient.__str__',
                                                                                                                         'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient._create_id': ( 'backends/mock_notion_client.html#mocknotionclient._create_id',
                                                                                                                            'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient._get_timestamp': ( 'backends/mock_notion_client.html#mocknotionclient._get_timestamp',
                                                                                                                                'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient.add_block': ( 'backends/mock_notion_client.html#mocknotionclient.add_block',
                                                                                                                           'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient.add_children': ( 'backends/mock_notion_client.html#mocknotionclient.add_children',
                                                                                                                              'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient.add_database': ( 'backends/mock_notion_client.html#mocknotionclient.add_database',
                                                                                                                              'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockNotionClient.add_page': ( 'backends/mock_notion_client.html#mocknotionclient.add_page',
                                                                                                                          'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockPagesAPI': ( 'backends/mock_notion_client.html#mockpagesapi',
                                                                                                             'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockPagesAPI.__init__': ( 'backends/mock_notion_client.html#mockpagesapi.__init__',
                                                                                                                      'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockPagesAPI._extract_title': ( 'backends/mock_notion_client.html#mockpagesapi._extract_title',
                                                                                                                            'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockPagesAPI.create': ( 'backends/mock_notion_client.html#mockpagesapi.create',
                                                                                                                    'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockPagesAPI.retrieve': ( 'backends/mock_notion_client.html#mockpagesapi.retrieve',
                                                                                                                      'ragas_annotator/backends/mock_notion.py'),
                                                      'ragas_annotator.backends.mock_notion.MockPagesAPI.update': ( 'backends/mock_notion_client.html#mockpagesapi.update',
                                                                                                                    'ragas_annotator/backends/mock_notion.py')},
            'ragas_annotator.backends.notion_backend': { 'ragas_annotator.backends.notion_backend.NotionBackend': ( 'backends/notion.html#notionbackend',
                                                                                                                    'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.__init__': ( 'backends/notion.html#notionbackend.__init__',
                                                                                                                             'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.__repr__': ( 'backends/notion.html#notionbackend.__repr__',
                                                                                                                             'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.create_new_database': ( 'backends/notion.html#notionbackend.create_new_database',
                                                                                                                                        'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.create_new_page': ( 'backends/notion.html#notionbackend.create_new_page',
                                                                                                                                    'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.create_page_in_database': ( 'backends/notion.html#notionbackend.create_page_in_database',
                                                                                                                                            'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.get_database': ( 'backends/notion.html#notionbackend.get_database',
                                                                                                                                 'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.get_database_id': ( 'backends/notion.html#notionbackend.get_database_id',
                                                                                                                                    'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.get_page_id': ( 'backends/notion.html#notionbackend.get_page_id',
                                                                                                                                'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.page_exists': ( 'backends/notion.html#notionbackend.page_exists',
                                                                                                                                'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.query_database': ( 'backends/notion.html#notionbackend.query_database',
                                                                                                                                   'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.update_page': ( 'backends/notion.html#notionbackend.update_page',
                                                                                                                                'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.NotionBackend.validate_project_structure': ( 'backends/notion.html#notionbackend.validate_project_structure',
                                                                                                                                               'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.get_database_id': ( 'backends/notion.html#get_database_id',
                                                                                                                      'ragas_annotator/backends/notion_backend.py'),
                                                         'ragas_annotator.backends.notion_backend.get_page_id': ( 'backends/notion.html#get_page_id',
                                                                                                                  'ragas_annotator/backends/notion_backend.py')},
            'ragas_annotator.core': {'ragas_annotator.core.foo': ('core.html#foo', 'ragas_annotator/core.py')},
            'ragas_annotator.dataset': { 'ragas_annotator.dataset.Dataset': ('dataset.html#dataset', 'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.__getitem__': ( 'dataset.html#dataset.__getitem__',
                                                                                          'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.__init__': ( 'dataset.html#dataset.__init__',
                                                                                       'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.__iter__': ( 'dataset.html#dataset.__iter__',
                                                                                       'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.__len__': ( 'dataset.html#dataset.__len__',
                                                                                      'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.__repr__': ( 'dataset.html#dataset.__repr__',
                                                                                       'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.__setitem__': ( 'dataset.html#dataset.__setitem__',
                                                                                          'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.append': ( 'dataset.html#dataset.append',
                                                                                     'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.get': ('dataset.html#dataset.get', 'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.load': ( 'dataset.html#dataset.load',
                                                                                   'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.pop': ('dataset.html#dataset.pop', 'ragas_annotator/dataset.py'),
                                         'ragas_annotator.dataset.Dataset.save': ( 'dataset.html#dataset.save',
                                                                                   'ragas_annotator/dataset.py')},
            'ragas_annotator.embedding.base': { 'ragas_annotator.embedding.base.BaseEmbedding': ( 'embedding/base.html#baseembedding',
                                                                                                  'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.BaseEmbedding.aembed_document': ( 'embedding/base.html#baseembedding.aembed_document',
                                                                                                                  'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.BaseEmbedding.aembed_text': ( 'embedding/base.html#baseembedding.aembed_text',
                                                                                                              'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.BaseEmbedding.embed_document': ( 'embedding/base.html#baseembedding.embed_document',
                                                                                                                 'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.BaseEmbedding.embed_text': ( 'embedding/base.html#baseembedding.embed_text',
                                                                                                             'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.OpenAIEmbeddings': ( 'embedding/base.html#openaiembeddings',
                                                                                                     'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.OpenAIEmbeddings.__init__': ( 'embedding/base.html#openaiembeddings.__init__',
                                                                                                              'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.OpenAIEmbeddings.aembed_document': ( 'embedding/base.html#openaiembeddings.aembed_document',
                                                                                                                     'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.OpenAIEmbeddings.aembed_text': ( 'embedding/base.html#openaiembeddings.aembed_text',
                                                                                                                 'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.OpenAIEmbeddings.embed_document': ( 'embedding/base.html#openaiembeddings.embed_document',
                                                                                                                    'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.OpenAIEmbeddings.embed_text': ( 'embedding/base.html#openaiembeddings.embed_text',
                                                                                                                'ragas_annotator/embedding/base.py'),
                                                'ragas_annotator.embedding.base.ragas_embedding': ( 'embedding/base.html#ragas_embedding',
                                                                                                    'ragas_annotator/embedding/base.py')},
            'ragas_annotator.exceptions': { 'ragas_annotator.exceptions.DuplicateError': ( 'utils/exceptions.html#duplicateerror',
                                                                                           'ragas_annotator/exceptions.py'),
                                            'ragas_annotator.exceptions.NotFoundError': ( 'utils/exceptions.html#notfounderror',
                                                                                          'ragas_annotator/exceptions.py'),
                                            'ragas_annotator.exceptions.ValidationError': ( 'utils/exceptions.html#validationerror',
                                                                                            'ragas_annotator/exceptions.py')},
            'ragas_annotator.experiment': { 'ragas_annotator.experiment.Experiment': ( 'experiment.html#experiment',
                                                                                       'ragas_annotator/experiment.py'),
                                            'ragas_annotator.experiment.Experiment.__init__': ( 'experiment.html#experiment.__init__',
                                                                                                'ragas_annotator/experiment.py'),
                                            'ragas_annotator.experiment.Experiment.__str__': ( 'experiment.html#experiment.__str__',
                                                                                               'ragas_annotator/experiment.py')},
            'ragas_annotator.llm.llm': { 'ragas_annotator.llm.llm.RagasLLM': ('llm/llm.html#ragasllm', 'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.RagasLLM.__init__': ( 'llm/llm.html#ragasllm.__init__',
                                                                                        'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.RagasLLM._check_client_async': ( 'llm/llm.html#ragasllm._check_client_async',
                                                                                                   'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.RagasLLM._initialize_client': ( 'llm/llm.html#ragasllm._initialize_client',
                                                                                                  'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.RagasLLM._run_async_in_current_loop': ( 'llm/llm.html#ragasllm._run_async_in_current_loop',
                                                                                                          'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.RagasLLM.agenerate': ( 'llm/llm.html#ragasllm.agenerate',
                                                                                         'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.RagasLLM.generate': ( 'llm/llm.html#ragasllm.generate',
                                                                                        'ragas_annotator/llm/llm.py'),
                                         'ragas_annotator.llm.llm.ragas_llm': ('llm/llm.html#ragas_llm', 'ragas_annotator/llm/llm.py')},
            'ragas_annotator.metric.base': { 'ragas_annotator.metric.base.Metric': ( 'metric/base.html#metric',
                                                                                     'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric.__post_init__': ( 'metric/base.html#metric.__post_init__',
                                                                                                   'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric._ensemble': ( 'metric/base.html#metric._ensemble',
                                                                                               'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric._get_response_model': ( 'metric/base.html#metric._get_response_model',
                                                                                                         'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric.abatch_score': ( 'metric/base.html#metric.abatch_score',
                                                                                                  'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric.ascore': ( 'metric/base.html#metric.ascore',
                                                                                            'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric.batch_score': ( 'metric/base.html#metric.batch_score',
                                                                                                 'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric.score': ( 'metric/base.html#metric.score',
                                                                                           'ragas_annotator/metric/base.py'),
                                             'ragas_annotator.metric.base.Metric.train': ( 'metric/base.html#metric.train',
                                                                                           'ragas_annotator/metric/base.py')},
            'ragas_annotator.metric.decorator': { 'ragas_annotator.metric.decorator.create_metric_decorator': ( 'metric/decorator.html#create_metric_decorator',
                                                                                                                'ragas_annotator/metric/decorator.py')},
            'ragas_annotator.metric.discrete': { 'ragas_annotator.metric.discrete.DiscreteMetric': ( 'metric/discrete.html#discretemetric',
                                                                                                     'ragas_annotator/metric/discrete.py'),
                                                 'ragas_annotator.metric.discrete.DiscreteMetric._ensemble': ( 'metric/discrete.html#discretemetric._ensemble',
                                                                                                               'ragas_annotator/metric/discrete.py'),
                                                 'ragas_annotator.metric.discrete.DiscreteMetric._get_response_model': ( 'metric/discrete.html#discretemetric._get_response_model',
                                                                                                                         'ragas_annotator/metric/discrete.py')},
            'ragas_annotator.metric.numeric': { 'ragas_annotator.metric.numeric.NumericMetric': ( 'metric/numeric.html#numericmetric',
                                                                                                  'ragas_annotator/metric/numeric.py'),
                                                'ragas_annotator.metric.numeric.NumericMetric._ensemble': ( 'metric/numeric.html#numericmetric._ensemble',
                                                                                                            'ragas_annotator/metric/numeric.py'),
                                                'ragas_annotator.metric.numeric.NumericMetric._get_response_model': ( 'metric/numeric.html#numericmetric._get_response_model',
                                                                                                                      'ragas_annotator/metric/numeric.py')},
            'ragas_annotator.metric.ranking': { 'ragas_annotator.metric.ranking.RankingMetric': ( 'metric/ranking.html#rankingmetric',
                                                                                                  'ragas_annotator/metric/ranking.py'),
                                                'ragas_annotator.metric.ranking.RankingMetric._ensemble': ( 'metric/ranking.html#rankingmetric._ensemble',
                                                                                                            'ragas_annotator/metric/ranking.py'),
                                                'ragas_annotator.metric.ranking.RankingMetric._get_response_model': ( 'metric/ranking.html#rankingmetric._get_response_model',
                                                                                                                      'ragas_annotator/metric/ranking.py')},
            'ragas_annotator.metric.result': { 'ragas_annotator.metric.result.MetricResult': ( 'metric/result.html#metricresult',
                                                                                               'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__add__': ( 'metric/result.html#metricresult.__add__',
                                                                                                       'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__eq__': ( 'metric/result.html#metricresult.__eq__',
                                                                                                      'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__float__': ( 'metric/result.html#metricresult.__float__',
                                                                                                         'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__ge__': ( 'metric/result.html#metricresult.__ge__',
                                                                                                      'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__getattr__': ( 'metric/result.html#metricresult.__getattr__',
                                                                                                           'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__getitem__': ( 'metric/result.html#metricresult.__getitem__',
                                                                                                           'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__gt__': ( 'metric/result.html#metricresult.__gt__',
                                                                                                      'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__init__': ( 'metric/result.html#metricresult.__init__',
                                                                                                        'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__int__': ( 'metric/result.html#metricresult.__int__',
                                                                                                       'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__iter__': ( 'metric/result.html#metricresult.__iter__',
                                                                                                        'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__le__': ( 'metric/result.html#metricresult.__le__',
                                                                                                      'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__len__': ( 'metric/result.html#metricresult.__len__',
                                                                                                       'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__lt__': ( 'metric/result.html#metricresult.__lt__',
                                                                                                      'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__mul__': ( 'metric/result.html#metricresult.__mul__',
                                                                                                       'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__radd__': ( 'metric/result.html#metricresult.__radd__',
                                                                                                        'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__repr__': ( 'metric/result.html#metricresult.__repr__',
                                                                                                        'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__rmul__': ( 'metric/result.html#metricresult.__rmul__',
                                                                                                        'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__rsub__': ( 'metric/result.html#metricresult.__rsub__',
                                                                                                        'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__rtruediv__': ( 'metric/result.html#metricresult.__rtruediv__',
                                                                                                            'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__str__': ( 'metric/result.html#metricresult.__str__',
                                                                                                       'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__sub__': ( 'metric/result.html#metricresult.__sub__',
                                                                                                       'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.__truediv__': ( 'metric/result.html#metricresult.__truediv__',
                                                                                                           'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.result': ( 'metric/result.html#metricresult.result',
                                                                                                      'ragas_annotator/metric/result.py'),
                                               'ragas_annotator.metric.result.MetricResult.to_dict': ( 'metric/result.html#metricresult.to_dict',
                                                                                                       'ragas_annotator/metric/result.py')},
            'ragas_annotator.model.notion_model': { 'ragas_annotator.model.notion_model.NotionModel': ( 'model/notion_model.html#notionmodel',
                                                                                                        'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModel.__getattr__': ( 'model/notion_model.html#notionmodel.__getattr__',
                                                                                                                    'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModel.__init__': ( 'model/notion_model.html#notionmodel.__init__',
                                                                                                                 'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModel.__repr__': ( 'model/notion_model.html#notionmodel.__repr__',
                                                                                                                 'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModel.__setattr__': ( 'model/notion_model.html#notionmodel.__setattr__',
                                                                                                                    'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModel.from_notion': ( 'model/notion_model.html#notionmodel.from_notion',
                                                                                                                    'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModel.to_notion': ( 'model/notion_model.html#notionmodel.to_notion',
                                                                                                                  'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModelMeta': ( 'model/notion_model.html#notionmodelmeta',
                                                                                                            'ragas_annotator/model/notion_model.py'),
                                                    'ragas_annotator.model.notion_model.NotionModelMeta.__new__': ( 'model/notion_model.html#notionmodelmeta.__new__',
                                                                                                                    'ragas_annotator/model/notion_model.py')},
            'ragas_annotator.model.notion_typing': { 'ragas_annotator.model.notion_typing.Field': ( 'model/notion_types.html#field',
                                                                                                    'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field.__get__': ( 'model/notion_types.html#field.__get__',
                                                                                                            'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field.__init__': ( 'model/notion_types.html#field.__init__',
                                                                                                             'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field.__set__': ( 'model/notion_types.html#field.__set__',
                                                                                                            'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field.__set_name__': ( 'model/notion_types.html#field.__set_name__',
                                                                                                                 'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field._from_notion': ( 'model/notion_types.html#field._from_notion',
                                                                                                                 'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field._to_notion': ( 'model/notion_types.html#field._to_notion',
                                                                                                               'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field._to_notion_property': ( 'model/notion_types.html#field._to_notion_property',
                                                                                                                        'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Field.validate': ( 'model/notion_types.html#field.validate',
                                                                                                             'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID': ( 'model/notion_types.html#id',
                                                                                                 'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID.__init__': ( 'model/notion_types.html#id.__init__',
                                                                                                          'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID.__new__': ( 'model/notion_types.html#id.__new__',
                                                                                                         'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID._from_notion': ( 'model/notion_types.html#id._from_notion',
                                                                                                              'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID._to_notion': ( 'model/notion_types.html#id._to_notion',
                                                                                                            'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID._to_notion_property': ( 'model/notion_types.html#id._to_notion_property',
                                                                                                                     'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.ID.validate': ( 'model/notion_types.html#id.validate',
                                                                                                          'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect': ( 'model/notion_types.html#multiselect',
                                                                                                          'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect.__init__': ( 'model/notion_types.html#multiselect.__init__',
                                                                                                                   'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect.__new__': ( 'model/notion_types.html#multiselect.__new__',
                                                                                                                  'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect._from_notion': ( 'model/notion_types.html#multiselect._from_notion',
                                                                                                                       'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect._to_notion': ( 'model/notion_types.html#multiselect._to_notion',
                                                                                                                     'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect._to_notion_property': ( 'model/notion_types.html#multiselect._to_notion_property',
                                                                                                                              'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.MultiSelect.validate': ( 'model/notion_types.html#multiselect.validate',
                                                                                                                   'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select': ( 'model/notion_types.html#select',
                                                                                                     'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select.__init__': ( 'model/notion_types.html#select.__init__',
                                                                                                              'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select.__new__': ( 'model/notion_types.html#select.__new__',
                                                                                                             'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select._from_notion': ( 'model/notion_types.html#select._from_notion',
                                                                                                                  'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select._to_notion': ( 'model/notion_types.html#select._to_notion',
                                                                                                                'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select._to_notion_property': ( 'model/notion_types.html#select._to_notion_property',
                                                                                                                         'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Select.validate': ( 'model/notion_types.html#select.validate',
                                                                                                              'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Text': ( 'model/notion_types.html#text',
                                                                                                   'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Text.__init__': ( 'model/notion_types.html#text.__init__',
                                                                                                            'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Text.__new__': ( 'model/notion_types.html#text.__new__',
                                                                                                           'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Text._from_notion': ( 'model/notion_types.html#text._from_notion',
                                                                                                                'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Text._to_notion': ( 'model/notion_types.html#text._to_notion',
                                                                                                              'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Title': ( 'model/notion_types.html#title',
                                                                                                    'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Title.__init__': ( 'model/notion_types.html#title.__init__',
                                                                                                             'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Title.__new__': ( 'model/notion_types.html#title.__new__',
                                                                                                            'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Title._from_notion': ( 'model/notion_types.html#title._from_notion',
                                                                                                                 'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.Title._to_notion': ( 'model/notion_types.html#title._to_notion',
                                                                                                               'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.URL': ( 'model/notion_types.html#url',
                                                                                                  'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.URL.__init__': ( 'model/notion_types.html#url.__init__',
                                                                                                           'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.URL.__new__': ( 'model/notion_types.html#url.__new__',
                                                                                                          'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.URL._from_notion': ( 'model/notion_types.html#url._from_notion',
                                                                                                               'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.URL._to_notion': ( 'model/notion_types.html#url._to_notion',
                                                                                                             'ragas_annotator/model/notion_typing.py'),
                                                     'ragas_annotator.model.notion_typing.URL.validate': ( 'model/notion_types.html#url.validate',
                                                                                                           'ragas_annotator/model/notion_typing.py')},
            'ragas_annotator.project': { 'ragas_annotator.project.ExperimentProtocol': ( 'project/experiments.html#experimentprotocol',
                                                                                         'ragas_annotator/project.py'),
                                         'ragas_annotator.project.ExperimentProtocol.__call__': ( 'project/experiments.html#experimentprotocol.__call__',
                                                                                                  'ragas_annotator/project.py'),
                                         'ragas_annotator.project.ExperimentProtocol.run_async': ( 'project/experiments.html#experimentprotocol.run_async',
                                                                                                   'ragas_annotator/project.py'),
                                         'ragas_annotator.project.Project.create_experiment': ( 'project/experiments.html#project.create_experiment',
                                                                                                'ragas_annotator/project.py'),
                                         'ragas_annotator.project.Project.experiment': ( 'project/experiments.html#project.experiment',
                                                                                         'ragas_annotator/project.py'),
                                         'ragas_annotator.project.Project.get_experiment': ( 'project/experiments.html#project.get_experiment',
                                                                                             'ragas_annotator/project.py')},
            'ragas_annotator.project.comparison': { 'ragas_annotator.project.comparison.Project.compare_experiments': ( 'project/comparison.html#project.compare_experiments',
                                                                                                                        'ragas_annotator/project/comparison.py'),
                                                    'ragas_annotator.project.comparison._combine_experiments': ( 'project/comparison.html#_combine_experiments',
                                                                                                                 'ragas_annotator/project/comparison.py'),
                                                    'ragas_annotator.project.comparison._get_title_property': ( 'project/comparison.html#_get_title_property',
                                                                                                                'ragas_annotator/project/comparison.py'),
                                                    'ragas_annotator.project.comparison._model_to_dict': ( 'project/comparison.html#_model_to_dict',
                                                                                                           'ragas_annotator/project/comparison.py'),
                                                    'ragas_annotator.project.comparison._validate_experiments': ( 'project/comparison.html#_validate_experiments',
                                                                                                                  'ragas_annotator/project/comparison.py')},
            'ragas_annotator.project.core': { 'ragas_annotator.project.core.Project': ( 'project/core.html#project',
                                                                                        'ragas_annotator/project/core.py'),
                                              'ragas_annotator.project.core.Project.__init__': ( 'project/core.html#project.__init__',
                                                                                                 'ragas_annotator/project/core.py'),
                                              'ragas_annotator.project.core.Project.__repr__': ( 'project/core.html#project.__repr__',
                                                                                                 'ragas_annotator/project/core.py'),
                                              'ragas_annotator.project.core.Project._create_project_structure': ( 'project/core.html#project._create_project_structure',
                                                                                                                  'ragas_annotator/project/core.py'),
                                              'ragas_annotator.project.core.Project.create_dataset': ( 'project/core.html#project.create_dataset',
                                                                                                       'ragas_annotator/project/core.py'),
                                              'ragas_annotator.project.core.Project.get_dataset': ( 'project/core.html#project.get_dataset',
                                                                                                    'ragas_annotator/project/core.py'),
                                              'ragas_annotator.project.core.Project.initialize': ( 'project/core.html#project.initialize',
                                                                                                   'ragas_annotator/project/core.py')},
            'ragas_annotator.project.experiments': { 'ragas_annotator.project.experiments.ExperimentProtocol': ( 'project/experiments.html#experimentprotocol',
                                                                                                                 'ragas_annotator/project/experiments.py'),
                                                     'ragas_annotator.project.experiments.ExperimentProtocol.__call__': ( 'project/experiments.html#experimentprotocol.__call__',
                                                                                                                          'ragas_annotator/project/experiments.py'),
                                                     'ragas_annotator.project.experiments.ExperimentProtocol.run_async': ( 'project/experiments.html#experimentprotocol.run_async',
                                                                                                                           'ragas_annotator/project/experiments.py'),
                                                     'ragas_annotator.project.experiments.Project.create_experiment': ( 'project/experiments.html#project.create_experiment',
                                                                                                                        'ragas_annotator/project/experiments.py'),
                                                     'ragas_annotator.project.experiments.Project.experiment': ( 'project/experiments.html#project.experiment',
                                                                                                                 'ragas_annotator/project/experiments.py'),
                                                     'ragas_annotator.project.experiments.Project.get_experiment': ( 'project/experiments.html#project.get_experiment',
                                                                                                                     'ragas_annotator/project/experiments.py'),
                                                     'ragas_annotator.project.experiments.Project.langfuse_experiment': ( 'project/experiments.html#project.langfuse_experiment',
                                                                                                                          'ragas_annotator/project/experiments.py')},
            'ragas_annotator.project.naming': { 'ragas_annotator.project.naming.MemorableNames': ( 'project/naming.html#memorablenames',
                                                                                                   'ragas_annotator/project/naming.py'),
                                                'ragas_annotator.project.naming.MemorableNames.__init__': ( 'project/naming.html#memorablenames.__init__',
                                                                                                            'ragas_annotator/project/naming.py'),
                                                'ragas_annotator.project.naming.MemorableNames.generate_name': ( 'project/naming.html#memorablenames.generate_name',
                                                                                                                 'ragas_annotator/project/naming.py'),
                                                'ragas_annotator.project.naming.MemorableNames.generate_unique_name': ( 'project/naming.html#memorablenames.generate_unique_name',
                                                                                                                        'ragas_annotator/project/naming.py'),
                                                'ragas_annotator.project.naming.MemorableNames.generate_unique_names': ( 'project/naming.html#memorablenames.generate_unique_names',
                                                                                                                         'ragas_annotator/project/naming.py')},
            'ragas_annotator.prompt.base': { 'ragas_annotator.prompt.base.Prompt': ( 'prompt/base.html#prompt',
                                                                                     'ragas_annotator/prompt/base.py'),
                                             'ragas_annotator.prompt.base.Prompt.__init__': ( 'prompt/base.html#prompt.__init__',
                                                                                              'ragas_annotator/prompt/base.py'),
                                             'ragas_annotator.prompt.base.Prompt.__str__': ( 'prompt/base.html#prompt.__str__',
                                                                                             'ragas_annotator/prompt/base.py'),
                                             'ragas_annotator.prompt.base.Prompt._format_examples': ( 'prompt/base.html#prompt._format_examples',
                                                                                                      'ragas_annotator/prompt/base.py'),
                                             'ragas_annotator.prompt.base.Prompt._validate_instruction': ( 'prompt/base.html#prompt._validate_instruction',
                                                                                                           'ragas_annotator/prompt/base.py'),
                                             'ragas_annotator.prompt.base.Prompt.add_example': ( 'prompt/base.html#prompt.add_example',
                                                                                                 'ragas_annotator/prompt/base.py'),
                                             'ragas_annotator.prompt.base.Prompt.format': ( 'prompt/base.html#prompt.format',
                                                                                            'ragas_annotator/prompt/base.py')},
            'ragas_annotator.prompt.dynamic_few_shot': { 'ragas_annotator.prompt.dynamic_few_shot.DynamicFewShotPrompt': ( 'prompt/dynamic_few_shot.html#dynamicfewshotprompt',
                                                                                                                           'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.DynamicFewShotPrompt.__init__': ( 'prompt/dynamic_few_shot.html#dynamicfewshotprompt.__init__',
                                                                                                                                    'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.DynamicFewShotPrompt.add_example': ( 'prompt/dynamic_few_shot.html#dynamicfewshotprompt.add_example',
                                                                                                                                       'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.DynamicFewShotPrompt.format': ( 'prompt/dynamic_few_shot.html#dynamicfewshotprompt.format',
                                                                                                                                  'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.DynamicFewShotPrompt.from_prompt': ( 'prompt/dynamic_few_shot.html#dynamicfewshotprompt.from_prompt',
                                                                                                                                       'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.ExampleStore': ( 'prompt/dynamic_few_shot.html#examplestore',
                                                                                                                   'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.ExampleStore.add_example': ( 'prompt/dynamic_few_shot.html#examplestore.add_example',
                                                                                                                               'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.ExampleStore.get_examples': ( 'prompt/dynamic_few_shot.html#examplestore.get_examples',
                                                                                                                                'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore',
                                                                                                                           'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore.__init__': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore.__init__',
                                                                                                                                    'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore.__len__': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore.__len__',
                                                                                                                                   'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore._get_embedding': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore._get_embedding',
                                                                                                                                          'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore._get_nearest_examples': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore._get_nearest_examples',
                                                                                                                                                 'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore.add_example': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore.add_example',
                                                                                                                                       'ragas_annotator/prompt/dynamic_few_shot.py'),
                                                         'ragas_annotator.prompt.dynamic_few_shot.InMemoryExampleStore.get_examples': ( 'prompt/dynamic_few_shot.html#inmemoryexamplestore.get_examples',
                                                                                                                                        'ragas_annotator/prompt/dynamic_few_shot.py')},
            'ragas_annotator.tracing.langfuse': { 'ragas_annotator.tracing.langfuse.LangfuseTrace': ( 'tracing/langfuse.html#langfusetrace',
                                                                                                      'ragas_annotator/tracing/langfuse.py'),
                                                  'ragas_annotator.tracing.langfuse.LangfuseTrace.__init__': ( 'tracing/langfuse.html#langfusetrace.__init__',
                                                                                                               'ragas_annotator/tracing/langfuse.py'),
                                                  'ragas_annotator.tracing.langfuse.LangfuseTrace.filter': ( 'tracing/langfuse.html#langfusetrace.filter',
                                                                                                             'ragas_annotator/tracing/langfuse.py'),
                                                  'ragas_annotator.tracing.langfuse.LangfuseTrace.get_url': ( 'tracing/langfuse.html#langfusetrace.get_url',
                                                                                                              'ragas_annotator/tracing/langfuse.py'),
                                                  'ragas_annotator.tracing.langfuse.add_query_param': ( 'tracing/langfuse.html#add_query_param',
                                                                                                        'ragas_annotator/tracing/langfuse.py'),
                                                  'ragas_annotator.tracing.langfuse.sync_trace': ( 'tracing/langfuse.html#sync_trace',
                                                                                                   'ragas_annotator/tracing/langfuse.py')}}}
