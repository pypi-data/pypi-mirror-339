[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "tangent-client"
version = "0.1.0"
description = "Python Client for Tangent Works."
authors = ["Tangent Works"]
readme = "readme.md"
homepage = "https://tangent.works/"
documentation = "https://docs.tangent.works/"
packages = [{include = "tangent_client", from="src"}]

[tool.poetry.dependencies]
python = ">=3.10"
libranet-logging = ">=1.5.2"
pandas = ">=2.2.1"
# PyJWT = "2.8.0"
requests = ">=2.31.0"

[tool.poetry.group.dev.dependencies]
autoread-dotenv = ">=1.0.3"
pylint = ">=3.1.0"
ruff = ">=0.9.10"
toml-cli = ">=0.7.0"

[tool.poetry.group.ipython.dependencies]
# install via: poetry install --with ipython
ipython = ">=8.31.0"
rich = ">=13.9.4"

[tool.poetry.group.pre-commit.dependencies]
pre-commit = ">=4.0.1"
pre-commit-hooks = ">=5.0.0"

[tool.poetry.group.testing.dependencies]
pytest = ">=8.1.1"
pytest-clarity = ">=1.0.1"
pytest-cov = ">=5.0.0"
pytest-dotenv = ">=0.5.2"
# requests-mock = ">=1.12.1"
# requests-toolbelt = ">=1.0.0"


[tool.pytest.ini_options]
cache_dir = "var/cache/pytest"
# log_cli = false  # enable to show log-output
# log_cli_level = "NOTSET"
# filterwarnings = []
markers = [  # avoid warnings about unregistered markers
    # "integration",
    # "notebook",
    # "slow",
    # "unit",
]
testpaths = ["tests"]
# the nunit-report is used to report coverage in azure pipelines.
# addopts = "--color=yes --nunitxml='var/coverage/pytest-nunit.xml' --report-dir='var/coverage/html'"


[tool.ruff]
# https://beta.ruff.rs/docs/configuration/
# https://docs.astral.sh/ruff/configuration/#using-pyprojecttoml
cache-dir = "var/cache/ruff" # relative to project_root
line-length = 120
target-version = "py310"


[tool.ruff.lint]
select = ["ALL"]
ignore = [
    # D203 conflicts withs D211
    "D203", # 1 blank line required before class docstring
    # "D211", # No blank lines allowed before class docstring

    # D212 conflicts with D213
    "D212",    # Multi-line docstring summary should start at the first line
    # "D213",  # Multi-line docstring summary should start at the second line

    # conflicts with 'ruff format'
    "COM812",  # Trailing comma missing
    "ISC001",  # Implicitly concatenated string literals on one line
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__ method
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
]

[tool.ruff.lint.isort]
# https://docs.astral.sh/ruff/settings/#lintisort
combine-as-imports = true
force-single-line = false
from-first = false
# known-third-party = []
# known-first-party = ["tangent_api"]
# known-local-folder = ["_helpers"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "ANN",    # Missing type annotations
    # "ARG002", # Unused method argument: `time_series`
    "D",      # Missing docstring
    # "E501",   # Line too long
    "INP001", # tests-dir should not be a python-package
    # "NPY002", # TODO Replace legacy `np.random.rand` call with `np.random.Generator`
    # "SLF001", # Private member accessed
    ]