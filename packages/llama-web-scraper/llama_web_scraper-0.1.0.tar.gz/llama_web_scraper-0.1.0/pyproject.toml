[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llama-web-scraper"
version = "0.1.0"
description = "Web scraping tool potentially using Llama models." # TODO: Improve description
readme = "README.md"
requires-python = ">=3.8"
# license = {file = "LICENSE"} # Add LICENSE file
authors = [
    {name = "Your Name", email = "your.email@example.com"}, # Replace
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    # "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiohttp",
    # "asyncio", # Part of standard library
    "requests",
    "beautifulsoup4",
    "playwright",
    "duckduckgo-search",
    "PyPDF2",
    "pdfkit", # Requires wkhtmltopdf
    "pytesseract", # Requires tesseract OCR engine
    "Pillow",
    "openai",
    "nltk",
    "typer[all]", # Added [all] for rich etc.
    "rich",
    "sqlite-utils",
    "datasette",
    "jsonschema-rs",
    "loguru",
    "python-dotenv",
    "pydantic",
    "html2text-rs",
    "proxy-inspector",
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "black",
    "isort",
    "mypy",
    "ruff",
    "pre-commit",
]
all = [
    "llama-web-scraper[dev]"
]

[project.urls]
"Homepage" = "https://github.com/yourusername/llama-web-scraper" # Replace username
"Bug Tracker" = "https://github.com/yourusername/llama-web-scraper/issues"

# [project.scripts] # Add if cli/main.py is an entry point
# llama-scraper = "llama_web_scraper.cli:main" # Example

[tool.hatch.build.targets.wheel]
packages = ["src/llama_web_scraper"] # Initial guess

[tool.black]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
python_version = "3.8"
ignore_missing_imports = true

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B"]
ignore = []

[tool.pytest.ini_options]
testpaths = ["tests"] # Assuming tests dir will be added 