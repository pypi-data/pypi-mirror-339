name: Llama Distributed CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**' # Trigger on any change within this package directory
      - '.github/workflows/llama_distributed_ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**' # Trigger on any change within this package directory
      - '.github/workflows/llama_distributed_ci.yml'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  check_and_test:
    name: Check & Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # Run checks on Ubuntu is usually sufficient
        python-version: ["3.8", "3.11"] # Check oldest and newest supported

    services:
      # Optional: Start Redis for integration tests
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      working-directory: ./llama-distributed-pkg
      run: |
        python -m pip install --upgrade pip
        # Install with dev dependencies (includes celery[redis] and redis client)
        pip install -e ".[dev]"

    - name: Lint with Ruff
      working-directory: ./llama-distributed-pkg
      run: ruff check .

    - name: Format with Black
      working-directory: ./llama-distributed-pkg
      run: black --check .

    - name: Sort imports with isort
      working-directory: ./llama-distributed-pkg
      run: isort --check-only .

    - name: Type check with MyPy
      working-directory: ./llama-distributed-pkg
      run: mypy src/

    - name: Run tests with Pytest
      working-directory: ./llama-distributed-pkg
      env:
        # Provide the Redis URL for Celery tests
        LLAMA_CELERY_REDIS_URL: redis://localhost:6379/0
      run: pytest --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: ${{ github.repository }}
        fail_ci_if_error: false
        verbose: true 