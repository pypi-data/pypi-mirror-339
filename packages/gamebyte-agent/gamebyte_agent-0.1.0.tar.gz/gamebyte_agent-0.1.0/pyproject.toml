[project]
name = "gamebyte-agent"
version = "0.1.0"
description = "Define, Prompt and Test MCP enabled Agents and Workflows with OpenRouter support"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Shaun Smith", email = "fastagent@llmindset.co.uk"},
    { name = "Sarmad Qadri", email = "sarmad@lastmileai.dev" }
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent"
]
requires-python = ">=3.10"
dependencies = [
    "fastapi>=0.115.6",
    "mcp==1.6.0",
    "opentelemetry-distro>=0.50b0",
    "opentelemetry-exporter-otlp-proto-http>=1.29.0",
    "pydantic-settings>=2.7.0",
    "pydantic>=2.10.4",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "typer>=0.15.1",
    "numpy>=2.2.1",
    "scikit-learn>=1.6.0",
    "anthropic>=0.49.0",
    "openai>=1.63.2",
    "prompt-toolkit>=3.0.50",
    "aiohttp>=3.11.13",
]

[project.optional-dependencies]
temporal = [
    "temporalio>=1.8.0",
]
openai = [
    "openai>=1.58.1",
]
dev = [
    "anthropic>=0.42.0",
    "pre-commit>=4.0.1",
    "pydantic>=2.10.4",
    "pyyaml>=6.0.2",
    "ruff>=0.8.4",
    "tomli>=2.2.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
    "pytest-cov",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/gamebyte_agent"]

[tool.hatch.build]
include = [
    "src/gamebyte_agent/**/*.py",
    "src/gamebyte_agent/**/*.yaml",
    "src/gamebyte_agent/**/*.yml",
    "src/gamebyte_agent/**/*.csv",
    "examples/**/*.py",
    "examples/**/*.yaml",
    "examples/**/*.yml",
    "examples/**/*.txt",
    "examples/**/*.csv",
    "examples/**/*.md",
    "examples/**/*.css",
    "examples/**/mount-point/*.csv",
]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
markers = [
    "e2e: tests that connect to external resources (llms)",
    "integration: marks tests as integration tests",
    "simulated_endpoints: marks tests that use simulated external endpoints"
]
# Other pytest options can go here too
testpaths = ["test", "integration_tests"]

[dependency-groups]
dev = [
    "anthropic>=0.49.0",
    "pre-commit>=4.0.1",
    "pydantic>=2.10.4",
    "pyyaml>=6.0.2",
    "ruff>=0.8.4",
    "tomli>=2.2.1",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.1",
]

[project.scripts]
gamebyte-agent = "gamebyte_agent.cli.__main__:app"
fast_agent = "gamebyte_agent.cli.__main__:app"
fastagent = "gamebyte_agent.cli.__main__:app"
silsila = "gamebyte_agent.cli.__main__:app"
prompt-server = "gamebyte_agent.mcp.prompts.__main__:main"

[tool.setuptools.package-data]
gamebyte_agent = []

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "TCH"  # type checking
]
ignore=["E501"]

# More lenient settings for existing code
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN"]  # Don't require type annotations in tests
