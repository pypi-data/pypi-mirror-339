"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .buttontypeenum import ButtonTypeEnum
from novu_py.types import BaseModel
from typing import Optional
from typing_extensions import NotRequired, TypedDict


class MessageActionResultPayloadTypedDict(TypedDict):
    r"""Payload of the action result"""


class MessageActionResultPayload(BaseModel):
    r"""Payload of the action result"""


class MessageActionResultTypedDict(TypedDict):
    payload: NotRequired[MessageActionResultPayloadTypedDict]
    r"""Payload of the action result"""
    type: NotRequired[ButtonTypeEnum]
    r"""Type of button for the action result"""


class MessageActionResult(BaseModel):
    payload: Optional[MessageActionResultPayload] = None
    r"""Payload of the action result"""

    type: Optional[ButtonTypeEnum] = None
    r"""Type of button for the action result"""
