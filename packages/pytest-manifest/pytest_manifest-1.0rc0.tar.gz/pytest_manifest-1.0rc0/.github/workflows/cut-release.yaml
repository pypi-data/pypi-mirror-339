name: Cut release

on:
  workflow_dispatch:
    inputs:
      release-type:
        type: choice
        options: 
          - major
          - minor
        default: minor

jobs:
  cut-release:
    permissions:
      contents: write
      pull-requests: write

    runs-on: ubuntu-latest

    name: Cut ${{ github.event.inputs.release-type }} release

    outputs:
      rc_version: ${{ steps.cut-release-branch.outputs.rc_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_TOKEN }}

      - name: Verify main is up to date
        run: |
          git fetch origin main
          git fetch origin master
          if [[ $(git rev-list --count --left-only origin/master..origin/main) -gt 0 ]]; then
            echo "Error: main is not up to date with master" >&2
            exit 1
          fi

      - name: Create release branch
        id: cut-release-branch
        run: |
          rc_version=$(scripts/cut-release.sh ${{ github.event.inputs.release-type }} release)
          echo "Release candidate: $rc_version"
          echo "rc_version=$rc_version" >> $GITHUB_OUTPUT
          echo "version=$(scripts/bump-version.sh minor $rc_version)" >> $GITHUB_OUTPUT
        
      - name: Checkout release
        uses: actions/checkout@v4
        with:
          ref: release
          token: ${{ secrets.MY_TOKEN }}

      - name: Tag version
        run: |
          git tag ${{ steps.cut-release-branch.outputs.rc_version }}
          git push origin ${{ steps.cut-release-branch.outputs.rc_version }}

      - name: Create pull request
        env:
          GH_TOKEN: ${{ secrets.MY_TOKEN }}
        run: |
          workflow=$(echo '${{ github.workflow }}' | tr '[:upper:]' '[:lower:]')
          body='Auto-generated by the ['$workflow'](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) workflow.'
          gh pr create -B master -H release --title 'Release ${{ steps.cut-release-branch.outputs.version }}' --body "$body"

  publish-release:
    name: Publish release
    needs: cut-release
    uses: ./.github/workflows/build-and-distribute.yaml
    with:
      target-branch: release
      version: ${{ needs.cut-release.outputs.rc_version }}
    secrets:
      pypi-token: ${{ secrets.PYPI_TOKEN }}
    permissions:
      contents: write
      id-token: write
