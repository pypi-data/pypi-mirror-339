# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetNsxtNetworkSegmentProfileResult',
    'AwaitableGetNsxtNetworkSegmentProfileResult',
    'get_nsxt_network_segment_profile',
    'get_nsxt_network_segment_profile_output',
]

@pulumi.output_type
class GetNsxtNetworkSegmentProfileResult:
    """
    A collection of values returned by getNsxtNetworkSegmentProfile.
    """
    def __init__(__self__, id=None, ip_discovery_profile_id=None, mac_discovery_profile_id=None, org=None, org_network_id=None, qos_profile_id=None, segment_profile_template_id=None, segment_profile_template_name=None, segment_security_profile_id=None, spoof_guard_profile_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip_discovery_profile_id and not isinstance(ip_discovery_profile_id, str):
            raise TypeError("Expected argument 'ip_discovery_profile_id' to be a str")
        pulumi.set(__self__, "ip_discovery_profile_id", ip_discovery_profile_id)
        if mac_discovery_profile_id and not isinstance(mac_discovery_profile_id, str):
            raise TypeError("Expected argument 'mac_discovery_profile_id' to be a str")
        pulumi.set(__self__, "mac_discovery_profile_id", mac_discovery_profile_id)
        if org and not isinstance(org, str):
            raise TypeError("Expected argument 'org' to be a str")
        pulumi.set(__self__, "org", org)
        if org_network_id and not isinstance(org_network_id, str):
            raise TypeError("Expected argument 'org_network_id' to be a str")
        pulumi.set(__self__, "org_network_id", org_network_id)
        if qos_profile_id and not isinstance(qos_profile_id, str):
            raise TypeError("Expected argument 'qos_profile_id' to be a str")
        pulumi.set(__self__, "qos_profile_id", qos_profile_id)
        if segment_profile_template_id and not isinstance(segment_profile_template_id, str):
            raise TypeError("Expected argument 'segment_profile_template_id' to be a str")
        pulumi.set(__self__, "segment_profile_template_id", segment_profile_template_id)
        if segment_profile_template_name and not isinstance(segment_profile_template_name, str):
            raise TypeError("Expected argument 'segment_profile_template_name' to be a str")
        pulumi.set(__self__, "segment_profile_template_name", segment_profile_template_name)
        if segment_security_profile_id and not isinstance(segment_security_profile_id, str):
            raise TypeError("Expected argument 'segment_security_profile_id' to be a str")
        pulumi.set(__self__, "segment_security_profile_id", segment_security_profile_id)
        if spoof_guard_profile_id and not isinstance(spoof_guard_profile_id, str):
            raise TypeError("Expected argument 'spoof_guard_profile_id' to be a str")
        pulumi.set(__self__, "spoof_guard_profile_id", spoof_guard_profile_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipDiscoveryProfileId")
    def ip_discovery_profile_id(self) -> str:
        return pulumi.get(self, "ip_discovery_profile_id")

    @property
    @pulumi.getter(name="macDiscoveryProfileId")
    def mac_discovery_profile_id(self) -> str:
        return pulumi.get(self, "mac_discovery_profile_id")

    @property
    @pulumi.getter
    def org(self) -> Optional[str]:
        return pulumi.get(self, "org")

    @property
    @pulumi.getter(name="orgNetworkId")
    def org_network_id(self) -> str:
        return pulumi.get(self, "org_network_id")

    @property
    @pulumi.getter(name="qosProfileId")
    def qos_profile_id(self) -> str:
        return pulumi.get(self, "qos_profile_id")

    @property
    @pulumi.getter(name="segmentProfileTemplateId")
    def segment_profile_template_id(self) -> str:
        return pulumi.get(self, "segment_profile_template_id")

    @property
    @pulumi.getter(name="segmentProfileTemplateName")
    def segment_profile_template_name(self) -> str:
        return pulumi.get(self, "segment_profile_template_name")

    @property
    @pulumi.getter(name="segmentSecurityProfileId")
    def segment_security_profile_id(self) -> str:
        return pulumi.get(self, "segment_security_profile_id")

    @property
    @pulumi.getter(name="spoofGuardProfileId")
    def spoof_guard_profile_id(self) -> str:
        return pulumi.get(self, "spoof_guard_profile_id")


class AwaitableGetNsxtNetworkSegmentProfileResult(GetNsxtNetworkSegmentProfileResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNsxtNetworkSegmentProfileResult(
            id=self.id,
            ip_discovery_profile_id=self.ip_discovery_profile_id,
            mac_discovery_profile_id=self.mac_discovery_profile_id,
            org=self.org,
            org_network_id=self.org_network_id,
            qos_profile_id=self.qos_profile_id,
            segment_profile_template_id=self.segment_profile_template_id,
            segment_profile_template_name=self.segment_profile_template_name,
            segment_security_profile_id=self.segment_security_profile_id,
            spoof_guard_profile_id=self.spoof_guard_profile_id)


def get_nsxt_network_segment_profile(org: Optional[str] = None,
                                     org_network_id: Optional[str] = None,
                                     opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNsxtNetworkSegmentProfileResult:
    """
    Provides a data source to read Segment Profile configuration for NSX-T Org VDC networks.

    Supported in provider *v3.11+* and VCD 10.4.0+ with NSX-T.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    custom_prof = vcd.get_nsxt_network_segment_profile(org="my-org",
        org_network_id=net1["id"])
    ```


    :param str org: The name of organization to use, optional if defined at provider level
    :param str org_network_id: Org VDC Network ID
    """
    __args__ = dict()
    __args__['org'] = org
    __args__['orgNetworkId'] = org_network_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getNsxtNetworkSegmentProfile:getNsxtNetworkSegmentProfile', __args__, opts=opts, typ=GetNsxtNetworkSegmentProfileResult).value

    return AwaitableGetNsxtNetworkSegmentProfileResult(
        id=pulumi.get(__ret__, 'id'),
        ip_discovery_profile_id=pulumi.get(__ret__, 'ip_discovery_profile_id'),
        mac_discovery_profile_id=pulumi.get(__ret__, 'mac_discovery_profile_id'),
        org=pulumi.get(__ret__, 'org'),
        org_network_id=pulumi.get(__ret__, 'org_network_id'),
        qos_profile_id=pulumi.get(__ret__, 'qos_profile_id'),
        segment_profile_template_id=pulumi.get(__ret__, 'segment_profile_template_id'),
        segment_profile_template_name=pulumi.get(__ret__, 'segment_profile_template_name'),
        segment_security_profile_id=pulumi.get(__ret__, 'segment_security_profile_id'),
        spoof_guard_profile_id=pulumi.get(__ret__, 'spoof_guard_profile_id'))
def get_nsxt_network_segment_profile_output(org: Optional[pulumi.Input[Optional[str]]] = None,
                                            org_network_id: Optional[pulumi.Input[str]] = None,
                                            opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNsxtNetworkSegmentProfileResult]:
    """
    Provides a data source to read Segment Profile configuration for NSX-T Org VDC networks.

    Supported in provider *v3.11+* and VCD 10.4.0+ with NSX-T.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    custom_prof = vcd.get_nsxt_network_segment_profile(org="my-org",
        org_network_id=net1["id"])
    ```


    :param str org: The name of organization to use, optional if defined at provider level
    :param str org_network_id: Org VDC Network ID
    """
    __args__ = dict()
    __args__['org'] = org
    __args__['orgNetworkId'] = org_network_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getNsxtNetworkSegmentProfile:getNsxtNetworkSegmentProfile', __args__, opts=opts, typ=GetNsxtNetworkSegmentProfileResult)
    return __ret__.apply(lambda __response__: GetNsxtNetworkSegmentProfileResult(
        id=pulumi.get(__response__, 'id'),
        ip_discovery_profile_id=pulumi.get(__response__, 'ip_discovery_profile_id'),
        mac_discovery_profile_id=pulumi.get(__response__, 'mac_discovery_profile_id'),
        org=pulumi.get(__response__, 'org'),
        org_network_id=pulumi.get(__response__, 'org_network_id'),
        qos_profile_id=pulumi.get(__response__, 'qos_profile_id'),
        segment_profile_template_id=pulumi.get(__response__, 'segment_profile_template_id'),
        segment_profile_template_name=pulumi.get(__response__, 'segment_profile_template_name'),
        segment_security_profile_id=pulumi.get(__response__, 'segment_security_profile_id'),
        spoof_guard_profile_id=pulumi.get(__response__, 'spoof_guard_profile_id')))
