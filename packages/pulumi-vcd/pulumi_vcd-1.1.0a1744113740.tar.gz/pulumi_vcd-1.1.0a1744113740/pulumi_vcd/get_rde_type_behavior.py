# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetRdeTypeBehaviorResult',
    'AwaitableGetRdeTypeBehaviorResult',
    'get_rde_type_behavior',
    'get_rde_type_behavior_output',
]

@pulumi.output_type
class GetRdeTypeBehaviorResult:
    """
    A collection of values returned by getRdeTypeBehavior.
    """
    def __init__(__self__, behavior_id=None, description=None, execution=None, execution_json=None, id=None, name=None, rde_type_id=None, ref=None):
        if behavior_id and not isinstance(behavior_id, str):
            raise TypeError("Expected argument 'behavior_id' to be a str")
        pulumi.set(__self__, "behavior_id", behavior_id)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if execution and not isinstance(execution, dict):
            raise TypeError("Expected argument 'execution' to be a dict")
        pulumi.set(__self__, "execution", execution)
        if execution_json and not isinstance(execution_json, str):
            raise TypeError("Expected argument 'execution_json' to be a str")
        pulumi.set(__self__, "execution_json", execution_json)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if rde_type_id and not isinstance(rde_type_id, str):
            raise TypeError("Expected argument 'rde_type_id' to be a str")
        pulumi.set(__self__, "rde_type_id", rde_type_id)
        if ref and not isinstance(ref, str):
            raise TypeError("Expected argument 'ref' to be a str")
        pulumi.set(__self__, "ref", ref)

    @property
    @pulumi.getter(name="behaviorId")
    def behavior_id(self) -> str:
        return pulumi.get(self, "behavior_id")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    @_utilities.deprecated("""This argument cannot consider complex execution structures. For that purpose, use 'execution_json' instead""")
    def execution(self) -> Mapping[str, str]:
        return pulumi.get(self, "execution")

    @property
    @pulumi.getter(name="executionJson")
    def execution_json(self) -> str:
        return pulumi.get(self, "execution_json")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="rdeTypeId")
    def rde_type_id(self) -> str:
        return pulumi.get(self, "rde_type_id")

    @property
    @pulumi.getter
    def ref(self) -> str:
        return pulumi.get(self, "ref")


class AwaitableGetRdeTypeBehaviorResult(GetRdeTypeBehaviorResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRdeTypeBehaviorResult(
            behavior_id=self.behavior_id,
            description=self.description,
            execution=self.execution,
            execution_json=self.execution_json,
            id=self.id,
            name=self.name,
            rde_type_id=self.rde_type_id,
            ref=self.ref)


def get_rde_type_behavior(behavior_id: Optional[str] = None,
                          rde_type_id: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRdeTypeBehaviorResult:
    """
    Provides the capability of reading RDE Type Behaviors in VMware Cloud Director, which override an existing [RDE Interface
    Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/rde_interface_behavior).

    Supported in provider *v3.10+*. Requires System Administrator privileges.


    :param str rde_type_id: The ID of the [RDE Type](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/rde_type) that owns the Behavior override
    """
    __args__ = dict()
    __args__['behaviorId'] = behavior_id
    __args__['rdeTypeId'] = rde_type_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getRdeTypeBehavior:getRdeTypeBehavior', __args__, opts=opts, typ=GetRdeTypeBehaviorResult).value

    return AwaitableGetRdeTypeBehaviorResult(
        behavior_id=pulumi.get(__ret__, 'behavior_id'),
        description=pulumi.get(__ret__, 'description'),
        execution=pulumi.get(__ret__, 'execution'),
        execution_json=pulumi.get(__ret__, 'execution_json'),
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        rde_type_id=pulumi.get(__ret__, 'rde_type_id'),
        ref=pulumi.get(__ret__, 'ref'))
def get_rde_type_behavior_output(behavior_id: Optional[pulumi.Input[str]] = None,
                                 rde_type_id: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRdeTypeBehaviorResult]:
    """
    Provides the capability of reading RDE Type Behaviors in VMware Cloud Director, which override an existing [RDE Interface
    Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/rde_interface_behavior).

    Supported in provider *v3.10+*. Requires System Administrator privileges.


    :param str rde_type_id: The ID of the [RDE Type](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/rde_type) that owns the Behavior override
    """
    __args__ = dict()
    __args__['behaviorId'] = behavior_id
    __args__['rdeTypeId'] = rde_type_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getRdeTypeBehavior:getRdeTypeBehavior', __args__, opts=opts, typ=GetRdeTypeBehaviorResult)
    return __ret__.apply(lambda __response__: GetRdeTypeBehaviorResult(
        behavior_id=pulumi.get(__response__, 'behavior_id'),
        description=pulumi.get(__response__, 'description'),
        execution=pulumi.get(__response__, 'execution'),
        execution_json=pulumi.get(__response__, 'execution_json'),
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        rde_type_id=pulumi.get(__response__, 'rde_type_id'),
        ref=pulumi.get(__response__, 'ref')))
