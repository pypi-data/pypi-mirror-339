# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['OrgVdcTemplateArgs', 'OrgVdcTemplate']

@pulumi.input_type
class OrgVdcTemplateArgs:
    def __init__(__self__, *,
                 allocation_model: pulumi.Input[str],
                 compute_configuration: pulumi.Input['OrgVdcTemplateComputeConfigurationArgs'],
                 provider_vdcs: pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]],
                 storage_profiles: pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]],
                 tenant_name: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 edge_gateway: Optional[pulumi.Input['OrgVdcTemplateEdgeGatewayArgs']] = None,
                 enable_fast_provisioning: Optional[pulumi.Input[bool]] = None,
                 enable_thin_provisioning: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_pool_id: Optional[pulumi.Input[str]] = None,
                 nic_quota: Optional[pulumi.Input[int]] = None,
                 provisioned_network_quota: Optional[pulumi.Input[int]] = None,
                 readable_by_org_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 tenant_description: Optional[pulumi.Input[str]] = None,
                 vm_quota: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a OrgVdcTemplate resource.
        :param pulumi.Input[str] allocation_model: Allocation model that the VDCs instantiated from this template will use.
               Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        :param pulumi.Input['OrgVdcTemplateComputeConfigurationArgs'] compute_configuration: The compute configuration for the VDCs instantiated from this template:
        :param pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]] provider_vdcs: A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        :param pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]] storage_profiles: A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        :param pulumi.Input[str] tenant_name: Name to give to the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[str] description: Description of the Organization VDC Template, as seen by System administrators
        :param pulumi.Input['OrgVdcTemplateEdgeGatewayArgs'] edge_gateway: VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
               has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        :param pulumi.Input[bool] enable_fast_provisioning: If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        :param pulumi.Input[bool] enable_thin_provisioning: If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        :param pulumi.Input[str] name: Name to give to the Organization VDC Template, as seen by System administrators
        :param pulumi.Input[str] network_pool_id: If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        :param pulumi.Input[int] nic_quota: Quota for the NICs of the instantiated VDCs. Defaults to 100
        :param pulumi.Input[int] provisioned_network_quota: Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        :param pulumi.Input[Sequence[pulumi.Input[str]]] readable_by_org_ids: A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
               [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        :param pulumi.Input[str] tenant_description: Description of the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[int] vm_quota: Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        pulumi.set(__self__, "allocation_model", allocation_model)
        pulumi.set(__self__, "compute_configuration", compute_configuration)
        pulumi.set(__self__, "provider_vdcs", provider_vdcs)
        pulumi.set(__self__, "storage_profiles", storage_profiles)
        pulumi.set(__self__, "tenant_name", tenant_name)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if edge_gateway is not None:
            pulumi.set(__self__, "edge_gateway", edge_gateway)
        if enable_fast_provisioning is not None:
            pulumi.set(__self__, "enable_fast_provisioning", enable_fast_provisioning)
        if enable_thin_provisioning is not None:
            pulumi.set(__self__, "enable_thin_provisioning", enable_thin_provisioning)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_pool_id is not None:
            pulumi.set(__self__, "network_pool_id", network_pool_id)
        if nic_quota is not None:
            pulumi.set(__self__, "nic_quota", nic_quota)
        if provisioned_network_quota is not None:
            pulumi.set(__self__, "provisioned_network_quota", provisioned_network_quota)
        if readable_by_org_ids is not None:
            pulumi.set(__self__, "readable_by_org_ids", readable_by_org_ids)
        if tenant_description is not None:
            pulumi.set(__self__, "tenant_description", tenant_description)
        if vm_quota is not None:
            pulumi.set(__self__, "vm_quota", vm_quota)

    @property
    @pulumi.getter(name="allocationModel")
    def allocation_model(self) -> pulumi.Input[str]:
        """
        Allocation model that the VDCs instantiated from this template will use.
        Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        """
        return pulumi.get(self, "allocation_model")

    @allocation_model.setter
    def allocation_model(self, value: pulumi.Input[str]):
        pulumi.set(self, "allocation_model", value)

    @property
    @pulumi.getter(name="computeConfiguration")
    def compute_configuration(self) -> pulumi.Input['OrgVdcTemplateComputeConfigurationArgs']:
        """
        The compute configuration for the VDCs instantiated from this template:
        """
        return pulumi.get(self, "compute_configuration")

    @compute_configuration.setter
    def compute_configuration(self, value: pulumi.Input['OrgVdcTemplateComputeConfigurationArgs']):
        pulumi.set(self, "compute_configuration", value)

    @property
    @pulumi.getter(name="providerVdcs")
    def provider_vdcs(self) -> pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]]:
        """
        A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        """
        return pulumi.get(self, "provider_vdcs")

    @provider_vdcs.setter
    def provider_vdcs(self, value: pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]]):
        pulumi.set(self, "provider_vdcs", value)

    @property
    @pulumi.getter(name="storageProfiles")
    def storage_profiles(self) -> pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]]:
        """
        A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        """
        return pulumi.get(self, "storage_profiles")

    @storage_profiles.setter
    def storage_profiles(self, value: pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]]):
        pulumi.set(self, "storage_profiles", value)

    @property
    @pulumi.getter(name="tenantName")
    def tenant_name(self) -> pulumi.Input[str]:
        """
        Name to give to the Organization VDC Template, as seen by the allowed tenants
        """
        return pulumi.get(self, "tenant_name")

    @tenant_name.setter
    def tenant_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "tenant_name", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the Organization VDC Template, as seen by System administrators
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="edgeGateway")
    def edge_gateway(self) -> Optional[pulumi.Input['OrgVdcTemplateEdgeGatewayArgs']]:
        """
        VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
        has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        """
        return pulumi.get(self, "edge_gateway")

    @edge_gateway.setter
    def edge_gateway(self, value: Optional[pulumi.Input['OrgVdcTemplateEdgeGatewayArgs']]):
        pulumi.set(self, "edge_gateway", value)

    @property
    @pulumi.getter(name="enableFastProvisioning")
    def enable_fast_provisioning(self) -> Optional[pulumi.Input[bool]]:
        """
        If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        """
        return pulumi.get(self, "enable_fast_provisioning")

    @enable_fast_provisioning.setter
    def enable_fast_provisioning(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_fast_provisioning", value)

    @property
    @pulumi.getter(name="enableThinProvisioning")
    def enable_thin_provisioning(self) -> Optional[pulumi.Input[bool]]:
        """
        If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        """
        return pulumi.get(self, "enable_thin_provisioning")

    @enable_thin_provisioning.setter
    def enable_thin_provisioning(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_thin_provisioning", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name to give to the Organization VDC Template, as seen by System administrators
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="networkPoolId")
    def network_pool_id(self) -> Optional[pulumi.Input[str]]:
        """
        If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        """
        return pulumi.get(self, "network_pool_id")

    @network_pool_id.setter
    def network_pool_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_pool_id", value)

    @property
    @pulumi.getter(name="nicQuota")
    def nic_quota(self) -> Optional[pulumi.Input[int]]:
        """
        Quota for the NICs of the instantiated VDCs. Defaults to 100
        """
        return pulumi.get(self, "nic_quota")

    @nic_quota.setter
    def nic_quota(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "nic_quota", value)

    @property
    @pulumi.getter(name="provisionedNetworkQuota")
    def provisioned_network_quota(self) -> Optional[pulumi.Input[int]]:
        """
        Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        """
        return pulumi.get(self, "provisioned_network_quota")

    @provisioned_network_quota.setter
    def provisioned_network_quota(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "provisioned_network_quota", value)

    @property
    @pulumi.getter(name="readableByOrgIds")
    def readable_by_org_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
        [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        """
        return pulumi.get(self, "readable_by_org_ids")

    @readable_by_org_ids.setter
    def readable_by_org_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "readable_by_org_ids", value)

    @property
    @pulumi.getter(name="tenantDescription")
    def tenant_description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the Organization VDC Template, as seen by the allowed tenants
        """
        return pulumi.get(self, "tenant_description")

    @tenant_description.setter
    def tenant_description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_description", value)

    @property
    @pulumi.getter(name="vmQuota")
    def vm_quota(self) -> Optional[pulumi.Input[int]]:
        """
        Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        return pulumi.get(self, "vm_quota")

    @vm_quota.setter
    def vm_quota(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vm_quota", value)


@pulumi.input_type
class _OrgVdcTemplateState:
    def __init__(__self__, *,
                 allocation_model: Optional[pulumi.Input[str]] = None,
                 compute_configuration: Optional[pulumi.Input['OrgVdcTemplateComputeConfigurationArgs']] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 edge_gateway: Optional[pulumi.Input['OrgVdcTemplateEdgeGatewayArgs']] = None,
                 enable_fast_provisioning: Optional[pulumi.Input[bool]] = None,
                 enable_thin_provisioning: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_pool_id: Optional[pulumi.Input[str]] = None,
                 nic_quota: Optional[pulumi.Input[int]] = None,
                 provider_vdcs: Optional[pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]]] = None,
                 provisioned_network_quota: Optional[pulumi.Input[int]] = None,
                 readable_by_org_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 storage_profiles: Optional[pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]]] = None,
                 tenant_description: Optional[pulumi.Input[str]] = None,
                 tenant_name: Optional[pulumi.Input[str]] = None,
                 vm_quota: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering OrgVdcTemplate resources.
        :param pulumi.Input[str] allocation_model: Allocation model that the VDCs instantiated from this template will use.
               Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        :param pulumi.Input['OrgVdcTemplateComputeConfigurationArgs'] compute_configuration: The compute configuration for the VDCs instantiated from this template:
        :param pulumi.Input[str] description: Description of the Organization VDC Template, as seen by System administrators
        :param pulumi.Input['OrgVdcTemplateEdgeGatewayArgs'] edge_gateway: VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
               has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        :param pulumi.Input[bool] enable_fast_provisioning: If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        :param pulumi.Input[bool] enable_thin_provisioning: If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        :param pulumi.Input[str] name: Name to give to the Organization VDC Template, as seen by System administrators
        :param pulumi.Input[str] network_pool_id: If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        :param pulumi.Input[int] nic_quota: Quota for the NICs of the instantiated VDCs. Defaults to 100
        :param pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]] provider_vdcs: A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        :param pulumi.Input[int] provisioned_network_quota: Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        :param pulumi.Input[Sequence[pulumi.Input[str]]] readable_by_org_ids: A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
               [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        :param pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]] storage_profiles: A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        :param pulumi.Input[str] tenant_description: Description of the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[str] tenant_name: Name to give to the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[int] vm_quota: Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        if allocation_model is not None:
            pulumi.set(__self__, "allocation_model", allocation_model)
        if compute_configuration is not None:
            pulumi.set(__self__, "compute_configuration", compute_configuration)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if edge_gateway is not None:
            pulumi.set(__self__, "edge_gateway", edge_gateway)
        if enable_fast_provisioning is not None:
            pulumi.set(__self__, "enable_fast_provisioning", enable_fast_provisioning)
        if enable_thin_provisioning is not None:
            pulumi.set(__self__, "enable_thin_provisioning", enable_thin_provisioning)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if network_pool_id is not None:
            pulumi.set(__self__, "network_pool_id", network_pool_id)
        if nic_quota is not None:
            pulumi.set(__self__, "nic_quota", nic_quota)
        if provider_vdcs is not None:
            pulumi.set(__self__, "provider_vdcs", provider_vdcs)
        if provisioned_network_quota is not None:
            pulumi.set(__self__, "provisioned_network_quota", provisioned_network_quota)
        if readable_by_org_ids is not None:
            pulumi.set(__self__, "readable_by_org_ids", readable_by_org_ids)
        if storage_profiles is not None:
            pulumi.set(__self__, "storage_profiles", storage_profiles)
        if tenant_description is not None:
            pulumi.set(__self__, "tenant_description", tenant_description)
        if tenant_name is not None:
            pulumi.set(__self__, "tenant_name", tenant_name)
        if vm_quota is not None:
            pulumi.set(__self__, "vm_quota", vm_quota)

    @property
    @pulumi.getter(name="allocationModel")
    def allocation_model(self) -> Optional[pulumi.Input[str]]:
        """
        Allocation model that the VDCs instantiated from this template will use.
        Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        """
        return pulumi.get(self, "allocation_model")

    @allocation_model.setter
    def allocation_model(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "allocation_model", value)

    @property
    @pulumi.getter(name="computeConfiguration")
    def compute_configuration(self) -> Optional[pulumi.Input['OrgVdcTemplateComputeConfigurationArgs']]:
        """
        The compute configuration for the VDCs instantiated from this template:
        """
        return pulumi.get(self, "compute_configuration")

    @compute_configuration.setter
    def compute_configuration(self, value: Optional[pulumi.Input['OrgVdcTemplateComputeConfigurationArgs']]):
        pulumi.set(self, "compute_configuration", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the Organization VDC Template, as seen by System administrators
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="edgeGateway")
    def edge_gateway(self) -> Optional[pulumi.Input['OrgVdcTemplateEdgeGatewayArgs']]:
        """
        VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
        has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        """
        return pulumi.get(self, "edge_gateway")

    @edge_gateway.setter
    def edge_gateway(self, value: Optional[pulumi.Input['OrgVdcTemplateEdgeGatewayArgs']]):
        pulumi.set(self, "edge_gateway", value)

    @property
    @pulumi.getter(name="enableFastProvisioning")
    def enable_fast_provisioning(self) -> Optional[pulumi.Input[bool]]:
        """
        If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        """
        return pulumi.get(self, "enable_fast_provisioning")

    @enable_fast_provisioning.setter
    def enable_fast_provisioning(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_fast_provisioning", value)

    @property
    @pulumi.getter(name="enableThinProvisioning")
    def enable_thin_provisioning(self) -> Optional[pulumi.Input[bool]]:
        """
        If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        """
        return pulumi.get(self, "enable_thin_provisioning")

    @enable_thin_provisioning.setter
    def enable_thin_provisioning(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enable_thin_provisioning", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name to give to the Organization VDC Template, as seen by System administrators
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="networkPoolId")
    def network_pool_id(self) -> Optional[pulumi.Input[str]]:
        """
        If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        """
        return pulumi.get(self, "network_pool_id")

    @network_pool_id.setter
    def network_pool_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_pool_id", value)

    @property
    @pulumi.getter(name="nicQuota")
    def nic_quota(self) -> Optional[pulumi.Input[int]]:
        """
        Quota for the NICs of the instantiated VDCs. Defaults to 100
        """
        return pulumi.get(self, "nic_quota")

    @nic_quota.setter
    def nic_quota(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "nic_quota", value)

    @property
    @pulumi.getter(name="providerVdcs")
    def provider_vdcs(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]]]:
        """
        A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        """
        return pulumi.get(self, "provider_vdcs")

    @provider_vdcs.setter
    def provider_vdcs(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateProviderVdcArgs']]]]):
        pulumi.set(self, "provider_vdcs", value)

    @property
    @pulumi.getter(name="provisionedNetworkQuota")
    def provisioned_network_quota(self) -> Optional[pulumi.Input[int]]:
        """
        Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        """
        return pulumi.get(self, "provisioned_network_quota")

    @provisioned_network_quota.setter
    def provisioned_network_quota(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "provisioned_network_quota", value)

    @property
    @pulumi.getter(name="readableByOrgIds")
    def readable_by_org_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
        [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        """
        return pulumi.get(self, "readable_by_org_ids")

    @readable_by_org_ids.setter
    def readable_by_org_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "readable_by_org_ids", value)

    @property
    @pulumi.getter(name="storageProfiles")
    def storage_profiles(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]]]:
        """
        A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        """
        return pulumi.get(self, "storage_profiles")

    @storage_profiles.setter
    def storage_profiles(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['OrgVdcTemplateStorageProfileArgs']]]]):
        pulumi.set(self, "storage_profiles", value)

    @property
    @pulumi.getter(name="tenantDescription")
    def tenant_description(self) -> Optional[pulumi.Input[str]]:
        """
        Description of the Organization VDC Template, as seen by the allowed tenants
        """
        return pulumi.get(self, "tenant_description")

    @tenant_description.setter
    def tenant_description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_description", value)

    @property
    @pulumi.getter(name="tenantName")
    def tenant_name(self) -> Optional[pulumi.Input[str]]:
        """
        Name to give to the Organization VDC Template, as seen by the allowed tenants
        """
        return pulumi.get(self, "tenant_name")

    @tenant_name.setter
    def tenant_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "tenant_name", value)

    @property
    @pulumi.getter(name="vmQuota")
    def vm_quota(self) -> Optional[pulumi.Input[int]]:
        """
        Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        return pulumi.get(self, "vm_quota")

    @vm_quota.setter
    def vm_quota(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "vm_quota", value)


class OrgVdcTemplate(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allocation_model: Optional[pulumi.Input[str]] = None,
                 compute_configuration: Optional[pulumi.Input[Union['OrgVdcTemplateComputeConfigurationArgs', 'OrgVdcTemplateComputeConfigurationArgsDict']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 edge_gateway: Optional[pulumi.Input[Union['OrgVdcTemplateEdgeGatewayArgs', 'OrgVdcTemplateEdgeGatewayArgsDict']]] = None,
                 enable_fast_provisioning: Optional[pulumi.Input[bool]] = None,
                 enable_thin_provisioning: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_pool_id: Optional[pulumi.Input[str]] = None,
                 nic_quota: Optional[pulumi.Input[int]] = None,
                 provider_vdcs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateProviderVdcArgs', 'OrgVdcTemplateProviderVdcArgsDict']]]]] = None,
                 provisioned_network_quota: Optional[pulumi.Input[int]] = None,
                 readable_by_org_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 storage_profiles: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateStorageProfileArgs', 'OrgVdcTemplateStorageProfileArgsDict']]]]] = None,
                 tenant_description: Optional[pulumi.Input[str]] = None,
                 tenant_name: Optional[pulumi.Input[str]] = None,
                 vm_quota: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Create a OrgVdcTemplate resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allocation_model: Allocation model that the VDCs instantiated from this template will use.
               Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        :param pulumi.Input[Union['OrgVdcTemplateComputeConfigurationArgs', 'OrgVdcTemplateComputeConfigurationArgsDict']] compute_configuration: The compute configuration for the VDCs instantiated from this template:
        :param pulumi.Input[str] description: Description of the Organization VDC Template, as seen by System administrators
        :param pulumi.Input[Union['OrgVdcTemplateEdgeGatewayArgs', 'OrgVdcTemplateEdgeGatewayArgsDict']] edge_gateway: VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
               has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        :param pulumi.Input[bool] enable_fast_provisioning: If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        :param pulumi.Input[bool] enable_thin_provisioning: If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        :param pulumi.Input[str] name: Name to give to the Organization VDC Template, as seen by System administrators
        :param pulumi.Input[str] network_pool_id: If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        :param pulumi.Input[int] nic_quota: Quota for the NICs of the instantiated VDCs. Defaults to 100
        :param pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateProviderVdcArgs', 'OrgVdcTemplateProviderVdcArgsDict']]]] provider_vdcs: A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        :param pulumi.Input[int] provisioned_network_quota: Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        :param pulumi.Input[Sequence[pulumi.Input[str]]] readable_by_org_ids: A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
               [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        :param pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateStorageProfileArgs', 'OrgVdcTemplateStorageProfileArgsDict']]]] storage_profiles: A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        :param pulumi.Input[str] tenant_description: Description of the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[str] tenant_name: Name to give to the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[int] vm_quota: Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: OrgVdcTemplateArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a OrgVdcTemplate resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param OrgVdcTemplateArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrgVdcTemplateArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 allocation_model: Optional[pulumi.Input[str]] = None,
                 compute_configuration: Optional[pulumi.Input[Union['OrgVdcTemplateComputeConfigurationArgs', 'OrgVdcTemplateComputeConfigurationArgsDict']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 edge_gateway: Optional[pulumi.Input[Union['OrgVdcTemplateEdgeGatewayArgs', 'OrgVdcTemplateEdgeGatewayArgsDict']]] = None,
                 enable_fast_provisioning: Optional[pulumi.Input[bool]] = None,
                 enable_thin_provisioning: Optional[pulumi.Input[bool]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 network_pool_id: Optional[pulumi.Input[str]] = None,
                 nic_quota: Optional[pulumi.Input[int]] = None,
                 provider_vdcs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateProviderVdcArgs', 'OrgVdcTemplateProviderVdcArgsDict']]]]] = None,
                 provisioned_network_quota: Optional[pulumi.Input[int]] = None,
                 readable_by_org_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 storage_profiles: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateStorageProfileArgs', 'OrgVdcTemplateStorageProfileArgsDict']]]]] = None,
                 tenant_description: Optional[pulumi.Input[str]] = None,
                 tenant_name: Optional[pulumi.Input[str]] = None,
                 vm_quota: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrgVdcTemplateArgs.__new__(OrgVdcTemplateArgs)

            if allocation_model is None and not opts.urn:
                raise TypeError("Missing required property 'allocation_model'")
            __props__.__dict__["allocation_model"] = allocation_model
            if compute_configuration is None and not opts.urn:
                raise TypeError("Missing required property 'compute_configuration'")
            __props__.__dict__["compute_configuration"] = compute_configuration
            __props__.__dict__["description"] = description
            __props__.__dict__["edge_gateway"] = edge_gateway
            __props__.__dict__["enable_fast_provisioning"] = enable_fast_provisioning
            __props__.__dict__["enable_thin_provisioning"] = enable_thin_provisioning
            __props__.__dict__["name"] = name
            __props__.__dict__["network_pool_id"] = network_pool_id
            __props__.__dict__["nic_quota"] = nic_quota
            if provider_vdcs is None and not opts.urn:
                raise TypeError("Missing required property 'provider_vdcs'")
            __props__.__dict__["provider_vdcs"] = provider_vdcs
            __props__.__dict__["provisioned_network_quota"] = provisioned_network_quota
            __props__.__dict__["readable_by_org_ids"] = readable_by_org_ids
            if storage_profiles is None and not opts.urn:
                raise TypeError("Missing required property 'storage_profiles'")
            __props__.__dict__["storage_profiles"] = storage_profiles
            __props__.__dict__["tenant_description"] = tenant_description
            if tenant_name is None and not opts.urn:
                raise TypeError("Missing required property 'tenant_name'")
            __props__.__dict__["tenant_name"] = tenant_name
            __props__.__dict__["vm_quota"] = vm_quota
        super(OrgVdcTemplate, __self__).__init__(
            'vcd:index/orgVdcTemplate:OrgVdcTemplate',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            allocation_model: Optional[pulumi.Input[str]] = None,
            compute_configuration: Optional[pulumi.Input[Union['OrgVdcTemplateComputeConfigurationArgs', 'OrgVdcTemplateComputeConfigurationArgsDict']]] = None,
            description: Optional[pulumi.Input[str]] = None,
            edge_gateway: Optional[pulumi.Input[Union['OrgVdcTemplateEdgeGatewayArgs', 'OrgVdcTemplateEdgeGatewayArgsDict']]] = None,
            enable_fast_provisioning: Optional[pulumi.Input[bool]] = None,
            enable_thin_provisioning: Optional[pulumi.Input[bool]] = None,
            name: Optional[pulumi.Input[str]] = None,
            network_pool_id: Optional[pulumi.Input[str]] = None,
            nic_quota: Optional[pulumi.Input[int]] = None,
            provider_vdcs: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateProviderVdcArgs', 'OrgVdcTemplateProviderVdcArgsDict']]]]] = None,
            provisioned_network_quota: Optional[pulumi.Input[int]] = None,
            readable_by_org_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            storage_profiles: Optional[pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateStorageProfileArgs', 'OrgVdcTemplateStorageProfileArgsDict']]]]] = None,
            tenant_description: Optional[pulumi.Input[str]] = None,
            tenant_name: Optional[pulumi.Input[str]] = None,
            vm_quota: Optional[pulumi.Input[int]] = None) -> 'OrgVdcTemplate':
        """
        Get an existing OrgVdcTemplate resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] allocation_model: Allocation model that the VDCs instantiated from this template will use.
               Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        :param pulumi.Input[Union['OrgVdcTemplateComputeConfigurationArgs', 'OrgVdcTemplateComputeConfigurationArgsDict']] compute_configuration: The compute configuration for the VDCs instantiated from this template:
        :param pulumi.Input[str] description: Description of the Organization VDC Template, as seen by System administrators
        :param pulumi.Input[Union['OrgVdcTemplateEdgeGatewayArgs', 'OrgVdcTemplateEdgeGatewayArgsDict']] edge_gateway: VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
               has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        :param pulumi.Input[bool] enable_fast_provisioning: If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        :param pulumi.Input[bool] enable_thin_provisioning: If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        :param pulumi.Input[str] name: Name to give to the Organization VDC Template, as seen by System administrators
        :param pulumi.Input[str] network_pool_id: If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        :param pulumi.Input[int] nic_quota: Quota for the NICs of the instantiated VDCs. Defaults to 100
        :param pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateProviderVdcArgs', 'OrgVdcTemplateProviderVdcArgsDict']]]] provider_vdcs: A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        :param pulumi.Input[int] provisioned_network_quota: Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        :param pulumi.Input[Sequence[pulumi.Input[str]]] readable_by_org_ids: A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
               [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        :param pulumi.Input[Sequence[pulumi.Input[Union['OrgVdcTemplateStorageProfileArgs', 'OrgVdcTemplateStorageProfileArgsDict']]]] storage_profiles: A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        :param pulumi.Input[str] tenant_description: Description of the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[str] tenant_name: Name to give to the Organization VDC Template, as seen by the allowed tenants
        :param pulumi.Input[int] vm_quota: Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrgVdcTemplateState.__new__(_OrgVdcTemplateState)

        __props__.__dict__["allocation_model"] = allocation_model
        __props__.__dict__["compute_configuration"] = compute_configuration
        __props__.__dict__["description"] = description
        __props__.__dict__["edge_gateway"] = edge_gateway
        __props__.__dict__["enable_fast_provisioning"] = enable_fast_provisioning
        __props__.__dict__["enable_thin_provisioning"] = enable_thin_provisioning
        __props__.__dict__["name"] = name
        __props__.__dict__["network_pool_id"] = network_pool_id
        __props__.__dict__["nic_quota"] = nic_quota
        __props__.__dict__["provider_vdcs"] = provider_vdcs
        __props__.__dict__["provisioned_network_quota"] = provisioned_network_quota
        __props__.__dict__["readable_by_org_ids"] = readable_by_org_ids
        __props__.__dict__["storage_profiles"] = storage_profiles
        __props__.__dict__["tenant_description"] = tenant_description
        __props__.__dict__["tenant_name"] = tenant_name
        __props__.__dict__["vm_quota"] = vm_quota
        return OrgVdcTemplate(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="allocationModel")
    def allocation_model(self) -> pulumi.Output[str]:
        """
        Allocation model that the VDCs instantiated from this template will use.
        Must be one of: `AllocationVApp`, `AllocationPool`, `ReservationPool` or  `Flex`
        """
        return pulumi.get(self, "allocation_model")

    @property
    @pulumi.getter(name="computeConfiguration")
    def compute_configuration(self) -> pulumi.Output['outputs.OrgVdcTemplateComputeConfiguration']:
        """
        The compute configuration for the VDCs instantiated from this template:
        """
        return pulumi.get(self, "compute_configuration")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Description of the Organization VDC Template, as seen by System administrators
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="edgeGateway")
    def edge_gateway(self) -> pulumi.Output[Optional['outputs.OrgVdcTemplateEdgeGateway']]:
        """
        VDCs instantiated from this template will create a new Edge Gateway with the provided setup. Required if any `provider_vdc` block
        has defined a `gateway_edge_cluster_id`. This **unique** block has the following properties:
        """
        return pulumi.get(self, "edge_gateway")

    @property
    @pulumi.getter(name="enableFastProvisioning")
    def enable_fast_provisioning(self) -> pulumi.Output[Optional[bool]]:
        """
        If `true`, the VDCs instantiated from this template will have Fast provisioning enabled. Defaults to `false`
        """
        return pulumi.get(self, "enable_fast_provisioning")

    @property
    @pulumi.getter(name="enableThinProvisioning")
    def enable_thin_provisioning(self) -> pulumi.Output[Optional[bool]]:
        """
        If `true`, the VDCs instantiated from this template will have Thin provisioning enabled. Defaults to `false`
        """
        return pulumi.get(self, "enable_thin_provisioning")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Name to give to the Organization VDC Template, as seen by System administrators
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="networkPoolId")
    def network_pool_id(self) -> pulumi.Output[Optional[str]]:
        """
        If set, specifies the Network pool for the instantiated VDCs. Otherwise, it is automatically chosen
        """
        return pulumi.get(self, "network_pool_id")

    @property
    @pulumi.getter(name="nicQuota")
    def nic_quota(self) -> pulumi.Output[Optional[int]]:
        """
        Quota for the NICs of the instantiated VDCs. Defaults to 100
        """
        return pulumi.get(self, "nic_quota")

    @property
    @pulumi.getter(name="providerVdcs")
    def provider_vdcs(self) -> pulumi.Output[Sequence['outputs.OrgVdcTemplateProviderVdc']]:
        """
        A block that defines a candidate location for the instantiated VDCs. There must be **at least one**, which has the following properties:
        """
        return pulumi.get(self, "provider_vdcs")

    @property
    @pulumi.getter(name="provisionedNetworkQuota")
    def provisioned_network_quota(self) -> pulumi.Output[Optional[int]]:
        """
        Quota for the provisioned networks of the instantiated VDCs. Defaults to 1000
        """
        return pulumi.get(self, "provisioned_network_quota")

    @property
    @pulumi.getter(name="readableByOrgIds")
    def readable_by_org_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        A set of Organization IDs that will be able to view and read this VDC template, they can be obtained with
        [`Org` data source](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/org)
        """
        return pulumi.get(self, "readable_by_org_ids")

    @property
    @pulumi.getter(name="storageProfiles")
    def storage_profiles(self) -> pulumi.Output[Sequence['outputs.OrgVdcTemplateStorageProfile']]:
        """
        A block that defines a storage profile that the VDCs instantiated from this template will use. Must be **at least one**, which has the following properties:
        """
        return pulumi.get(self, "storage_profiles")

    @property
    @pulumi.getter(name="tenantDescription")
    def tenant_description(self) -> pulumi.Output[Optional[str]]:
        """
        Description of the Organization VDC Template, as seen by the allowed tenants
        """
        return pulumi.get(self, "tenant_description")

    @property
    @pulumi.getter(name="tenantName")
    def tenant_name(self) -> pulumi.Output[str]:
        """
        Name to give to the Organization VDC Template, as seen by the allowed tenants
        """
        return pulumi.get(self, "tenant_name")

    @property
    @pulumi.getter(name="vmQuota")
    def vm_quota(self) -> pulumi.Output[Optional[int]]:
        """
        Quota for the VMs of the instantiated VDCs. 0 means unlimited. Defaults to 0
        """
        return pulumi.get(self, "vm_quota")

