# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetRdeBehaviorInvocationResult',
    'AwaitableGetRdeBehaviorInvocationResult',
    'get_rde_behavior_invocation',
    'get_rde_behavior_invocation_output',
]

@pulumi.output_type
class GetRdeBehaviorInvocationResult:
    """
    A collection of values returned by getRdeBehaviorInvocation.
    """
    def __init__(__self__, arguments=None, arguments_json=None, behavior_id=None, id=None, invoke_on_refresh=None, metadata=None, metadata_json=None, rde_id=None, result=None):
        if arguments and not isinstance(arguments, dict):
            raise TypeError("Expected argument 'arguments' to be a dict")
        pulumi.set(__self__, "arguments", arguments)
        if arguments_json and not isinstance(arguments_json, str):
            raise TypeError("Expected argument 'arguments_json' to be a str")
        pulumi.set(__self__, "arguments_json", arguments_json)
        if behavior_id and not isinstance(behavior_id, str):
            raise TypeError("Expected argument 'behavior_id' to be a str")
        pulumi.set(__self__, "behavior_id", behavior_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if invoke_on_refresh and not isinstance(invoke_on_refresh, bool):
            raise TypeError("Expected argument 'invoke_on_refresh' to be a bool")
        pulumi.set(__self__, "invoke_on_refresh", invoke_on_refresh)
        if metadata and not isinstance(metadata, dict):
            raise TypeError("Expected argument 'metadata' to be a dict")
        pulumi.set(__self__, "metadata", metadata)
        if metadata_json and not isinstance(metadata_json, str):
            raise TypeError("Expected argument 'metadata_json' to be a str")
        pulumi.set(__self__, "metadata_json", metadata_json)
        if rde_id and not isinstance(rde_id, str):
            raise TypeError("Expected argument 'rde_id' to be a str")
        pulumi.set(__self__, "rde_id", rde_id)
        if result and not isinstance(result, str):
            raise TypeError("Expected argument 'result' to be a str")
        pulumi.set(__self__, "result", result)

    @property
    @pulumi.getter
    @_utilities.deprecated("""Use 'arguments_json' instead""")
    def arguments(self) -> Optional[Mapping[str, str]]:
        return pulumi.get(self, "arguments")

    @property
    @pulumi.getter(name="argumentsJson")
    def arguments_json(self) -> Optional[str]:
        return pulumi.get(self, "arguments_json")

    @property
    @pulumi.getter(name="behaviorId")
    def behavior_id(self) -> str:
        return pulumi.get(self, "behavior_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="invokeOnRefresh")
    def invoke_on_refresh(self) -> Optional[bool]:
        return pulumi.get(self, "invoke_on_refresh")

    @property
    @pulumi.getter
    @_utilities.deprecated("""Use 'metadata_json' instead""")
    def metadata(self) -> Optional[Mapping[str, str]]:
        return pulumi.get(self, "metadata")

    @property
    @pulumi.getter(name="metadataJson")
    def metadata_json(self) -> Optional[str]:
        return pulumi.get(self, "metadata_json")

    @property
    @pulumi.getter(name="rdeId")
    def rde_id(self) -> str:
        return pulumi.get(self, "rde_id")

    @property
    @pulumi.getter
    def result(self) -> str:
        """
        The invocation result in plain text
        """
        return pulumi.get(self, "result")


class AwaitableGetRdeBehaviorInvocationResult(GetRdeBehaviorInvocationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRdeBehaviorInvocationResult(
            arguments=self.arguments,
            arguments_json=self.arguments_json,
            behavior_id=self.behavior_id,
            id=self.id,
            invoke_on_refresh=self.invoke_on_refresh,
            metadata=self.metadata,
            metadata_json=self.metadata_json,
            rde_id=self.rde_id,
            result=self.result)


def get_rde_behavior_invocation(arguments: Optional[Mapping[str, str]] = None,
                                arguments_json: Optional[str] = None,
                                behavior_id: Optional[str] = None,
                                invoke_on_refresh: Optional[bool] = None,
                                metadata: Optional[Mapping[str, str]] = None,
                                metadata_json: Optional[str] = None,
                                rde_id: Optional[str] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRdeBehaviorInvocationResult:
    """
    > This feature is **experimental** and may change in future

    Provides the capability of invoking an existing [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior)
    or [RDE Type Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type_behavior) in VMware Cloud Director.

    Supported in provider *v3.11+*


    :param Mapping[str, str] arguments: A map with the arguments of the invocation. Deprecated in favor of `arguments_json`
    :param str arguments_json: A JSON string with the arguments of the invocation. The built-in function `jsonencode` can
           be used to set it.
    :param str behavior_id: The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) or
           the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type_behavior) to invoke
    :param Mapping[str, str] metadata: A map with the metadata of the invocation. Deprecated in favor of `metadata_json`
    :param str metadata_json: A JSON string with the arguments of the invocation. The built-in function `jsonencode` can
           be used to set it.
    :param str rde_id: The ID of the [RDE](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde) which Behavior will be invoked
    """
    __args__ = dict()
    __args__['arguments'] = arguments
    __args__['argumentsJson'] = arguments_json
    __args__['behaviorId'] = behavior_id
    __args__['invokeOnRefresh'] = invoke_on_refresh
    __args__['metadata'] = metadata
    __args__['metadataJson'] = metadata_json
    __args__['rdeId'] = rde_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getRdeBehaviorInvocation:getRdeBehaviorInvocation', __args__, opts=opts, typ=GetRdeBehaviorInvocationResult).value

    return AwaitableGetRdeBehaviorInvocationResult(
        arguments=pulumi.get(__ret__, 'arguments'),
        arguments_json=pulumi.get(__ret__, 'arguments_json'),
        behavior_id=pulumi.get(__ret__, 'behavior_id'),
        id=pulumi.get(__ret__, 'id'),
        invoke_on_refresh=pulumi.get(__ret__, 'invoke_on_refresh'),
        metadata=pulumi.get(__ret__, 'metadata'),
        metadata_json=pulumi.get(__ret__, 'metadata_json'),
        rde_id=pulumi.get(__ret__, 'rde_id'),
        result=pulumi.get(__ret__, 'result'))
def get_rde_behavior_invocation_output(arguments: Optional[pulumi.Input[Optional[Mapping[str, str]]]] = None,
                                       arguments_json: Optional[pulumi.Input[Optional[str]]] = None,
                                       behavior_id: Optional[pulumi.Input[str]] = None,
                                       invoke_on_refresh: Optional[pulumi.Input[Optional[bool]]] = None,
                                       metadata: Optional[pulumi.Input[Optional[Mapping[str, str]]]] = None,
                                       metadata_json: Optional[pulumi.Input[Optional[str]]] = None,
                                       rde_id: Optional[pulumi.Input[str]] = None,
                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRdeBehaviorInvocationResult]:
    """
    > This feature is **experimental** and may change in future

    Provides the capability of invoking an existing [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior)
    or [RDE Type Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type_behavior) in VMware Cloud Director.

    Supported in provider *v3.11+*


    :param Mapping[str, str] arguments: A map with the arguments of the invocation. Deprecated in favor of `arguments_json`
    :param str arguments_json: A JSON string with the arguments of the invocation. The built-in function `jsonencode` can
           be used to set it.
    :param str behavior_id: The ID of the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior) or
           the [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type_behavior) to invoke
    :param Mapping[str, str] metadata: A map with the metadata of the invocation. Deprecated in favor of `metadata_json`
    :param str metadata_json: A JSON string with the arguments of the invocation. The built-in function `jsonencode` can
           be used to set it.
    :param str rde_id: The ID of the [RDE](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde) which Behavior will be invoked
    """
    __args__ = dict()
    __args__['arguments'] = arguments
    __args__['argumentsJson'] = arguments_json
    __args__['behaviorId'] = behavior_id
    __args__['invokeOnRefresh'] = invoke_on_refresh
    __args__['metadata'] = metadata
    __args__['metadataJson'] = metadata_json
    __args__['rdeId'] = rde_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getRdeBehaviorInvocation:getRdeBehaviorInvocation', __args__, opts=opts, typ=GetRdeBehaviorInvocationResult)
    return __ret__.apply(lambda __response__: GetRdeBehaviorInvocationResult(
        arguments=pulumi.get(__response__, 'arguments'),
        arguments_json=pulumi.get(__response__, 'arguments_json'),
        behavior_id=pulumi.get(__response__, 'behavior_id'),
        id=pulumi.get(__response__, 'id'),
        invoke_on_refresh=pulumi.get(__response__, 'invoke_on_refresh'),
        metadata=pulumi.get(__response__, 'metadata'),
        metadata_json=pulumi.get(__response__, 'metadata_json'),
        rde_id=pulumi.get(__response__, 'rde_id'),
        result=pulumi.get(__response__, 'result')))
