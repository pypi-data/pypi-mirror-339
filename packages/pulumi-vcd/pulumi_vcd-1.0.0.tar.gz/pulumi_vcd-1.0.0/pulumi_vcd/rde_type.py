# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['RdeTypeArgs', 'RdeType']

@pulumi.input_type
class RdeTypeArgs:
    def __init__(__self__, *,
                 nss: pulumi.Input[str],
                 vendor: pulumi.Input[str],
                 version: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 hooks: Optional[pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]]] = None,
                 inherited_version: Optional[pulumi.Input[str]] = None,
                 interface_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 schema: Optional[pulumi.Input[str]] = None,
                 schema_url: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a RdeType resource.
        :param pulumi.Input[str] nss: A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[str] vendor: The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[str] version: The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        :param pulumi.Input[str] description: The description of the Runtime Defined Entity Type.
        :param pulumi.Input[str] external_id: An external entity's ID that this Runtime Defined Entity Type may apply to.
        :param pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]] hooks: Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
               to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
               automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        :param pulumi.Input[str] inherited_version: To be used when creating a new version of a Runtime Defined Entity Type.
               Specifies the version of the type that will be the template for the authorization configuration of the new version.
               The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
               If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] interface_ids: The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        :param pulumi.Input[str] name: The name of the Runtime Defined Entity Type.
        :param pulumi.Input[str] schema: The JSON-Schema valid definition of the Runtime Defined Entity Type
        :param pulumi.Input[str] schema_url: URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        """
        pulumi.set(__self__, "nss", nss)
        pulumi.set(__self__, "vendor", vendor)
        pulumi.set(__self__, "version", version)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if external_id is not None:
            pulumi.set(__self__, "external_id", external_id)
        if hooks is not None:
            pulumi.set(__self__, "hooks", hooks)
        if inherited_version is not None:
            pulumi.set(__self__, "inherited_version", inherited_version)
        if interface_ids is not None:
            pulumi.set(__self__, "interface_ids", interface_ids)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if schema is not None:
            pulumi.set(__self__, "schema", schema)
        if schema_url is not None:
            pulumi.set(__self__, "schema_url", schema_url)

    @property
    @pulumi.getter
    def nss(self) -> pulumi.Input[str]:
        """
        A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        """
        return pulumi.get(self, "nss")

    @nss.setter
    def nss(self, value: pulumi.Input[str]):
        pulumi.set(self, "nss", value)

    @property
    @pulumi.getter
    def vendor(self) -> pulumi.Input[str]:
        """
        The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        """
        return pulumi.get(self, "vendor")

    @vendor.setter
    def vendor(self, value: pulumi.Input[str]):
        pulumi.set(self, "vendor", value)

    @property
    @pulumi.getter
    def version(self) -> pulumi.Input[str]:
        """
        The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: pulumi.Input[str]):
        pulumi.set(self, "version", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the Runtime Defined Entity Type.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> Optional[pulumi.Input[str]]:
        """
        An external entity's ID that this Runtime Defined Entity Type may apply to.
        """
        return pulumi.get(self, "external_id")

    @external_id.setter
    def external_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external_id", value)

    @property
    @pulumi.getter
    def hooks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]]]:
        """
        Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
        to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
        automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        """
        return pulumi.get(self, "hooks")

    @hooks.setter
    def hooks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]]]):
        pulumi.set(self, "hooks", value)

    @property
    @pulumi.getter(name="inheritedVersion")
    def inherited_version(self) -> Optional[pulumi.Input[str]]:
        """
        To be used when creating a new version of a Runtime Defined Entity Type.
        Specifies the version of the type that will be the template for the authorization configuration of the new version.
        The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
        If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        """
        return pulumi.get(self, "inherited_version")

    @inherited_version.setter
    def inherited_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "inherited_version", value)

    @property
    @pulumi.getter(name="interfaceIds")
    def interface_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        """
        return pulumi.get(self, "interface_ids")

    @interface_ids.setter
    def interface_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "interface_ids", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Runtime Defined Entity Type.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def schema(self) -> Optional[pulumi.Input[str]]:
        """
        The JSON-Schema valid definition of the Runtime Defined Entity Type
        """
        return pulumi.get(self, "schema")

    @schema.setter
    def schema(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schema", value)

    @property
    @pulumi.getter(name="schemaUrl")
    def schema_url(self) -> Optional[pulumi.Input[str]]:
        """
        URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        """
        return pulumi.get(self, "schema_url")

    @schema_url.setter
    def schema_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schema_url", value)


@pulumi.input_type
class _RdeTypeState:
    def __init__(__self__, *,
                 description: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 hooks: Optional[pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]]] = None,
                 inherited_version: Optional[pulumi.Input[str]] = None,
                 interface_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nss: Optional[pulumi.Input[str]] = None,
                 readonly: Optional[pulumi.Input[bool]] = None,
                 schema: Optional[pulumi.Input[str]] = None,
                 schema_url: Optional[pulumi.Input[str]] = None,
                 vendor: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RdeType resources.
        :param pulumi.Input[str] description: The description of the Runtime Defined Entity Type.
        :param pulumi.Input[str] external_id: An external entity's ID that this Runtime Defined Entity Type may apply to.
        :param pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]] hooks: Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
               to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
               automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        :param pulumi.Input[str] inherited_version: To be used when creating a new version of a Runtime Defined Entity Type.
               Specifies the version of the type that will be the template for the authorization configuration of the new version.
               The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
               If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] interface_ids: The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        :param pulumi.Input[str] name: The name of the Runtime Defined Entity Type.
        :param pulumi.Input[str] nss: A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[bool] readonly: True if the Runtime Defined Entity Type cannot be modified.
        :param pulumi.Input[str] schema: The JSON-Schema valid definition of the Runtime Defined Entity Type
        :param pulumi.Input[str] schema_url: URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        :param pulumi.Input[str] vendor: The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[str] version: The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        """
        if description is not None:
            pulumi.set(__self__, "description", description)
        if external_id is not None:
            pulumi.set(__self__, "external_id", external_id)
        if hooks is not None:
            pulumi.set(__self__, "hooks", hooks)
        if inherited_version is not None:
            pulumi.set(__self__, "inherited_version", inherited_version)
        if interface_ids is not None:
            pulumi.set(__self__, "interface_ids", interface_ids)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if nss is not None:
            pulumi.set(__self__, "nss", nss)
        if readonly is not None:
            pulumi.set(__self__, "readonly", readonly)
        if schema is not None:
            pulumi.set(__self__, "schema", schema)
        if schema_url is not None:
            pulumi.set(__self__, "schema_url", schema_url)
        if vendor is not None:
            pulumi.set(__self__, "vendor", vendor)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The description of the Runtime Defined Entity Type.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> Optional[pulumi.Input[str]]:
        """
        An external entity's ID that this Runtime Defined Entity Type may apply to.
        """
        return pulumi.get(self, "external_id")

    @external_id.setter
    def external_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external_id", value)

    @property
    @pulumi.getter
    def hooks(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]]]:
        """
        Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
        to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
        automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        """
        return pulumi.get(self, "hooks")

    @hooks.setter
    def hooks(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['RdeTypeHookArgs']]]]):
        pulumi.set(self, "hooks", value)

    @property
    @pulumi.getter(name="inheritedVersion")
    def inherited_version(self) -> Optional[pulumi.Input[str]]:
        """
        To be used when creating a new version of a Runtime Defined Entity Type.
        Specifies the version of the type that will be the template for the authorization configuration of the new version.
        The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
        If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        """
        return pulumi.get(self, "inherited_version")

    @inherited_version.setter
    def inherited_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "inherited_version", value)

    @property
    @pulumi.getter(name="interfaceIds")
    def interface_ids(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        """
        return pulumi.get(self, "interface_ids")

    @interface_ids.setter
    def interface_ids(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "interface_ids", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The name of the Runtime Defined Entity Type.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def nss(self) -> Optional[pulumi.Input[str]]:
        """
        A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        """
        return pulumi.get(self, "nss")

    @nss.setter
    def nss(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "nss", value)

    @property
    @pulumi.getter
    def readonly(self) -> Optional[pulumi.Input[bool]]:
        """
        True if the Runtime Defined Entity Type cannot be modified.
        """
        return pulumi.get(self, "readonly")

    @readonly.setter
    def readonly(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "readonly", value)

    @property
    @pulumi.getter
    def schema(self) -> Optional[pulumi.Input[str]]:
        """
        The JSON-Schema valid definition of the Runtime Defined Entity Type
        """
        return pulumi.get(self, "schema")

    @schema.setter
    def schema(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schema", value)

    @property
    @pulumi.getter(name="schemaUrl")
    def schema_url(self) -> Optional[pulumi.Input[str]]:
        """
        URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        """
        return pulumi.get(self, "schema_url")

    @schema_url.setter
    def schema_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "schema_url", value)

    @property
    @pulumi.getter
    def vendor(self) -> Optional[pulumi.Input[str]]:
        """
        The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        """
        return pulumi.get(self, "vendor")

    @vendor.setter
    def vendor(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vendor", value)

    @property
    @pulumi.getter
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


class RdeType(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 hooks: Optional[pulumi.Input[Sequence[pulumi.Input[Union['RdeTypeHookArgs', 'RdeTypeHookArgsDict']]]]] = None,
                 inherited_version: Optional[pulumi.Input[str]] = None,
                 interface_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nss: Optional[pulumi.Input[str]] = None,
                 schema: Optional[pulumi.Input[str]] = None,
                 schema_url: Optional[pulumi.Input[str]] = None,
                 vendor: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a RdeType resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the Runtime Defined Entity Type.
        :param pulumi.Input[str] external_id: An external entity's ID that this Runtime Defined Entity Type may apply to.
        :param pulumi.Input[Sequence[pulumi.Input[Union['RdeTypeHookArgs', 'RdeTypeHookArgsDict']]]] hooks: Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
               to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
               automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        :param pulumi.Input[str] inherited_version: To be used when creating a new version of a Runtime Defined Entity Type.
               Specifies the version of the type that will be the template for the authorization configuration of the new version.
               The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
               If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] interface_ids: The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        :param pulumi.Input[str] name: The name of the Runtime Defined Entity Type.
        :param pulumi.Input[str] nss: A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[str] schema: The JSON-Schema valid definition of the Runtime Defined Entity Type
        :param pulumi.Input[str] schema_url: URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        :param pulumi.Input[str] vendor: The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[str] version: The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RdeTypeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a RdeType resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param RdeTypeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RdeTypeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 hooks: Optional[pulumi.Input[Sequence[pulumi.Input[Union['RdeTypeHookArgs', 'RdeTypeHookArgsDict']]]]] = None,
                 inherited_version: Optional[pulumi.Input[str]] = None,
                 interface_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 nss: Optional[pulumi.Input[str]] = None,
                 schema: Optional[pulumi.Input[str]] = None,
                 schema_url: Optional[pulumi.Input[str]] = None,
                 vendor: Optional[pulumi.Input[str]] = None,
                 version: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RdeTypeArgs.__new__(RdeTypeArgs)

            __props__.__dict__["description"] = description
            __props__.__dict__["external_id"] = external_id
            __props__.__dict__["hooks"] = hooks
            __props__.__dict__["inherited_version"] = inherited_version
            __props__.__dict__["interface_ids"] = interface_ids
            __props__.__dict__["name"] = name
            if nss is None and not opts.urn:
                raise TypeError("Missing required property 'nss'")
            __props__.__dict__["nss"] = nss
            __props__.__dict__["schema"] = schema
            __props__.__dict__["schema_url"] = schema_url
            if vendor is None and not opts.urn:
                raise TypeError("Missing required property 'vendor'")
            __props__.__dict__["vendor"] = vendor
            if version is None and not opts.urn:
                raise TypeError("Missing required property 'version'")
            __props__.__dict__["version"] = version
            __props__.__dict__["readonly"] = None
        super(RdeType, __self__).__init__(
            'vcd:index/rdeType:RdeType',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            description: Optional[pulumi.Input[str]] = None,
            external_id: Optional[pulumi.Input[str]] = None,
            hooks: Optional[pulumi.Input[Sequence[pulumi.Input[Union['RdeTypeHookArgs', 'RdeTypeHookArgsDict']]]]] = None,
            inherited_version: Optional[pulumi.Input[str]] = None,
            interface_ids: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            nss: Optional[pulumi.Input[str]] = None,
            readonly: Optional[pulumi.Input[bool]] = None,
            schema: Optional[pulumi.Input[str]] = None,
            schema_url: Optional[pulumi.Input[str]] = None,
            vendor: Optional[pulumi.Input[str]] = None,
            version: Optional[pulumi.Input[str]] = None) -> 'RdeType':
        """
        Get an existing RdeType resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of the Runtime Defined Entity Type.
        :param pulumi.Input[str] external_id: An external entity's ID that this Runtime Defined Entity Type may apply to.
        :param pulumi.Input[Sequence[pulumi.Input[Union['RdeTypeHookArgs', 'RdeTypeHookArgsDict']]]] hooks: Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
               to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
               automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        :param pulumi.Input[str] inherited_version: To be used when creating a new version of a Runtime Defined Entity Type.
               Specifies the version of the type that will be the template for the authorization configuration of the new version.
               The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
               If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] interface_ids: The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        :param pulumi.Input[str] name: The name of the Runtime Defined Entity Type.
        :param pulumi.Input[str] nss: A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[bool] readonly: True if the Runtime Defined Entity Type cannot be modified.
        :param pulumi.Input[str] schema: The JSON-Schema valid definition of the Runtime Defined Entity Type
        :param pulumi.Input[str] schema_url: URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        :param pulumi.Input[str] vendor: The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        :param pulumi.Input[str] version: The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RdeTypeState.__new__(_RdeTypeState)

        __props__.__dict__["description"] = description
        __props__.__dict__["external_id"] = external_id
        __props__.__dict__["hooks"] = hooks
        __props__.__dict__["inherited_version"] = inherited_version
        __props__.__dict__["interface_ids"] = interface_ids
        __props__.__dict__["name"] = name
        __props__.__dict__["nss"] = nss
        __props__.__dict__["readonly"] = readonly
        __props__.__dict__["schema"] = schema
        __props__.__dict__["schema_url"] = schema_url
        __props__.__dict__["vendor"] = vendor
        __props__.__dict__["version"] = version
        return RdeType(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The description of the Runtime Defined Entity Type.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> pulumi.Output[Optional[str]]:
        """
        An external entity's ID that this Runtime Defined Entity Type may apply to.
        """
        return pulumi.get(self, "external_id")

    @property
    @pulumi.getter
    def hooks(self) -> pulumi.Output[Optional[Sequence['outputs.RdeTypeHook']]]:
        """
        Each block maps a lifecycle event of [RDEs](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde)  
        to existing [Behaviors](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior), that will be
        automatically invoked when the corresponding event is triggered. These blocks have the following properties:
        """
        return pulumi.get(self, "hooks")

    @property
    @pulumi.getter(name="inheritedVersion")
    def inherited_version(self) -> pulumi.Output[Optional[str]]:
        """
        To be used when creating a new version of a Runtime Defined Entity Type.
        Specifies the version of the type that will be the template for the authorization configuration of the new version.
        The Type ACLs and the access requirements of the Type Behaviors of the new version will be copied from those of the inherited version.
        If not set, then the new type version will not inherit another version and will have the default authorization settings, just like the first version of a new type.
        """
        return pulumi.get(self, "inherited_version")

    @property
    @pulumi.getter(name="interfaceIds")
    def interface_ids(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The set of [Defined Interfaces](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface) that this Runtime Defined Entity Type will use.
        """
        return pulumi.get(self, "interface_ids")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The name of the Runtime Defined Entity Type.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def nss(self) -> pulumi.Output[str]:
        """
        A unique namespace associated with the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        """
        return pulumi.get(self, "nss")

    @property
    @pulumi.getter
    def readonly(self) -> pulumi.Output[bool]:
        """
        True if the Runtime Defined Entity Type cannot be modified.
        """
        return pulumi.get(self, "readonly")

    @property
    @pulumi.getter
    def schema(self) -> pulumi.Output[str]:
        """
        The JSON-Schema valid definition of the Runtime Defined Entity Type
        """
        return pulumi.get(self, "schema")

    @property
    @pulumi.getter(name="schemaUrl")
    def schema_url(self) -> pulumi.Output[Optional[str]]:
        """
        URL that should point to a JSON-Schema valid definition file of the Runtime Defined Entity Type
        """
        return pulumi.get(self, "schema_url")

    @property
    @pulumi.getter
    def vendor(self) -> pulumi.Output[str]:
        """
        The vendor of the Runtime Defined Entity Type. Only alphanumeric characters, underscores and hyphens allowed.
        """
        return pulumi.get(self, "vendor")

    @property
    @pulumi.getter
    def version(self) -> pulumi.Output[str]:
        """
        The version of the Runtime Defined Entity Type. Must follow [semantic versioning](https://semver.org/) syntax.
        """
        return pulumi.get(self, "version")

