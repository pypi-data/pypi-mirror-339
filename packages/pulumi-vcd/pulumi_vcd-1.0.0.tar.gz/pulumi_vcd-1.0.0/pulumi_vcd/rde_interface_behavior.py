# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['RdeInterfaceBehaviorArgs', 'RdeInterfaceBehavior']

@pulumi.input_type
class RdeInterfaceBehaviorArgs:
    def __init__(__self__, *,
                 rde_interface_id: pulumi.Input[str],
                 always_update_secure_execution_properties: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 execution: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 execution_json: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a RdeInterfaceBehavior resource.
        :param pulumi.Input[str] rde_interface_id: The ID of the RDE Interface that owns the Behavior
        :param pulumi.Input[bool] always_update_secure_execution_properties: Useful to update execution properties marked with `_secure_` and `_internal_`
               as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
               to ask for updates whenever there is a secure property in the execution of the Behavior
        :param pulumi.Input[str] description: A description specifying the contract of the Behavior
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] execution: A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
               can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] execution_json: A string representing a valid JSON that specifies the Behavior execution mechanism.
               You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
               and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
               One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] name: Name of the Behavior
        """
        pulumi.set(__self__, "rde_interface_id", rde_interface_id)
        if always_update_secure_execution_properties is not None:
            pulumi.set(__self__, "always_update_secure_execution_properties", always_update_secure_execution_properties)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if execution is not None:
            pulumi.set(__self__, "execution", execution)
        if execution_json is not None:
            pulumi.set(__self__, "execution_json", execution_json)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="rdeInterfaceId")
    def rde_interface_id(self) -> pulumi.Input[str]:
        """
        The ID of the RDE Interface that owns the Behavior
        """
        return pulumi.get(self, "rde_interface_id")

    @rde_interface_id.setter
    def rde_interface_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "rde_interface_id", value)

    @property
    @pulumi.getter(name="alwaysUpdateSecureExecutionProperties")
    def always_update_secure_execution_properties(self) -> Optional[pulumi.Input[bool]]:
        """
        Useful to update execution properties marked with `_secure_` and `_internal_`
        as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
        to ask for updates whenever there is a secure property in the execution of the Behavior
        """
        return pulumi.get(self, "always_update_secure_execution_properties")

    @always_update_secure_execution_properties.setter
    def always_update_secure_execution_properties(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "always_update_secure_execution_properties", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        A description specifying the contract of the Behavior
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def execution(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
        can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        """
        return pulumi.get(self, "execution")

    @execution.setter
    def execution(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "execution", value)

    @property
    @pulumi.getter(name="executionJson")
    def execution_json(self) -> Optional[pulumi.Input[str]]:
        """
        A string representing a valid JSON that specifies the Behavior execution mechanism.
        You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
        and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
        One of `execution_json` or `execution` must be set.
        """
        return pulumi.get(self, "execution_json")

    @execution_json.setter
    def execution_json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "execution_json", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the Behavior
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)


@pulumi.input_type
class _RdeInterfaceBehaviorState:
    def __init__(__self__, *,
                 always_update_secure_execution_properties: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 execution: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 execution_json: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 rde_interface_id: Optional[pulumi.Input[str]] = None,
                 ref: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering RdeInterfaceBehavior resources.
        :param pulumi.Input[bool] always_update_secure_execution_properties: Useful to update execution properties marked with `_secure_` and `_internal_`
               as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
               to ask for updates whenever there is a secure property in the execution of the Behavior
        :param pulumi.Input[str] description: A description specifying the contract of the Behavior
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] execution: A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
               can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] execution_json: A string representing a valid JSON that specifies the Behavior execution mechanism.
               You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
               and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
               One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] name: Name of the Behavior
        :param pulumi.Input[str] rde_interface_id: The ID of the RDE Interface that owns the Behavior
        :param pulumi.Input[str] ref: The Behavior invocation reference to be used for polymorphic behavior invocations
        """
        if always_update_secure_execution_properties is not None:
            pulumi.set(__self__, "always_update_secure_execution_properties", always_update_secure_execution_properties)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if execution is not None:
            pulumi.set(__self__, "execution", execution)
        if execution_json is not None:
            pulumi.set(__self__, "execution_json", execution_json)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if rde_interface_id is not None:
            pulumi.set(__self__, "rde_interface_id", rde_interface_id)
        if ref is not None:
            pulumi.set(__self__, "ref", ref)

    @property
    @pulumi.getter(name="alwaysUpdateSecureExecutionProperties")
    def always_update_secure_execution_properties(self) -> Optional[pulumi.Input[bool]]:
        """
        Useful to update execution properties marked with `_secure_` and `_internal_`
        as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
        to ask for updates whenever there is a secure property in the execution of the Behavior
        """
        return pulumi.get(self, "always_update_secure_execution_properties")

    @always_update_secure_execution_properties.setter
    def always_update_secure_execution_properties(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "always_update_secure_execution_properties", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        A description specifying the contract of the Behavior
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def execution(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        """
        A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
        can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        """
        return pulumi.get(self, "execution")

    @execution.setter
    def execution(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "execution", value)

    @property
    @pulumi.getter(name="executionJson")
    def execution_json(self) -> Optional[pulumi.Input[str]]:
        """
        A string representing a valid JSON that specifies the Behavior execution mechanism.
        You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
        and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
        One of `execution_json` or `execution` must be set.
        """
        return pulumi.get(self, "execution_json")

    @execution_json.setter
    def execution_json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "execution_json", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of the Behavior
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="rdeInterfaceId")
    def rde_interface_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the RDE Interface that owns the Behavior
        """
        return pulumi.get(self, "rde_interface_id")

    @rde_interface_id.setter
    def rde_interface_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "rde_interface_id", value)

    @property
    @pulumi.getter
    def ref(self) -> Optional[pulumi.Input[str]]:
        """
        The Behavior invocation reference to be used for polymorphic behavior invocations
        """
        return pulumi.get(self, "ref")

    @ref.setter
    def ref(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ref", value)


class RdeInterfaceBehavior(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 always_update_secure_execution_properties: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 execution: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 execution_json: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 rde_interface_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a RdeInterfaceBehavior resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] always_update_secure_execution_properties: Useful to update execution properties marked with `_secure_` and `_internal_`
               as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
               to ask for updates whenever there is a secure property in the execution of the Behavior
        :param pulumi.Input[str] description: A description specifying the contract of the Behavior
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] execution: A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
               can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] execution_json: A string representing a valid JSON that specifies the Behavior execution mechanism.
               You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
               and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
               One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] name: Name of the Behavior
        :param pulumi.Input[str] rde_interface_id: The ID of the RDE Interface that owns the Behavior
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: RdeInterfaceBehaviorArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a RdeInterfaceBehavior resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param RdeInterfaceBehaviorArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(RdeInterfaceBehaviorArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 always_update_secure_execution_properties: Optional[pulumi.Input[bool]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 execution: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 execution_json: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 rde_interface_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = RdeInterfaceBehaviorArgs.__new__(RdeInterfaceBehaviorArgs)

            __props__.__dict__["always_update_secure_execution_properties"] = always_update_secure_execution_properties
            __props__.__dict__["description"] = description
            __props__.__dict__["execution"] = execution
            __props__.__dict__["execution_json"] = execution_json
            __props__.__dict__["name"] = name
            if rde_interface_id is None and not opts.urn:
                raise TypeError("Missing required property 'rde_interface_id'")
            __props__.__dict__["rde_interface_id"] = rde_interface_id
            __props__.__dict__["ref"] = None
        super(RdeInterfaceBehavior, __self__).__init__(
            'vcd:index/rdeInterfaceBehavior:RdeInterfaceBehavior',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            always_update_secure_execution_properties: Optional[pulumi.Input[bool]] = None,
            description: Optional[pulumi.Input[str]] = None,
            execution: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            execution_json: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            rde_interface_id: Optional[pulumi.Input[str]] = None,
            ref: Optional[pulumi.Input[str]] = None) -> 'RdeInterfaceBehavior':
        """
        Get an existing RdeInterfaceBehavior resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] always_update_secure_execution_properties: Useful to update execution properties marked with `_secure_` and `_internal_`
               as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
               to ask for updates whenever there is a secure property in the execution of the Behavior
        :param pulumi.Input[str] description: A description specifying the contract of the Behavior
        :param pulumi.Input[Mapping[str, pulumi.Input[str]]] execution: A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
               can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] execution_json: A string representing a valid JSON that specifies the Behavior execution mechanism.
               You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
               and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
               One of `execution_json` or `execution` must be set.
        :param pulumi.Input[str] name: Name of the Behavior
        :param pulumi.Input[str] rde_interface_id: The ID of the RDE Interface that owns the Behavior
        :param pulumi.Input[str] ref: The Behavior invocation reference to be used for polymorphic behavior invocations
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _RdeInterfaceBehaviorState.__new__(_RdeInterfaceBehaviorState)

        __props__.__dict__["always_update_secure_execution_properties"] = always_update_secure_execution_properties
        __props__.__dict__["description"] = description
        __props__.__dict__["execution"] = execution
        __props__.__dict__["execution_json"] = execution_json
        __props__.__dict__["name"] = name
        __props__.__dict__["rde_interface_id"] = rde_interface_id
        __props__.__dict__["ref"] = ref
        return RdeInterfaceBehavior(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="alwaysUpdateSecureExecutionProperties")
    def always_update_secure_execution_properties(self) -> pulumi.Output[Optional[bool]]:
        """
        Useful to update execution properties marked with `_secure_` and `_internal_`
        as these are not retrievable from VCD, so they are not saved in state. Setting this to `true` will make the provider
        to ask for updates whenever there is a secure property in the execution of the Behavior
        """
        return pulumi.get(self, "always_update_secure_execution_properties")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        A description specifying the contract of the Behavior
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def execution(self) -> pulumi.Output[Mapping[str, str]]:
        """
        A map that specifies the Behavior execution mechanism, this is just a simplification of `execution_json` that
        can make the configuration more readable for simpler Behaviors. One of `execution_json` or `execution` must be set.
        """
        return pulumi.get(self, "execution")

    @property
    @pulumi.getter(name="executionJson")
    def execution_json(self) -> pulumi.Output[str]:
        """
        A string representing a valid JSON that specifies the Behavior execution mechanism.
        You can find more information about the different execution types, like `WebHook`, `noop`, `Activity`, `MQTT`, `VRO`, `AWSLambdaFaaS`
        and others [in the Extensibility SDK documentation](https://vmware.github.io/vcd-ext-sdk/docs/defined_entities_api/behaviors).
        One of `execution_json` or `execution` must be set.
        """
        return pulumi.get(self, "execution_json")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Name of the Behavior
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="rdeInterfaceId")
    def rde_interface_id(self) -> pulumi.Output[str]:
        """
        The ID of the RDE Interface that owns the Behavior
        """
        return pulumi.get(self, "rde_interface_id")

    @property
    @pulumi.getter
    def ref(self) -> pulumi.Output[str]:
        """
        The Behavior invocation reference to be used for polymorphic behavior invocations
        """
        return pulumi.get(self, "ref")

