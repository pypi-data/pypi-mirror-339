# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetRdeTypeBehaviorAclResult',
    'AwaitableGetRdeTypeBehaviorAclResult',
    'get_rde_type_behavior_acl',
    'get_rde_type_behavior_acl_output',
]

@pulumi.output_type
class GetRdeTypeBehaviorAclResult:
    """
    A collection of values returned by getRdeTypeBehaviorAcl.
    """
    def __init__(__self__, access_level_ids=None, behavior_id=None, id=None, rde_type_id=None):
        if access_level_ids and not isinstance(access_level_ids, list):
            raise TypeError("Expected argument 'access_level_ids' to be a list")
        pulumi.set(__self__, "access_level_ids", access_level_ids)
        if behavior_id and not isinstance(behavior_id, str):
            raise TypeError("Expected argument 'behavior_id' to be a str")
        pulumi.set(__self__, "behavior_id", behavior_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if rde_type_id and not isinstance(rde_type_id, str):
            raise TypeError("Expected argument 'rde_type_id' to be a str")
        pulumi.set(__self__, "rde_type_id", rde_type_id)

    @property
    @pulumi.getter(name="accessLevelIds")
    def access_level_ids(self) -> Sequence[str]:
        """
        Set of Access Level IDs associated to the Behavior defined in `behavior_id` argument
        """
        return pulumi.get(self, "access_level_ids")

    @property
    @pulumi.getter(name="behaviorId")
    def behavior_id(self) -> str:
        return pulumi.get(self, "behavior_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="rdeTypeId")
    def rde_type_id(self) -> str:
        return pulumi.get(self, "rde_type_id")


class AwaitableGetRdeTypeBehaviorAclResult(GetRdeTypeBehaviorAclResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRdeTypeBehaviorAclResult(
            access_level_ids=self.access_level_ids,
            behavior_id=self.behavior_id,
            id=self.id,
            rde_type_id=self.rde_type_id)


def get_rde_type_behavior_acl(behavior_id: Optional[str] = None,
                              rde_type_id: Optional[str] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetRdeTypeBehaviorAclResult:
    """
    Provides the capability of fetching the RDE Type Behavior Access Levels from VMware Cloud Director.

    Supported in provider *v3.10+*. Requires System Administrator privileges.


    :param str behavior_id: The ID of either a [RDE Type Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type_behavior)
           or a [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior)
    :param str rde_type_id: The ID of the RDE Type
    """
    __args__ = dict()
    __args__['behaviorId'] = behavior_id
    __args__['rdeTypeId'] = rde_type_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getRdeTypeBehaviorAcl:getRdeTypeBehaviorAcl', __args__, opts=opts, typ=GetRdeTypeBehaviorAclResult).value

    return AwaitableGetRdeTypeBehaviorAclResult(
        access_level_ids=pulumi.get(__ret__, 'access_level_ids'),
        behavior_id=pulumi.get(__ret__, 'behavior_id'),
        id=pulumi.get(__ret__, 'id'),
        rde_type_id=pulumi.get(__ret__, 'rde_type_id'))
def get_rde_type_behavior_acl_output(behavior_id: Optional[pulumi.Input[str]] = None,
                                     rde_type_id: Optional[pulumi.Input[str]] = None,
                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetRdeTypeBehaviorAclResult]:
    """
    Provides the capability of fetching the RDE Type Behavior Access Levels from VMware Cloud Director.

    Supported in provider *v3.10+*. Requires System Administrator privileges.


    :param str behavior_id: The ID of either a [RDE Type Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_type_behavior)
           or a [RDE Interface Behavior](https://www.terraform.io/providers/vmware/vcd/latest/docs/resources/rde_interface_behavior)
    :param str rde_type_id: The ID of the RDE Type
    """
    __args__ = dict()
    __args__['behaviorId'] = behavior_id
    __args__['rdeTypeId'] = rde_type_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getRdeTypeBehaviorAcl:getRdeTypeBehaviorAcl', __args__, opts=opts, typ=GetRdeTypeBehaviorAclResult)
    return __ret__.apply(lambda __response__: GetRdeTypeBehaviorAclResult(
        access_level_ids=pulumi.get(__response__, 'access_level_ids'),
        behavior_id=pulumi.get(__response__, 'behavior_id'),
        id=pulumi.get(__response__, 'id'),
        rde_type_id=pulumi.get(__response__, 'rde_type_id')))
