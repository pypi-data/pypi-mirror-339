# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetNsxtAlbVirtualServiceHttpReqRulesResult',
    'AwaitableGetNsxtAlbVirtualServiceHttpReqRulesResult',
    'get_nsxt_alb_virtual_service_http_req_rules',
    'get_nsxt_alb_virtual_service_http_req_rules_output',
]

@pulumi.output_type
class GetNsxtAlbVirtualServiceHttpReqRulesResult:
    """
    A collection of values returned by getNsxtAlbVirtualServiceHttpReqRules.
    """
    def __init__(__self__, id=None, rules=None, virtual_service_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        pulumi.set(__self__, "rules", rules)
        if virtual_service_id and not isinstance(virtual_service_id, str):
            raise TypeError("Expected argument 'virtual_service_id' to be a str")
        pulumi.set(__self__, "virtual_service_id", virtual_service_id)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetNsxtAlbVirtualServiceHttpReqRulesRuleResult']:
        return pulumi.get(self, "rules")

    @property
    @pulumi.getter(name="virtualServiceId")
    def virtual_service_id(self) -> str:
        return pulumi.get(self, "virtual_service_id")


class AwaitableGetNsxtAlbVirtualServiceHttpReqRulesResult(GetNsxtAlbVirtualServiceHttpReqRulesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNsxtAlbVirtualServiceHttpReqRulesResult(
            id=self.id,
            rules=self.rules,
            virtual_service_id=self.virtual_service_id)


def get_nsxt_alb_virtual_service_http_req_rules(virtual_service_id: Optional[str] = None,
                                                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNsxtAlbVirtualServiceHttpReqRulesResult:
    """
    Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.

    Provides a data source to read ALB Service Engine Groups policies for HTTP requests. HTTP request
    rules modify requests before they are either forwarded to the application, used as a basis for
    content switching, or discarded.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    request_rules = vcd.get_nsxt_alb_virtual_service_http_req_rules(virtual_service_id=test["id"])
    ```


    :param str virtual_service_id: An ID of existing ALB Virtual Service.
    """
    __args__ = dict()
    __args__['virtualServiceId'] = virtual_service_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getNsxtAlbVirtualServiceHttpReqRules:getNsxtAlbVirtualServiceHttpReqRules', __args__, opts=opts, typ=GetNsxtAlbVirtualServiceHttpReqRulesResult).value

    return AwaitableGetNsxtAlbVirtualServiceHttpReqRulesResult(
        id=pulumi.get(__ret__, 'id'),
        rules=pulumi.get(__ret__, 'rules'),
        virtual_service_id=pulumi.get(__ret__, 'virtual_service_id'))
def get_nsxt_alb_virtual_service_http_req_rules_output(virtual_service_id: Optional[pulumi.Input[str]] = None,
                                                       opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNsxtAlbVirtualServiceHttpReqRulesResult]:
    """
    Supported in provider *v3.14+* and VCD 10.5+ with NSX-T and ALB.

    Provides a data source to read ALB Service Engine Groups policies for HTTP requests. HTTP request
    rules modify requests before they are either forwarded to the application, used as a basis for
    content switching, or discarded.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    request_rules = vcd.get_nsxt_alb_virtual_service_http_req_rules(virtual_service_id=test["id"])
    ```


    :param str virtual_service_id: An ID of existing ALB Virtual Service.
    """
    __args__ = dict()
    __args__['virtualServiceId'] = virtual_service_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getNsxtAlbVirtualServiceHttpReqRules:getNsxtAlbVirtualServiceHttpReqRules', __args__, opts=opts, typ=GetNsxtAlbVirtualServiceHttpReqRulesResult)
    return __ret__.apply(lambda __response__: GetNsxtAlbVirtualServiceHttpReqRulesResult(
        id=pulumi.get(__response__, 'id'),
        rules=pulumi.get(__response__, 'rules'),
        virtual_service_id=pulumi.get(__response__, 'virtual_service_id')))
