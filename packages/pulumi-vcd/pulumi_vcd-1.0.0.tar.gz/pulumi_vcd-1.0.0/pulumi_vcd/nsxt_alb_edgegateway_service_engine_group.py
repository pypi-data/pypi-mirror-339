# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['NsxtAlbEdgegatewayServiceEngineGroupArgs', 'NsxtAlbEdgegatewayServiceEngineGroup']

@pulumi.input_type
class NsxtAlbEdgegatewayServiceEngineGroupArgs:
    def __init__(__self__, *,
                 edge_gateway_id: pulumi.Input[str],
                 service_engine_group_id: pulumi.Input[str],
                 max_virtual_services: Optional[pulumi.Input[int]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 reserved_virtual_services: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a NsxtAlbEdgegatewayServiceEngineGroup resource.
        :param pulumi.Input[str] edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
               [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        :param pulumi.Input[str] service_engine_group_id: An ID of NSX-T Service Engine Group. Can be looked up using
               [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
               source.
        :param pulumi.Input[int] max_virtual_services: Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
               Shared Service Engine Groups**.
        :param pulumi.Input[str] org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        :param pulumi.Input[str] reserved_virtual_services: Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
               Service Engine Groups.**
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        """
        pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        pulumi.set(__self__, "service_engine_group_id", service_engine_group_id)
        if max_virtual_services is not None:
            pulumi.set(__self__, "max_virtual_services", max_virtual_services)
        if org is not None:
            pulumi.set(__self__, "org", org)
        if reserved_virtual_services is not None:
            pulumi.set(__self__, "reserved_virtual_services", reserved_virtual_services)
        if vdc is not None:
            warnings.warn("""Edge Gateway will be looked up based on 'edge_gateway_id' field""", DeprecationWarning)
            pulumi.log.warn("""vdc is deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field""")
        if vdc is not None:
            pulumi.set(__self__, "vdc", vdc)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> pulumi.Input[str]:
        """
        An ID of NSX-T Edge Gateway. Can be looked up using
        [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        """
        return pulumi.get(self, "edge_gateway_id")

    @edge_gateway_id.setter
    def edge_gateway_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "edge_gateway_id", value)

    @property
    @pulumi.getter(name="serviceEngineGroupId")
    def service_engine_group_id(self) -> pulumi.Input[str]:
        """
        An ID of NSX-T Service Engine Group. Can be looked up using
        [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
        source.
        """
        return pulumi.get(self, "service_engine_group_id")

    @service_engine_group_id.setter
    def service_engine_group_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "service_engine_group_id", value)

    @property
    @pulumi.getter(name="maxVirtualServices")
    def max_virtual_services(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
        Shared Service Engine Groups**.
        """
        return pulumi.get(self, "max_virtual_services")

    @max_virtual_services.setter
    def max_virtual_services(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_virtual_services", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)

    @property
    @pulumi.getter(name="reservedVirtualServices")
    def reserved_virtual_services(self) -> Optional[pulumi.Input[str]]:
        """
        Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
        Service Engine Groups.**
        """
        return pulumi.get(self, "reserved_virtual_services")

    @reserved_virtual_services.setter
    def reserved_virtual_services(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reserved_virtual_services", value)

    @property
    @pulumi.getter
    @_utilities.deprecated("""Edge Gateway will be looked up based on 'edge_gateway_id' field""")
    def vdc(self) -> Optional[pulumi.Input[str]]:
        """
        The name of VDC to use, optional if defined at provider level
        """
        return pulumi.get(self, "vdc")

    @vdc.setter
    def vdc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdc", value)


@pulumi.input_type
class _NsxtAlbEdgegatewayServiceEngineGroupState:
    def __init__(__self__, *,
                 deployed_virtual_services: Optional[pulumi.Input[int]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 max_virtual_services: Optional[pulumi.Input[int]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 reserved_virtual_services: Optional[pulumi.Input[str]] = None,
                 service_engine_group_id: Optional[pulumi.Input[str]] = None,
                 service_engine_group_name: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering NsxtAlbEdgegatewayServiceEngineGroup resources.
        :param pulumi.Input[int] deployed_virtual_services: Number of deployed Virtual Services on this Service Engine Group.
        :param pulumi.Input[str] edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
               [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        :param pulumi.Input[int] max_virtual_services: Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
               Shared Service Engine Groups**.
        :param pulumi.Input[str] org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        :param pulumi.Input[str] reserved_virtual_services: Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
               Service Engine Groups.**
        :param pulumi.Input[str] service_engine_group_id: An ID of NSX-T Service Engine Group. Can be looked up using
               [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
               source.
        :param pulumi.Input[str] service_engine_group_name: Service Engine Group Name which is attached to NSX-T Edge Gateway
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        """
        if deployed_virtual_services is not None:
            pulumi.set(__self__, "deployed_virtual_services", deployed_virtual_services)
        if edge_gateway_id is not None:
            pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        if max_virtual_services is not None:
            pulumi.set(__self__, "max_virtual_services", max_virtual_services)
        if org is not None:
            pulumi.set(__self__, "org", org)
        if reserved_virtual_services is not None:
            pulumi.set(__self__, "reserved_virtual_services", reserved_virtual_services)
        if service_engine_group_id is not None:
            pulumi.set(__self__, "service_engine_group_id", service_engine_group_id)
        if service_engine_group_name is not None:
            pulumi.set(__self__, "service_engine_group_name", service_engine_group_name)
        if vdc is not None:
            warnings.warn("""Edge Gateway will be looked up based on 'edge_gateway_id' field""", DeprecationWarning)
            pulumi.log.warn("""vdc is deprecated: Edge Gateway will be looked up based on 'edge_gateway_id' field""")
        if vdc is not None:
            pulumi.set(__self__, "vdc", vdc)

    @property
    @pulumi.getter(name="deployedVirtualServices")
    def deployed_virtual_services(self) -> Optional[pulumi.Input[int]]:
        """
        Number of deployed Virtual Services on this Service Engine Group.
        """
        return pulumi.get(self, "deployed_virtual_services")

    @deployed_virtual_services.setter
    def deployed_virtual_services(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "deployed_virtual_services", value)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> Optional[pulumi.Input[str]]:
        """
        An ID of NSX-T Edge Gateway. Can be looked up using
        [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        """
        return pulumi.get(self, "edge_gateway_id")

    @edge_gateway_id.setter
    def edge_gateway_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edge_gateway_id", value)

    @property
    @pulumi.getter(name="maxVirtualServices")
    def max_virtual_services(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
        Shared Service Engine Groups**.
        """
        return pulumi.get(self, "max_virtual_services")

    @max_virtual_services.setter
    def max_virtual_services(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_virtual_services", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)

    @property
    @pulumi.getter(name="reservedVirtualServices")
    def reserved_virtual_services(self) -> Optional[pulumi.Input[str]]:
        """
        Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
        Service Engine Groups.**
        """
        return pulumi.get(self, "reserved_virtual_services")

    @reserved_virtual_services.setter
    def reserved_virtual_services(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "reserved_virtual_services", value)

    @property
    @pulumi.getter(name="serviceEngineGroupId")
    def service_engine_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        An ID of NSX-T Service Engine Group. Can be looked up using
        [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
        source.
        """
        return pulumi.get(self, "service_engine_group_id")

    @service_engine_group_id.setter
    def service_engine_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_engine_group_id", value)

    @property
    @pulumi.getter(name="serviceEngineGroupName")
    def service_engine_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        Service Engine Group Name which is attached to NSX-T Edge Gateway
        """
        return pulumi.get(self, "service_engine_group_name")

    @service_engine_group_name.setter
    def service_engine_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_engine_group_name", value)

    @property
    @pulumi.getter
    @_utilities.deprecated("""Edge Gateway will be looked up based on 'edge_gateway_id' field""")
    def vdc(self) -> Optional[pulumi.Input[str]]:
        """
        The name of VDC to use, optional if defined at provider level
        """
        return pulumi.get(self, "vdc")

    @vdc.setter
    def vdc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdc", value)


class NsxtAlbEdgegatewayServiceEngineGroup(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 max_virtual_services: Optional[pulumi.Input[int]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 reserved_virtual_services: Optional[pulumi.Input[str]] = None,
                 service_engine_group_id: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a NsxtAlbEdgegatewayServiceEngineGroup resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
               [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        :param pulumi.Input[int] max_virtual_services: Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
               Shared Service Engine Groups**.
        :param pulumi.Input[str] org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        :param pulumi.Input[str] reserved_virtual_services: Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
               Service Engine Groups.**
        :param pulumi.Input[str] service_engine_group_id: An ID of NSX-T Service Engine Group. Can be looked up using
               [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
               source.
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NsxtAlbEdgegatewayServiceEngineGroupArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a NsxtAlbEdgegatewayServiceEngineGroup resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param NsxtAlbEdgegatewayServiceEngineGroupArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NsxtAlbEdgegatewayServiceEngineGroupArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 max_virtual_services: Optional[pulumi.Input[int]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 reserved_virtual_services: Optional[pulumi.Input[str]] = None,
                 service_engine_group_id: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NsxtAlbEdgegatewayServiceEngineGroupArgs.__new__(NsxtAlbEdgegatewayServiceEngineGroupArgs)

            if edge_gateway_id is None and not opts.urn:
                raise TypeError("Missing required property 'edge_gateway_id'")
            __props__.__dict__["edge_gateway_id"] = edge_gateway_id
            __props__.__dict__["max_virtual_services"] = max_virtual_services
            __props__.__dict__["org"] = org
            __props__.__dict__["reserved_virtual_services"] = reserved_virtual_services
            if service_engine_group_id is None and not opts.urn:
                raise TypeError("Missing required property 'service_engine_group_id'")
            __props__.__dict__["service_engine_group_id"] = service_engine_group_id
            __props__.__dict__["vdc"] = vdc
            __props__.__dict__["deployed_virtual_services"] = None
            __props__.__dict__["service_engine_group_name"] = None
        super(NsxtAlbEdgegatewayServiceEngineGroup, __self__).__init__(
            'vcd:index/nsxtAlbEdgegatewayServiceEngineGroup:NsxtAlbEdgegatewayServiceEngineGroup',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            deployed_virtual_services: Optional[pulumi.Input[int]] = None,
            edge_gateway_id: Optional[pulumi.Input[str]] = None,
            max_virtual_services: Optional[pulumi.Input[int]] = None,
            org: Optional[pulumi.Input[str]] = None,
            reserved_virtual_services: Optional[pulumi.Input[str]] = None,
            service_engine_group_id: Optional[pulumi.Input[str]] = None,
            service_engine_group_name: Optional[pulumi.Input[str]] = None,
            vdc: Optional[pulumi.Input[str]] = None) -> 'NsxtAlbEdgegatewayServiceEngineGroup':
        """
        Get an existing NsxtAlbEdgegatewayServiceEngineGroup resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[int] deployed_virtual_services: Number of deployed Virtual Services on this Service Engine Group.
        :param pulumi.Input[str] edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
               [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        :param pulumi.Input[int] max_virtual_services: Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
               Shared Service Engine Groups**.
        :param pulumi.Input[str] org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        :param pulumi.Input[str] reserved_virtual_services: Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
               Service Engine Groups.**
        :param pulumi.Input[str] service_engine_group_id: An ID of NSX-T Service Engine Group. Can be looked up using
               [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
               source.
        :param pulumi.Input[str] service_engine_group_name: Service Engine Group Name which is attached to NSX-T Edge Gateway
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NsxtAlbEdgegatewayServiceEngineGroupState.__new__(_NsxtAlbEdgegatewayServiceEngineGroupState)

        __props__.__dict__["deployed_virtual_services"] = deployed_virtual_services
        __props__.__dict__["edge_gateway_id"] = edge_gateway_id
        __props__.__dict__["max_virtual_services"] = max_virtual_services
        __props__.__dict__["org"] = org
        __props__.__dict__["reserved_virtual_services"] = reserved_virtual_services
        __props__.__dict__["service_engine_group_id"] = service_engine_group_id
        __props__.__dict__["service_engine_group_name"] = service_engine_group_name
        __props__.__dict__["vdc"] = vdc
        return NsxtAlbEdgegatewayServiceEngineGroup(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="deployedVirtualServices")
    def deployed_virtual_services(self) -> pulumi.Output[int]:
        """
        Number of deployed Virtual Services on this Service Engine Group.
        """
        return pulumi.get(self, "deployed_virtual_services")

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> pulumi.Output[str]:
        """
        An ID of NSX-T Edge Gateway. Can be looked up using
        [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source.
        """
        return pulumi.get(self, "edge_gateway_id")

    @property
    @pulumi.getter(name="maxVirtualServices")
    def max_virtual_services(self) -> pulumi.Output[int]:
        """
        Maximum amount of Virtual Services to run on this Service Engine Group. **Only for
        Shared Service Engine Groups**.
        """
        return pulumi.get(self, "max_virtual_services")

    @property
    @pulumi.getter
    def org(self) -> pulumi.Output[Optional[str]]:
        """
        The name of organization to which the edge gateway belongs. Optional if defined at provider level.
        """
        return pulumi.get(self, "org")

    @property
    @pulumi.getter(name="reservedVirtualServices")
    def reserved_virtual_services(self) -> pulumi.Output[str]:
        """
        Number of reserved Virtual Services for this Edge Gateway. **Only for Shared
        Service Engine Groups.**
        """
        return pulumi.get(self, "reserved_virtual_services")

    @property
    @pulumi.getter(name="serviceEngineGroupId")
    def service_engine_group_id(self) -> pulumi.Output[str]:
        """
        An ID of NSX-T Service Engine Group. Can be looked up using
        [NsxtAlbServiceEngineGroup](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_alb_service_engine_group) data
        source.
        """
        return pulumi.get(self, "service_engine_group_id")

    @property
    @pulumi.getter(name="serviceEngineGroupName")
    def service_engine_group_name(self) -> pulumi.Output[str]:
        """
        Service Engine Group Name which is attached to NSX-T Edge Gateway
        """
        return pulumi.get(self, "service_engine_group_name")

    @property
    @pulumi.getter
    @_utilities.deprecated("""Edge Gateway will be looked up based on 'edge_gateway_id' field""")
    def vdc(self) -> pulumi.Output[str]:
        """
        The name of VDC to use, optional if defined at provider level
        """
        return pulumi.get(self, "vdc")

