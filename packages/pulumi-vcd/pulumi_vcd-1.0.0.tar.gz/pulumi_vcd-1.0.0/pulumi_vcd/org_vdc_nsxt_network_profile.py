# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['OrgVdcNsxtNetworkProfileArgs', 'OrgVdcNsxtNetworkProfile']

@pulumi.input_type
class OrgVdcNsxtNetworkProfileArgs:
    def __init__(__self__, *,
                 edge_cluster_id: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 vapp_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None,
                 vdc_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a OrgVdcNsxtNetworkProfile resource.
        :param pulumi.Input[str] edge_cluster_id: Edge Cluster ID to be used for this VDC
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
               different organizations
        :param pulumi.Input[str] vapp_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all vApp Networks in a VDC
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        :param pulumi.Input[str] vdc_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all VDC Networks in a VDC
        """
        if edge_cluster_id is not None:
            pulumi.set(__self__, "edge_cluster_id", edge_cluster_id)
        if org is not None:
            pulumi.set(__self__, "org", org)
        if vapp_networks_default_segment_profile_template_id is not None:
            pulumi.set(__self__, "vapp_networks_default_segment_profile_template_id", vapp_networks_default_segment_profile_template_id)
        if vdc is not None:
            pulumi.set(__self__, "vdc", vdc)
        if vdc_networks_default_segment_profile_template_id is not None:
            pulumi.set(__self__, "vdc_networks_default_segment_profile_template_id", vdc_networks_default_segment_profile_template_id)

    @property
    @pulumi.getter(name="edgeClusterId")
    def edge_cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        Edge Cluster ID to be used for this VDC
        """
        return pulumi.get(self, "edge_cluster_id")

    @edge_cluster_id.setter
    def edge_cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edge_cluster_id", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        different organizations
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)

    @property
    @pulumi.getter(name="vappNetworksDefaultSegmentProfileTemplateId")
    def vapp_networks_default_segment_profile_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        Default Segment Profile
        Template ID for all vApp Networks in a VDC
        """
        return pulumi.get(self, "vapp_networks_default_segment_profile_template_id")

    @vapp_networks_default_segment_profile_template_id.setter
    def vapp_networks_default_segment_profile_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vapp_networks_default_segment_profile_template_id", value)

    @property
    @pulumi.getter
    def vdc(self) -> Optional[pulumi.Input[str]]:
        """
        The name of VDC to use, optional if defined at provider level
        """
        return pulumi.get(self, "vdc")

    @vdc.setter
    def vdc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdc", value)

    @property
    @pulumi.getter(name="vdcNetworksDefaultSegmentProfileTemplateId")
    def vdc_networks_default_segment_profile_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        Default Segment Profile
        Template ID for all VDC Networks in a VDC
        """
        return pulumi.get(self, "vdc_networks_default_segment_profile_template_id")

    @vdc_networks_default_segment_profile_template_id.setter
    def vdc_networks_default_segment_profile_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdc_networks_default_segment_profile_template_id", value)


@pulumi.input_type
class _OrgVdcNsxtNetworkProfileState:
    def __init__(__self__, *,
                 edge_cluster_id: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 vapp_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None,
                 vdc_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering OrgVdcNsxtNetworkProfile resources.
        :param pulumi.Input[str] edge_cluster_id: Edge Cluster ID to be used for this VDC
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
               different organizations
        :param pulumi.Input[str] vapp_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all vApp Networks in a VDC
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        :param pulumi.Input[str] vdc_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all VDC Networks in a VDC
        """
        if edge_cluster_id is not None:
            pulumi.set(__self__, "edge_cluster_id", edge_cluster_id)
        if org is not None:
            pulumi.set(__self__, "org", org)
        if vapp_networks_default_segment_profile_template_id is not None:
            pulumi.set(__self__, "vapp_networks_default_segment_profile_template_id", vapp_networks_default_segment_profile_template_id)
        if vdc is not None:
            pulumi.set(__self__, "vdc", vdc)
        if vdc_networks_default_segment_profile_template_id is not None:
            pulumi.set(__self__, "vdc_networks_default_segment_profile_template_id", vdc_networks_default_segment_profile_template_id)

    @property
    @pulumi.getter(name="edgeClusterId")
    def edge_cluster_id(self) -> Optional[pulumi.Input[str]]:
        """
        Edge Cluster ID to be used for this VDC
        """
        return pulumi.get(self, "edge_cluster_id")

    @edge_cluster_id.setter
    def edge_cluster_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edge_cluster_id", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        different organizations
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)

    @property
    @pulumi.getter(name="vappNetworksDefaultSegmentProfileTemplateId")
    def vapp_networks_default_segment_profile_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        Default Segment Profile
        Template ID for all vApp Networks in a VDC
        """
        return pulumi.get(self, "vapp_networks_default_segment_profile_template_id")

    @vapp_networks_default_segment_profile_template_id.setter
    def vapp_networks_default_segment_profile_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vapp_networks_default_segment_profile_template_id", value)

    @property
    @pulumi.getter
    def vdc(self) -> Optional[pulumi.Input[str]]:
        """
        The name of VDC to use, optional if defined at provider level
        """
        return pulumi.get(self, "vdc")

    @vdc.setter
    def vdc(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdc", value)

    @property
    @pulumi.getter(name="vdcNetworksDefaultSegmentProfileTemplateId")
    def vdc_networks_default_segment_profile_template_id(self) -> Optional[pulumi.Input[str]]:
        """
        Default Segment Profile
        Template ID for all VDC Networks in a VDC
        """
        return pulumi.get(self, "vdc_networks_default_segment_profile_template_id")

    @vdc_networks_default_segment_profile_template_id.setter
    def vdc_networks_default_segment_profile_template_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "vdc_networks_default_segment_profile_template_id", value)


class OrgVdcNsxtNetworkProfile(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_cluster_id: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 vapp_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None,
                 vdc_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a OrgVdcNsxtNetworkProfile resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] edge_cluster_id: Edge Cluster ID to be used for this VDC
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
               different organizations
        :param pulumi.Input[str] vapp_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all vApp Networks in a VDC
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        :param pulumi.Input[str] vdc_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all VDC Networks in a VDC
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: Optional[OrgVdcNsxtNetworkProfileArgs] = None,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a OrgVdcNsxtNetworkProfile resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param OrgVdcNsxtNetworkProfileArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(OrgVdcNsxtNetworkProfileArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 edge_cluster_id: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 vapp_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
                 vdc: Optional[pulumi.Input[str]] = None,
                 vdc_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = OrgVdcNsxtNetworkProfileArgs.__new__(OrgVdcNsxtNetworkProfileArgs)

            __props__.__dict__["edge_cluster_id"] = edge_cluster_id
            __props__.__dict__["org"] = org
            __props__.__dict__["vapp_networks_default_segment_profile_template_id"] = vapp_networks_default_segment_profile_template_id
            __props__.__dict__["vdc"] = vdc
            __props__.__dict__["vdc_networks_default_segment_profile_template_id"] = vdc_networks_default_segment_profile_template_id
        super(OrgVdcNsxtNetworkProfile, __self__).__init__(
            'vcd:index/orgVdcNsxtNetworkProfile:OrgVdcNsxtNetworkProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            edge_cluster_id: Optional[pulumi.Input[str]] = None,
            org: Optional[pulumi.Input[str]] = None,
            vapp_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None,
            vdc: Optional[pulumi.Input[str]] = None,
            vdc_networks_default_segment_profile_template_id: Optional[pulumi.Input[str]] = None) -> 'OrgVdcNsxtNetworkProfile':
        """
        Get an existing OrgVdcNsxtNetworkProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] edge_cluster_id: Edge Cluster ID to be used for this VDC
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
               different organizations
        :param pulumi.Input[str] vapp_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all vApp Networks in a VDC
        :param pulumi.Input[str] vdc: The name of VDC to use, optional if defined at provider level
        :param pulumi.Input[str] vdc_networks_default_segment_profile_template_id: Default Segment Profile
               Template ID for all VDC Networks in a VDC
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _OrgVdcNsxtNetworkProfileState.__new__(_OrgVdcNsxtNetworkProfileState)

        __props__.__dict__["edge_cluster_id"] = edge_cluster_id
        __props__.__dict__["org"] = org
        __props__.__dict__["vapp_networks_default_segment_profile_template_id"] = vapp_networks_default_segment_profile_template_id
        __props__.__dict__["vdc"] = vdc
        __props__.__dict__["vdc_networks_default_segment_profile_template_id"] = vdc_networks_default_segment_profile_template_id
        return OrgVdcNsxtNetworkProfile(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="edgeClusterId")
    def edge_cluster_id(self) -> pulumi.Output[Optional[str]]:
        """
        Edge Cluster ID to be used for this VDC
        """
        return pulumi.get(self, "edge_cluster_id")

    @property
    @pulumi.getter
    def org(self) -> pulumi.Output[Optional[str]]:
        """
        The name of organization to use, optional if defined at provider level. Useful when connected as sysadmin working across
        different organizations
        """
        return pulumi.get(self, "org")

    @property
    @pulumi.getter(name="vappNetworksDefaultSegmentProfileTemplateId")
    def vapp_networks_default_segment_profile_template_id(self) -> pulumi.Output[Optional[str]]:
        """
        Default Segment Profile
        Template ID for all vApp Networks in a VDC
        """
        return pulumi.get(self, "vapp_networks_default_segment_profile_template_id")

    @property
    @pulumi.getter
    def vdc(self) -> pulumi.Output[Optional[str]]:
        """
        The name of VDC to use, optional if defined at provider level
        """
        return pulumi.get(self, "vdc")

    @property
    @pulumi.getter(name="vdcNetworksDefaultSegmentProfileTemplateId")
    def vdc_networks_default_segment_profile_template_id(self) -> pulumi.Output[Optional[str]]:
        """
        Default Segment Profile
        Template ID for all VDC Networks in a VDC
        """
        return pulumi.get(self, "vdc_networks_default_segment_profile_template_id")

