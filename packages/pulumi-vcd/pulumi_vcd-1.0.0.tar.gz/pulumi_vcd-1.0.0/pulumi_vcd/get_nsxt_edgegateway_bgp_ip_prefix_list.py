# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetNsxtEdgegatewayBgpIpPrefixListResult',
    'AwaitableGetNsxtEdgegatewayBgpIpPrefixListResult',
    'get_nsxt_edgegateway_bgp_ip_prefix_list',
    'get_nsxt_edgegateway_bgp_ip_prefix_list_output',
]

@pulumi.output_type
class GetNsxtEdgegatewayBgpIpPrefixListResult:
    """
    A collection of values returned by getNsxtEdgegatewayBgpIpPrefixList.
    """
    def __init__(__self__, description=None, edge_gateway_id=None, id=None, ip_prefixes=None, name=None, org=None):
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if edge_gateway_id and not isinstance(edge_gateway_id, str):
            raise TypeError("Expected argument 'edge_gateway_id' to be a str")
        pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip_prefixes and not isinstance(ip_prefixes, list):
            raise TypeError("Expected argument 'ip_prefixes' to be a list")
        pulumi.set(__self__, "ip_prefixes", ip_prefixes)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if org and not isinstance(org, str):
            raise TypeError("Expected argument 'org' to be a str")
        pulumi.set(__self__, "org", org)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> str:
        return pulumi.get(self, "edge_gateway_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipPrefixes")
    def ip_prefixes(self) -> Sequence['outputs.GetNsxtEdgegatewayBgpIpPrefixListIpPrefixResult']:
        return pulumi.get(self, "ip_prefixes")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def org(self) -> Optional[str]:
        return pulumi.get(self, "org")


class AwaitableGetNsxtEdgegatewayBgpIpPrefixListResult(GetNsxtEdgegatewayBgpIpPrefixListResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNsxtEdgegatewayBgpIpPrefixListResult(
            description=self.description,
            edge_gateway_id=self.edge_gateway_id,
            id=self.id,
            ip_prefixes=self.ip_prefixes,
            name=self.name,
            org=self.org)


def get_nsxt_edgegateway_bgp_ip_prefix_list(edge_gateway_id: Optional[str] = None,
                                            name: Optional[str] = None,
                                            org: Optional[str] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNsxtEdgegatewayBgpIpPrefixListResult:
    """
    Supported in provider *v3.7+* and VCD 10.2+ with NSX-T

    Provides a resource to manage NSX-T Edge Gateway BGP IP Prefix Lists. IP prefix lists can contain
    single or multiple IP addresses and can be used to assign BGP neighbors with access permissions
    for route advertisement.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    g1 = vcd.get_vdc_group(org="my-org",
        name="my-vdc-group")
    testing = vcd.get_nsxt_edgegateway(org="my-org",
        owner_id=g1.id,
        name="my-edge-gateway")
    testing_get_nsxt_edgegateway_bgp_ip_prefix_list = vcd.get_nsxt_edgegateway_bgp_ip_prefix_list(org="my-org",
        edge_gateway_id=testing.id,
        name="my-bgp-prefix-list")
    ```


    :param str edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
           [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
    :param str name: A name of existing BGP IP Prefix List in specified Edge Gateway
    :param str org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
    """
    __args__ = dict()
    __args__['edgeGatewayId'] = edge_gateway_id
    __args__['name'] = name
    __args__['org'] = org
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getNsxtEdgegatewayBgpIpPrefixList:getNsxtEdgegatewayBgpIpPrefixList', __args__, opts=opts, typ=GetNsxtEdgegatewayBgpIpPrefixListResult).value

    return AwaitableGetNsxtEdgegatewayBgpIpPrefixListResult(
        description=pulumi.get(__ret__, 'description'),
        edge_gateway_id=pulumi.get(__ret__, 'edge_gateway_id'),
        id=pulumi.get(__ret__, 'id'),
        ip_prefixes=pulumi.get(__ret__, 'ip_prefixes'),
        name=pulumi.get(__ret__, 'name'),
        org=pulumi.get(__ret__, 'org'))
def get_nsxt_edgegateway_bgp_ip_prefix_list_output(edge_gateway_id: Optional[pulumi.Input[str]] = None,
                                                   name: Optional[pulumi.Input[str]] = None,
                                                   org: Optional[pulumi.Input[Optional[str]]] = None,
                                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNsxtEdgegatewayBgpIpPrefixListResult]:
    """
    Supported in provider *v3.7+* and VCD 10.2+ with NSX-T

    Provides a resource to manage NSX-T Edge Gateway BGP IP Prefix Lists. IP prefix lists can contain
    single or multiple IP addresses and can be used to assign BGP neighbors with access permissions
    for route advertisement.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    g1 = vcd.get_vdc_group(org="my-org",
        name="my-vdc-group")
    testing = vcd.get_nsxt_edgegateway(org="my-org",
        owner_id=g1.id,
        name="my-edge-gateway")
    testing_get_nsxt_edgegateway_bgp_ip_prefix_list = vcd.get_nsxt_edgegateway_bgp_ip_prefix_list(org="my-org",
        edge_gateway_id=testing.id,
        name="my-bgp-prefix-list")
    ```


    :param str edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
           [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
    :param str name: A name of existing BGP IP Prefix List in specified Edge Gateway
    :param str org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
    """
    __args__ = dict()
    __args__['edgeGatewayId'] = edge_gateway_id
    __args__['name'] = name
    __args__['org'] = org
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getNsxtEdgegatewayBgpIpPrefixList:getNsxtEdgegatewayBgpIpPrefixList', __args__, opts=opts, typ=GetNsxtEdgegatewayBgpIpPrefixListResult)
    return __ret__.apply(lambda __response__: GetNsxtEdgegatewayBgpIpPrefixListResult(
        description=pulumi.get(__response__, 'description'),
        edge_gateway_id=pulumi.get(__response__, 'edge_gateway_id'),
        id=pulumi.get(__response__, 'id'),
        ip_prefixes=pulumi.get(__response__, 'ip_prefixes'),
        name=pulumi.get(__response__, 'name'),
        org=pulumi.get(__response__, 'org')))
