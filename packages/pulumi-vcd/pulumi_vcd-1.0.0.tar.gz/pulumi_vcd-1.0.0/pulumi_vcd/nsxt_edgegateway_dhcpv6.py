# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['NsxtEdgegatewayDhcpv6Args', 'NsxtEdgegatewayDhcpv6']

@pulumi.input_type
class NsxtEdgegatewayDhcpv6Args:
    def __init__(__self__, *,
                 edge_gateway_id: pulumi.Input[str],
                 mode: pulumi.Input[str],
                 dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 org: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a NsxtEdgegatewayDhcpv6 resource.
        :param pulumi.Input[str] edge_gateway_id: NSX-T Edge Gateway ID
        :param pulumi.Input[str] mode: One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
               Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
               will also disable DHCPv6.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] dns_servers: Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        :param pulumi.Input[Sequence[pulumi.Input[str]]] domain_names: Set of domain names (only applicable for `DHCPv6` mode)
        :param pulumi.Input[str] org: Org in which the NSX-T Edge Gateway is located
        """
        pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        pulumi.set(__self__, "mode", mode)
        if dns_servers is not None:
            pulumi.set(__self__, "dns_servers", dns_servers)
        if domain_names is not None:
            pulumi.set(__self__, "domain_names", domain_names)
        if org is not None:
            pulumi.set(__self__, "org", org)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> pulumi.Input[str]:
        """
        NSX-T Edge Gateway ID
        """
        return pulumi.get(self, "edge_gateway_id")

    @edge_gateway_id.setter
    def edge_gateway_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "edge_gateway_id", value)

    @property
    @pulumi.getter
    def mode(self) -> pulumi.Input[str]:
        """
        One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
        Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
        will also disable DHCPv6.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: pulumi.Input[str]):
        pulumi.set(self, "mode", value)

    @property
    @pulumi.getter(name="dnsServers")
    def dns_servers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        """
        return pulumi.get(self, "dns_servers")

    @dns_servers.setter
    def dns_servers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "dns_servers", value)

    @property
    @pulumi.getter(name="domainNames")
    def domain_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Set of domain names (only applicable for `DHCPv6` mode)
        """
        return pulumi.get(self, "domain_names")

    @domain_names.setter
    def domain_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "domain_names", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        Org in which the NSX-T Edge Gateway is located
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)


@pulumi.input_type
class _NsxtEdgegatewayDhcpv6State:
    def __init__(__self__, *,
                 dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 mode: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering NsxtEdgegatewayDhcpv6 resources.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] dns_servers: Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        :param pulumi.Input[Sequence[pulumi.Input[str]]] domain_names: Set of domain names (only applicable for `DHCPv6` mode)
        :param pulumi.Input[str] edge_gateway_id: NSX-T Edge Gateway ID
        :param pulumi.Input[str] mode: One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
               Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
               will also disable DHCPv6.
        :param pulumi.Input[str] org: Org in which the NSX-T Edge Gateway is located
        """
        if dns_servers is not None:
            pulumi.set(__self__, "dns_servers", dns_servers)
        if domain_names is not None:
            pulumi.set(__self__, "domain_names", domain_names)
        if edge_gateway_id is not None:
            pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        if mode is not None:
            pulumi.set(__self__, "mode", mode)
        if org is not None:
            pulumi.set(__self__, "org", org)

    @property
    @pulumi.getter(name="dnsServers")
    def dns_servers(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        """
        return pulumi.get(self, "dns_servers")

    @dns_servers.setter
    def dns_servers(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "dns_servers", value)

    @property
    @pulumi.getter(name="domainNames")
    def domain_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        Set of domain names (only applicable for `DHCPv6` mode)
        """
        return pulumi.get(self, "domain_names")

    @domain_names.setter
    def domain_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "domain_names", value)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> Optional[pulumi.Input[str]]:
        """
        NSX-T Edge Gateway ID
        """
        return pulumi.get(self, "edge_gateway_id")

    @edge_gateway_id.setter
    def edge_gateway_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edge_gateway_id", value)

    @property
    @pulumi.getter
    def mode(self) -> Optional[pulumi.Input[str]]:
        """
        One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
        Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
        will also disable DHCPv6.
        """
        return pulumi.get(self, "mode")

    @mode.setter
    def mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "mode", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        Org in which the NSX-T Edge Gateway is located
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)


class NsxtEdgegatewayDhcpv6(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 mode: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a NsxtEdgegatewayDhcpv6 resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] dns_servers: Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        :param pulumi.Input[Sequence[pulumi.Input[str]]] domain_names: Set of domain names (only applicable for `DHCPv6` mode)
        :param pulumi.Input[str] edge_gateway_id: NSX-T Edge Gateway ID
        :param pulumi.Input[str] mode: One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
               Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
               will also disable DHCPv6.
        :param pulumi.Input[str] org: Org in which the NSX-T Edge Gateway is located
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NsxtEdgegatewayDhcpv6Args,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a NsxtEdgegatewayDhcpv6 resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param NsxtEdgegatewayDhcpv6Args args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NsxtEdgegatewayDhcpv6Args, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 mode: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NsxtEdgegatewayDhcpv6Args.__new__(NsxtEdgegatewayDhcpv6Args)

            __props__.__dict__["dns_servers"] = dns_servers
            __props__.__dict__["domain_names"] = domain_names
            if edge_gateway_id is None and not opts.urn:
                raise TypeError("Missing required property 'edge_gateway_id'")
            __props__.__dict__["edge_gateway_id"] = edge_gateway_id
            if mode is None and not opts.urn:
                raise TypeError("Missing required property 'mode'")
            __props__.__dict__["mode"] = mode
            __props__.__dict__["org"] = org
        super(NsxtEdgegatewayDhcpv6, __self__).__init__(
            'vcd:index/nsxtEdgegatewayDhcpv6:NsxtEdgegatewayDhcpv6',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            dns_servers: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            domain_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            edge_gateway_id: Optional[pulumi.Input[str]] = None,
            mode: Optional[pulumi.Input[str]] = None,
            org: Optional[pulumi.Input[str]] = None) -> 'NsxtEdgegatewayDhcpv6':
        """
        Get an existing NsxtEdgegatewayDhcpv6 resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] dns_servers: Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        :param pulumi.Input[Sequence[pulumi.Input[str]]] domain_names: Set of domain names (only applicable for `DHCPv6` mode)
        :param pulumi.Input[str] edge_gateway_id: NSX-T Edge Gateway ID
        :param pulumi.Input[str] mode: One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
               Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
               will also disable DHCPv6.
        :param pulumi.Input[str] org: Org in which the NSX-T Edge Gateway is located
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NsxtEdgegatewayDhcpv6State.__new__(_NsxtEdgegatewayDhcpv6State)

        __props__.__dict__["dns_servers"] = dns_servers
        __props__.__dict__["domain_names"] = domain_names
        __props__.__dict__["edge_gateway_id"] = edge_gateway_id
        __props__.__dict__["mode"] = mode
        __props__.__dict__["org"] = org
        return NsxtEdgegatewayDhcpv6(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="dnsServers")
    def dns_servers(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Set of IPv6 DNS servers (only applicable for `DHCPv6` mode)
        """
        return pulumi.get(self, "dns_servers")

    @property
    @pulumi.getter(name="domainNames")
    def domain_names(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        Set of domain names (only applicable for `DHCPv6` mode)
        """
        return pulumi.get(self, "domain_names")

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> pulumi.Output[str]:
        """
        NSX-T Edge Gateway ID
        """
        return pulumi.get(self, "edge_gateway_id")

    @property
    @pulumi.getter
    def mode(self) -> pulumi.Output[str]:
        """
        One of `SLAAC` (Stateless Address Autoconfiguration), `DHCPv6` (Dynamic Host
        Configuration Protocol) or `DISABLED` (to disable the service). **Note:** destroying the resource
        will also disable DHCPv6.
        """
        return pulumi.get(self, "mode")

    @property
    @pulumi.getter
    def org(self) -> pulumi.Output[Optional[str]]:
        """
        Org in which the NSX-T Edge Gateway is located
        """
        return pulumi.get(self, "org")

