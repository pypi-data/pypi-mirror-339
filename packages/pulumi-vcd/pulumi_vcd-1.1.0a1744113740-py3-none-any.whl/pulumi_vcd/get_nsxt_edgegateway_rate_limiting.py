# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetNsxtEdgegatewayRateLimitingResult',
    'AwaitableGetNsxtEdgegatewayRateLimitingResult',
    'get_nsxt_edgegateway_rate_limiting',
    'get_nsxt_edgegateway_rate_limiting_output',
]

@pulumi.output_type
class GetNsxtEdgegatewayRateLimitingResult:
    """
    A collection of values returned by getNsxtEdgegatewayRateLimiting.
    """
    def __init__(__self__, edge_gateway_id=None, egress_profile_id=None, id=None, ingress_profile_id=None, org=None):
        if edge_gateway_id and not isinstance(edge_gateway_id, str):
            raise TypeError("Expected argument 'edge_gateway_id' to be a str")
        pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        if egress_profile_id and not isinstance(egress_profile_id, str):
            raise TypeError("Expected argument 'egress_profile_id' to be a str")
        pulumi.set(__self__, "egress_profile_id", egress_profile_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ingress_profile_id and not isinstance(ingress_profile_id, str):
            raise TypeError("Expected argument 'ingress_profile_id' to be a str")
        pulumi.set(__self__, "ingress_profile_id", ingress_profile_id)
        if org and not isinstance(org, str):
            raise TypeError("Expected argument 'org' to be a str")
        pulumi.set(__self__, "org", org)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> str:
        return pulumi.get(self, "edge_gateway_id")

    @property
    @pulumi.getter(name="egressProfileId")
    def egress_profile_id(self) -> str:
        return pulumi.get(self, "egress_profile_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ingressProfileId")
    def ingress_profile_id(self) -> str:
        return pulumi.get(self, "ingress_profile_id")

    @property
    @pulumi.getter
    def org(self) -> Optional[str]:
        return pulumi.get(self, "org")


class AwaitableGetNsxtEdgegatewayRateLimitingResult(GetNsxtEdgegatewayRateLimitingResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNsxtEdgegatewayRateLimitingResult(
            edge_gateway_id=self.edge_gateway_id,
            egress_profile_id=self.egress_profile_id,
            id=self.id,
            ingress_profile_id=self.ingress_profile_id,
            org=self.org)


def get_nsxt_edgegateway_rate_limiting(edge_gateway_id: Optional[str] = None,
                                       org: Optional[str] = None,
                                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNsxtEdgegatewayRateLimitingResult:
    """
    Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.

    Provides a data source to read NSX-T Edge Gateway Rate Limiting (QoS) configuration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    v1 = vcd.get_org_vdc(org="datacloud",
        name="nsxt-vdc-datacloud")
    in_vdc = vcd.get_nsxt_edgegateway(org="datacloud",
        owner_id=v1.id,
        name="nsxt-gw-datacloud")
    in_vdc_get_nsxt_edgegateway_rate_limiting = vcd.get_nsxt_edgegateway_rate_limiting(org="datacloud",
        edge_gateway_id=in_vdc.id)
    ```


    :param str edge_gateway_id: NSX-T Edge Gateway ID
    :param str org: Org in which the NSX-T Edge Gateway is located
    """
    __args__ = dict()
    __args__['edgeGatewayId'] = edge_gateway_id
    __args__['org'] = org
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getNsxtEdgegatewayRateLimiting:getNsxtEdgegatewayRateLimiting', __args__, opts=opts, typ=GetNsxtEdgegatewayRateLimitingResult).value

    return AwaitableGetNsxtEdgegatewayRateLimitingResult(
        edge_gateway_id=pulumi.get(__ret__, 'edge_gateway_id'),
        egress_profile_id=pulumi.get(__ret__, 'egress_profile_id'),
        id=pulumi.get(__ret__, 'id'),
        ingress_profile_id=pulumi.get(__ret__, 'ingress_profile_id'),
        org=pulumi.get(__ret__, 'org'))
def get_nsxt_edgegateway_rate_limiting_output(edge_gateway_id: Optional[pulumi.Input[str]] = None,
                                              org: Optional[pulumi.Input[Optional[str]]] = None,
                                              opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNsxtEdgegatewayRateLimitingResult]:
    """
    Supported in provider *v3.9+* and VCD 10.3.2+ with NSX-T.

    Provides a data source to read NSX-T Edge Gateway Rate Limiting (QoS) configuration.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    v1 = vcd.get_org_vdc(org="datacloud",
        name="nsxt-vdc-datacloud")
    in_vdc = vcd.get_nsxt_edgegateway(org="datacloud",
        owner_id=v1.id,
        name="nsxt-gw-datacloud")
    in_vdc_get_nsxt_edgegateway_rate_limiting = vcd.get_nsxt_edgegateway_rate_limiting(org="datacloud",
        edge_gateway_id=in_vdc.id)
    ```


    :param str edge_gateway_id: NSX-T Edge Gateway ID
    :param str org: Org in which the NSX-T Edge Gateway is located
    """
    __args__ = dict()
    __args__['edgeGatewayId'] = edge_gateway_id
    __args__['org'] = org
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getNsxtEdgegatewayRateLimiting:getNsxtEdgegatewayRateLimiting', __args__, opts=opts, typ=GetNsxtEdgegatewayRateLimitingResult)
    return __ret__.apply(lambda __response__: GetNsxtEdgegatewayRateLimitingResult(
        edge_gateway_id=pulumi.get(__response__, 'edge_gateway_id'),
        egress_profile_id=pulumi.get(__response__, 'egress_profile_id'),
        id=pulumi.get(__response__, 'id'),
        ingress_profile_id=pulumi.get(__response__, 'ingress_profile_id'),
        org=pulumi.get(__response__, 'org')))
