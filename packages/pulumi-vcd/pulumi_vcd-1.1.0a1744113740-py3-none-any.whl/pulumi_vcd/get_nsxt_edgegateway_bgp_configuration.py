# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetNsxtEdgegatewayBgpConfigurationResult',
    'AwaitableGetNsxtEdgegatewayBgpConfigurationResult',
    'get_nsxt_edgegateway_bgp_configuration',
    'get_nsxt_edgegateway_bgp_configuration_output',
]

@pulumi.output_type
class GetNsxtEdgegatewayBgpConfigurationResult:
    """
    A collection of values returned by getNsxtEdgegatewayBgpConfiguration.
    """
    def __init__(__self__, ecmp_enabled=None, edge_gateway_id=None, enabled=None, graceful_restart_mode=None, graceful_restart_timer=None, id=None, local_as_number=None, org=None, stale_route_timer=None):
        if ecmp_enabled and not isinstance(ecmp_enabled, bool):
            raise TypeError("Expected argument 'ecmp_enabled' to be a bool")
        pulumi.set(__self__, "ecmp_enabled", ecmp_enabled)
        if edge_gateway_id and not isinstance(edge_gateway_id, str):
            raise TypeError("Expected argument 'edge_gateway_id' to be a str")
        pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        if enabled and not isinstance(enabled, bool):
            raise TypeError("Expected argument 'enabled' to be a bool")
        pulumi.set(__self__, "enabled", enabled)
        if graceful_restart_mode and not isinstance(graceful_restart_mode, str):
            raise TypeError("Expected argument 'graceful_restart_mode' to be a str")
        pulumi.set(__self__, "graceful_restart_mode", graceful_restart_mode)
        if graceful_restart_timer and not isinstance(graceful_restart_timer, int):
            raise TypeError("Expected argument 'graceful_restart_timer' to be a int")
        pulumi.set(__self__, "graceful_restart_timer", graceful_restart_timer)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if local_as_number and not isinstance(local_as_number, str):
            raise TypeError("Expected argument 'local_as_number' to be a str")
        pulumi.set(__self__, "local_as_number", local_as_number)
        if org and not isinstance(org, str):
            raise TypeError("Expected argument 'org' to be a str")
        pulumi.set(__self__, "org", org)
        if stale_route_timer and not isinstance(stale_route_timer, int):
            raise TypeError("Expected argument 'stale_route_timer' to be a int")
        pulumi.set(__self__, "stale_route_timer", stale_route_timer)

    @property
    @pulumi.getter(name="ecmpEnabled")
    def ecmp_enabled(self) -> bool:
        return pulumi.get(self, "ecmp_enabled")

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> str:
        return pulumi.get(self, "edge_gateway_id")

    @property
    @pulumi.getter
    def enabled(self) -> bool:
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="gracefulRestartMode")
    def graceful_restart_mode(self) -> str:
        return pulumi.get(self, "graceful_restart_mode")

    @property
    @pulumi.getter(name="gracefulRestartTimer")
    def graceful_restart_timer(self) -> int:
        return pulumi.get(self, "graceful_restart_timer")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="localAsNumber")
    def local_as_number(self) -> str:
        return pulumi.get(self, "local_as_number")

    @property
    @pulumi.getter
    def org(self) -> Optional[str]:
        return pulumi.get(self, "org")

    @property
    @pulumi.getter(name="staleRouteTimer")
    def stale_route_timer(self) -> int:
        return pulumi.get(self, "stale_route_timer")


class AwaitableGetNsxtEdgegatewayBgpConfigurationResult(GetNsxtEdgegatewayBgpConfigurationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNsxtEdgegatewayBgpConfigurationResult(
            ecmp_enabled=self.ecmp_enabled,
            edge_gateway_id=self.edge_gateway_id,
            enabled=self.enabled,
            graceful_restart_mode=self.graceful_restart_mode,
            graceful_restart_timer=self.graceful_restart_timer,
            id=self.id,
            local_as_number=self.local_as_number,
            org=self.org,
            stale_route_timer=self.stale_route_timer)


def get_nsxt_edgegateway_bgp_configuration(edge_gateway_id: Optional[str] = None,
                                           org: Optional[str] = None,
                                           opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNsxtEdgegatewayBgpConfigurationResult:
    """
    Provides a data source to read BGP configuration on NSX-T Edge Gateway that has a dedicated Tier-0
    Gateway or VRF. BGP makes core routing decisions by using a table of IP networks, or prefixes, which
    designate multiple routes between autonomous systems (AS).

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    nsxt_vdc = vcd.get_org_vdc(org="my-org",
        name="my-vdc")
    existing = vcd.get_nsxt_edgegateway(org="my-org",
        owner_id=nsxt_vdc.id,
        name="main")
    testing = vcd.get_nsxt_edgegateway_bgp_configuration(org="my-org",
        edge_gateway_id=existing.id)
    ```


    :param str edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
           [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
    :param str org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
    """
    __args__ = dict()
    __args__['edgeGatewayId'] = edge_gateway_id
    __args__['org'] = org
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vcd:index/getNsxtEdgegatewayBgpConfiguration:getNsxtEdgegatewayBgpConfiguration', __args__, opts=opts, typ=GetNsxtEdgegatewayBgpConfigurationResult).value

    return AwaitableGetNsxtEdgegatewayBgpConfigurationResult(
        ecmp_enabled=pulumi.get(__ret__, 'ecmp_enabled'),
        edge_gateway_id=pulumi.get(__ret__, 'edge_gateway_id'),
        enabled=pulumi.get(__ret__, 'enabled'),
        graceful_restart_mode=pulumi.get(__ret__, 'graceful_restart_mode'),
        graceful_restart_timer=pulumi.get(__ret__, 'graceful_restart_timer'),
        id=pulumi.get(__ret__, 'id'),
        local_as_number=pulumi.get(__ret__, 'local_as_number'),
        org=pulumi.get(__ret__, 'org'),
        stale_route_timer=pulumi.get(__ret__, 'stale_route_timer'))
def get_nsxt_edgegateway_bgp_configuration_output(edge_gateway_id: Optional[pulumi.Input[str]] = None,
                                                  org: Optional[pulumi.Input[Optional[str]]] = None,
                                                  opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetNsxtEdgegatewayBgpConfigurationResult]:
    """
    Provides a data source to read BGP configuration on NSX-T Edge Gateway that has a dedicated Tier-0
    Gateway or VRF. BGP makes core routing decisions by using a table of IP networks, or prefixes, which
    designate multiple routes between autonomous systems (AS).

    ## Example Usage

    ```python
    import pulumi
    import pulumi_vcd as vcd

    nsxt_vdc = vcd.get_org_vdc(org="my-org",
        name="my-vdc")
    existing = vcd.get_nsxt_edgegateway(org="my-org",
        owner_id=nsxt_vdc.id,
        name="main")
    testing = vcd.get_nsxt_edgegateway_bgp_configuration(org="my-org",
        edge_gateway_id=existing.id)
    ```


    :param str edge_gateway_id: An ID of NSX-T Edge Gateway. Can be looked up using
           [NsxtEdgegateway](https://www.terraform.io/providers/vmware/vcd/latest/docs/data-sources/nsxt_edgegateway) data source
    :param str org: The name of organization to which the edge gateway belongs. Optional if defined at provider level.
    """
    __args__ = dict()
    __args__['edgeGatewayId'] = edge_gateway_id
    __args__['org'] = org
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('vcd:index/getNsxtEdgegatewayBgpConfiguration:getNsxtEdgegatewayBgpConfiguration', __args__, opts=opts, typ=GetNsxtEdgegatewayBgpConfigurationResult)
    return __ret__.apply(lambda __response__: GetNsxtEdgegatewayBgpConfigurationResult(
        ecmp_enabled=pulumi.get(__response__, 'ecmp_enabled'),
        edge_gateway_id=pulumi.get(__response__, 'edge_gateway_id'),
        enabled=pulumi.get(__response__, 'enabled'),
        graceful_restart_mode=pulumi.get(__response__, 'graceful_restart_mode'),
        graceful_restart_timer=pulumi.get(__response__, 'graceful_restart_timer'),
        id=pulumi.get(__response__, 'id'),
        local_as_number=pulumi.get(__response__, 'local_as_number'),
        org=pulumi.get(__response__, 'org'),
        stale_route_timer=pulumi.get(__response__, 'stale_route_timer')))
