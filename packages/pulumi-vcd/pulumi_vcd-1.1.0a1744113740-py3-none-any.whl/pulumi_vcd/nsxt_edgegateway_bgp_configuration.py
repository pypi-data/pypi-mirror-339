# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = ['NsxtEdgegatewayBgpConfigurationArgs', 'NsxtEdgegatewayBgpConfiguration']

@pulumi.input_type
class NsxtEdgegatewayBgpConfigurationArgs:
    def __init__(__self__, *,
                 edge_gateway_id: pulumi.Input[str],
                 enabled: pulumi.Input[bool],
                 ecmp_enabled: Optional[pulumi.Input[bool]] = None,
                 graceful_restart_mode: Optional[pulumi.Input[str]] = None,
                 graceful_restart_timer: Optional[pulumi.Input[int]] = None,
                 local_as_number: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 stale_route_timer: Optional[pulumi.Input[int]] = None):
        """
        The set of arguments for constructing a NsxtEdgegatewayBgpConfiguration resource.
        :param pulumi.Input[str] edge_gateway_id: The ID of the Edge Gateway (NSX-T only). Can be looked up using
               `NsxtEdgegateway` datasource
        :param pulumi.Input[bool] enabled: Defines if BGP service is enabled or not
        :param pulumi.Input[bool] ecmp_enabled: A flag indicating whether ECMP is enabled or not
        :param pulumi.Input[str] graceful_restart_mode: Describes Graceful Restart configuration Modes for BGP
               configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
               * `DISABLE` - Both graceful restart and helper modes are disabled
               * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
               state during BGP restart
               * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        :param pulumi.Input[int] graceful_restart_timer: Maximum time taken (in seconds) for a BGP session to be
               established after a restart. If the session is not re-established within this timer, the receiving
               speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        :param pulumi.Input[str] local_as_number: BGP autonomous systems (AS) number to advertise to BGP peers. BGP
               AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
               ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful
               when connected as sysadmin working across different organisations
        :param pulumi.Input[int] stale_route_timer: Maximum time (in seconds) before stale routes are removed when
               BGP restarts. **Read only** for VRF backed Edge Gateways
               
               More information about settings can be found in VMware Cloud Director [BGP Configuration
               documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        pulumi.set(__self__, "enabled", enabled)
        if ecmp_enabled is not None:
            pulumi.set(__self__, "ecmp_enabled", ecmp_enabled)
        if graceful_restart_mode is not None:
            pulumi.set(__self__, "graceful_restart_mode", graceful_restart_mode)
        if graceful_restart_timer is not None:
            pulumi.set(__self__, "graceful_restart_timer", graceful_restart_timer)
        if local_as_number is not None:
            pulumi.set(__self__, "local_as_number", local_as_number)
        if org is not None:
            pulumi.set(__self__, "org", org)
        if stale_route_timer is not None:
            pulumi.set(__self__, "stale_route_timer", stale_route_timer)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> pulumi.Input[str]:
        """
        The ID of the Edge Gateway (NSX-T only). Can be looked up using
        `NsxtEdgegateway` datasource
        """
        return pulumi.get(self, "edge_gateway_id")

    @edge_gateway_id.setter
    def edge_gateway_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "edge_gateway_id", value)

    @property
    @pulumi.getter
    def enabled(self) -> pulumi.Input[bool]:
        """
        Defines if BGP service is enabled or not
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: pulumi.Input[bool]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter(name="ecmpEnabled")
    def ecmp_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        A flag indicating whether ECMP is enabled or not
        """
        return pulumi.get(self, "ecmp_enabled")

    @ecmp_enabled.setter
    def ecmp_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ecmp_enabled", value)

    @property
    @pulumi.getter(name="gracefulRestartMode")
    def graceful_restart_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Describes Graceful Restart configuration Modes for BGP
        configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
        * `DISABLE` - Both graceful restart and helper modes are disabled
        * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
        state during BGP restart
        * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        """
        return pulumi.get(self, "graceful_restart_mode")

    @graceful_restart_mode.setter
    def graceful_restart_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "graceful_restart_mode", value)

    @property
    @pulumi.getter(name="gracefulRestartTimer")
    def graceful_restart_timer(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum time taken (in seconds) for a BGP session to be
        established after a restart. If the session is not re-established within this timer, the receiving
        speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        """
        return pulumi.get(self, "graceful_restart_timer")

    @graceful_restart_timer.setter
    def graceful_restart_timer(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "graceful_restart_timer", value)

    @property
    @pulumi.getter(name="localAsNumber")
    def local_as_number(self) -> Optional[pulumi.Input[str]]:
        """
        BGP autonomous systems (AS) number to advertise to BGP peers. BGP
        AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
        ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        """
        return pulumi.get(self, "local_as_number")

    @local_as_number.setter
    def local_as_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "local_as_number", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        The name of organization to use, optional if defined at provider level. Useful
        when connected as sysadmin working across different organisations
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)

    @property
    @pulumi.getter(name="staleRouteTimer")
    def stale_route_timer(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum time (in seconds) before stale routes are removed when
        BGP restarts. **Read only** for VRF backed Edge Gateways

        More information about settings can be found in VMware Cloud Director [BGP Configuration
        documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        return pulumi.get(self, "stale_route_timer")

    @stale_route_timer.setter
    def stale_route_timer(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "stale_route_timer", value)


@pulumi.input_type
class _NsxtEdgegatewayBgpConfigurationState:
    def __init__(__self__, *,
                 ecmp_enabled: Optional[pulumi.Input[bool]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 graceful_restart_mode: Optional[pulumi.Input[str]] = None,
                 graceful_restart_timer: Optional[pulumi.Input[int]] = None,
                 local_as_number: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 stale_route_timer: Optional[pulumi.Input[int]] = None):
        """
        Input properties used for looking up and filtering NsxtEdgegatewayBgpConfiguration resources.
        :param pulumi.Input[bool] ecmp_enabled: A flag indicating whether ECMP is enabled or not
        :param pulumi.Input[str] edge_gateway_id: The ID of the Edge Gateway (NSX-T only). Can be looked up using
               `NsxtEdgegateway` datasource
        :param pulumi.Input[bool] enabled: Defines if BGP service is enabled or not
        :param pulumi.Input[str] graceful_restart_mode: Describes Graceful Restart configuration Modes for BGP
               configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
               * `DISABLE` - Both graceful restart and helper modes are disabled
               * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
               state during BGP restart
               * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        :param pulumi.Input[int] graceful_restart_timer: Maximum time taken (in seconds) for a BGP session to be
               established after a restart. If the session is not re-established within this timer, the receiving
               speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        :param pulumi.Input[str] local_as_number: BGP autonomous systems (AS) number to advertise to BGP peers. BGP
               AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
               ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful
               when connected as sysadmin working across different organisations
        :param pulumi.Input[int] stale_route_timer: Maximum time (in seconds) before stale routes are removed when
               BGP restarts. **Read only** for VRF backed Edge Gateways
               
               More information about settings can be found in VMware Cloud Director [BGP Configuration
               documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        if ecmp_enabled is not None:
            pulumi.set(__self__, "ecmp_enabled", ecmp_enabled)
        if edge_gateway_id is not None:
            pulumi.set(__self__, "edge_gateway_id", edge_gateway_id)
        if enabled is not None:
            pulumi.set(__self__, "enabled", enabled)
        if graceful_restart_mode is not None:
            pulumi.set(__self__, "graceful_restart_mode", graceful_restart_mode)
        if graceful_restart_timer is not None:
            pulumi.set(__self__, "graceful_restart_timer", graceful_restart_timer)
        if local_as_number is not None:
            pulumi.set(__self__, "local_as_number", local_as_number)
        if org is not None:
            pulumi.set(__self__, "org", org)
        if stale_route_timer is not None:
            pulumi.set(__self__, "stale_route_timer", stale_route_timer)

    @property
    @pulumi.getter(name="ecmpEnabled")
    def ecmp_enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        A flag indicating whether ECMP is enabled or not
        """
        return pulumi.get(self, "ecmp_enabled")

    @ecmp_enabled.setter
    def ecmp_enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "ecmp_enabled", value)

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the Edge Gateway (NSX-T only). Can be looked up using
        `NsxtEdgegateway` datasource
        """
        return pulumi.get(self, "edge_gateway_id")

    @edge_gateway_id.setter
    def edge_gateway_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "edge_gateway_id", value)

    @property
    @pulumi.getter
    def enabled(self) -> Optional[pulumi.Input[bool]]:
        """
        Defines if BGP service is enabled or not
        """
        return pulumi.get(self, "enabled")

    @enabled.setter
    def enabled(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "enabled", value)

    @property
    @pulumi.getter(name="gracefulRestartMode")
    def graceful_restart_mode(self) -> Optional[pulumi.Input[str]]:
        """
        Describes Graceful Restart configuration Modes for BGP
        configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
        * `DISABLE` - Both graceful restart and helper modes are disabled
        * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
        state during BGP restart
        * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        """
        return pulumi.get(self, "graceful_restart_mode")

    @graceful_restart_mode.setter
    def graceful_restart_mode(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "graceful_restart_mode", value)

    @property
    @pulumi.getter(name="gracefulRestartTimer")
    def graceful_restart_timer(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum time taken (in seconds) for a BGP session to be
        established after a restart. If the session is not re-established within this timer, the receiving
        speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        """
        return pulumi.get(self, "graceful_restart_timer")

    @graceful_restart_timer.setter
    def graceful_restart_timer(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "graceful_restart_timer", value)

    @property
    @pulumi.getter(name="localAsNumber")
    def local_as_number(self) -> Optional[pulumi.Input[str]]:
        """
        BGP autonomous systems (AS) number to advertise to BGP peers. BGP
        AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
        ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        """
        return pulumi.get(self, "local_as_number")

    @local_as_number.setter
    def local_as_number(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "local_as_number", value)

    @property
    @pulumi.getter
    def org(self) -> Optional[pulumi.Input[str]]:
        """
        The name of organization to use, optional if defined at provider level. Useful
        when connected as sysadmin working across different organisations
        """
        return pulumi.get(self, "org")

    @org.setter
    def org(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org", value)

    @property
    @pulumi.getter(name="staleRouteTimer")
    def stale_route_timer(self) -> Optional[pulumi.Input[int]]:
        """
        Maximum time (in seconds) before stale routes are removed when
        BGP restarts. **Read only** for VRF backed Edge Gateways

        More information about settings can be found in VMware Cloud Director [BGP Configuration
        documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        return pulumi.get(self, "stale_route_timer")

    @stale_route_timer.setter
    def stale_route_timer(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "stale_route_timer", value)


class NsxtEdgegatewayBgpConfiguration(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ecmp_enabled: Optional[pulumi.Input[bool]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 graceful_restart_mode: Optional[pulumi.Input[str]] = None,
                 graceful_restart_timer: Optional[pulumi.Input[int]] = None,
                 local_as_number: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 stale_route_timer: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        """
        Create a NsxtEdgegatewayBgpConfiguration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] ecmp_enabled: A flag indicating whether ECMP is enabled or not
        :param pulumi.Input[str] edge_gateway_id: The ID of the Edge Gateway (NSX-T only). Can be looked up using
               `NsxtEdgegateway` datasource
        :param pulumi.Input[bool] enabled: Defines if BGP service is enabled or not
        :param pulumi.Input[str] graceful_restart_mode: Describes Graceful Restart configuration Modes for BGP
               configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
               * `DISABLE` - Both graceful restart and helper modes are disabled
               * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
               state during BGP restart
               * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        :param pulumi.Input[int] graceful_restart_timer: Maximum time taken (in seconds) for a BGP session to be
               established after a restart. If the session is not re-established within this timer, the receiving
               speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        :param pulumi.Input[str] local_as_number: BGP autonomous systems (AS) number to advertise to BGP peers. BGP
               AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
               ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful
               when connected as sysadmin working across different organisations
        :param pulumi.Input[int] stale_route_timer: Maximum time (in seconds) before stale routes are removed when
               BGP restarts. **Read only** for VRF backed Edge Gateways
               
               More information about settings can be found in VMware Cloud Director [BGP Configuration
               documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: NsxtEdgegatewayBgpConfigurationArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a NsxtEdgegatewayBgpConfiguration resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param NsxtEdgegatewayBgpConfigurationArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(NsxtEdgegatewayBgpConfigurationArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ecmp_enabled: Optional[pulumi.Input[bool]] = None,
                 edge_gateway_id: Optional[pulumi.Input[str]] = None,
                 enabled: Optional[pulumi.Input[bool]] = None,
                 graceful_restart_mode: Optional[pulumi.Input[str]] = None,
                 graceful_restart_timer: Optional[pulumi.Input[int]] = None,
                 local_as_number: Optional[pulumi.Input[str]] = None,
                 org: Optional[pulumi.Input[str]] = None,
                 stale_route_timer: Optional[pulumi.Input[int]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = NsxtEdgegatewayBgpConfigurationArgs.__new__(NsxtEdgegatewayBgpConfigurationArgs)

            __props__.__dict__["ecmp_enabled"] = ecmp_enabled
            if edge_gateway_id is None and not opts.urn:
                raise TypeError("Missing required property 'edge_gateway_id'")
            __props__.__dict__["edge_gateway_id"] = edge_gateway_id
            if enabled is None and not opts.urn:
                raise TypeError("Missing required property 'enabled'")
            __props__.__dict__["enabled"] = enabled
            __props__.__dict__["graceful_restart_mode"] = graceful_restart_mode
            __props__.__dict__["graceful_restart_timer"] = graceful_restart_timer
            __props__.__dict__["local_as_number"] = local_as_number
            __props__.__dict__["org"] = org
            __props__.__dict__["stale_route_timer"] = stale_route_timer
        super(NsxtEdgegatewayBgpConfiguration, __self__).__init__(
            'vcd:index/nsxtEdgegatewayBgpConfiguration:NsxtEdgegatewayBgpConfiguration',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ecmp_enabled: Optional[pulumi.Input[bool]] = None,
            edge_gateway_id: Optional[pulumi.Input[str]] = None,
            enabled: Optional[pulumi.Input[bool]] = None,
            graceful_restart_mode: Optional[pulumi.Input[str]] = None,
            graceful_restart_timer: Optional[pulumi.Input[int]] = None,
            local_as_number: Optional[pulumi.Input[str]] = None,
            org: Optional[pulumi.Input[str]] = None,
            stale_route_timer: Optional[pulumi.Input[int]] = None) -> 'NsxtEdgegatewayBgpConfiguration':
        """
        Get an existing NsxtEdgegatewayBgpConfiguration resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] ecmp_enabled: A flag indicating whether ECMP is enabled or not
        :param pulumi.Input[str] edge_gateway_id: The ID of the Edge Gateway (NSX-T only). Can be looked up using
               `NsxtEdgegateway` datasource
        :param pulumi.Input[bool] enabled: Defines if BGP service is enabled or not
        :param pulumi.Input[str] graceful_restart_mode: Describes Graceful Restart configuration Modes for BGP
               configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
               * `DISABLE` - Both graceful restart and helper modes are disabled
               * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
               state during BGP restart
               * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        :param pulumi.Input[int] graceful_restart_timer: Maximum time taken (in seconds) for a BGP session to be
               established after a restart. If the session is not re-established within this timer, the receiving
               speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        :param pulumi.Input[str] local_as_number: BGP autonomous systems (AS) number to advertise to BGP peers. BGP
               AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
               ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        :param pulumi.Input[str] org: The name of organization to use, optional if defined at provider level. Useful
               when connected as sysadmin working across different organisations
        :param pulumi.Input[int] stale_route_timer: Maximum time (in seconds) before stale routes are removed when
               BGP restarts. **Read only** for VRF backed Edge Gateways
               
               More information about settings can be found in VMware Cloud Director [BGP Configuration
               documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _NsxtEdgegatewayBgpConfigurationState.__new__(_NsxtEdgegatewayBgpConfigurationState)

        __props__.__dict__["ecmp_enabled"] = ecmp_enabled
        __props__.__dict__["edge_gateway_id"] = edge_gateway_id
        __props__.__dict__["enabled"] = enabled
        __props__.__dict__["graceful_restart_mode"] = graceful_restart_mode
        __props__.__dict__["graceful_restart_timer"] = graceful_restart_timer
        __props__.__dict__["local_as_number"] = local_as_number
        __props__.__dict__["org"] = org
        __props__.__dict__["stale_route_timer"] = stale_route_timer
        return NsxtEdgegatewayBgpConfiguration(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ecmpEnabled")
    def ecmp_enabled(self) -> pulumi.Output[Optional[bool]]:
        """
        A flag indicating whether ECMP is enabled or not
        """
        return pulumi.get(self, "ecmp_enabled")

    @property
    @pulumi.getter(name="edgeGatewayId")
    def edge_gateway_id(self) -> pulumi.Output[str]:
        """
        The ID of the Edge Gateway (NSX-T only). Can be looked up using
        `NsxtEdgegateway` datasource
        """
        return pulumi.get(self, "edge_gateway_id")

    @property
    @pulumi.getter
    def enabled(self) -> pulumi.Output[bool]:
        """
        Defines if BGP service is enabled or not
        """
        return pulumi.get(self, "enabled")

    @property
    @pulumi.getter(name="gracefulRestartMode")
    def graceful_restart_mode(self) -> pulumi.Output[str]:
        """
        Describes Graceful Restart configuration Modes for BGP
        configuration on an Edge Gateway. **Read only** for VRF backed Edge Gateways. Possible options are:
        * `DISABLE` - Both graceful restart and helper modes are disabled
        * `HELPER_ONLY` - The ability for a BGP speaker to indicate its ability to preserve forwarding
        state during BGP restart
        * `GRACEFUL_AND_HELPER` - The ability of a BGP speaker to advertise its restart to its peers
        """
        return pulumi.get(self, "graceful_restart_mode")

    @property
    @pulumi.getter(name="gracefulRestartTimer")
    def graceful_restart_timer(self) -> pulumi.Output[int]:
        """
        Maximum time taken (in seconds) for a BGP session to be
        established after a restart. If the session is not re-established within this timer, the receiving
        speaker will delete all the stale routes from that peer. **Read only** for VRF backed Edge Gateways.
        """
        return pulumi.get(self, "graceful_restart_timer")

    @property
    @pulumi.getter(name="localAsNumber")
    def local_as_number(self) -> pulumi.Output[str]:
        """
        BGP autonomous systems (AS) number to advertise to BGP peers. BGP
        AS number can be specified in either ASPLAIN or ASDOT formats, like ASPLAIN format : '65546',
        ASDOT format : '1.10'. **Read only** for VRF backed Edge Gateways
        """
        return pulumi.get(self, "local_as_number")

    @property
    @pulumi.getter
    def org(self) -> pulumi.Output[Optional[str]]:
        """
        The name of organization to use, optional if defined at provider level. Useful
        when connected as sysadmin working across different organisations
        """
        return pulumi.get(self, "org")

    @property
    @pulumi.getter(name="staleRouteTimer")
    def stale_route_timer(self) -> pulumi.Output[int]:
        """
        Maximum time (in seconds) before stale routes are removed when
        BGP restarts. **Read only** for VRF backed Edge Gateways

        More information about settings can be found in VMware Cloud Director [BGP Configuration
        documentation](https://docs.vmware.com/en/VMware-Cloud-Director/10.3/VMware-Cloud-Director-Tenant-Portal-Guide/GUID-EB585DDC-9F1C-4971-A4AD-44C239E6E822.html)
        """
        return pulumi.get(self, "stale_route_timer")

