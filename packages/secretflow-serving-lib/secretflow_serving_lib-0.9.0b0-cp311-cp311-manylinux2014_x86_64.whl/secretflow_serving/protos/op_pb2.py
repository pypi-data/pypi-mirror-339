# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: secretflow_serving/protos/op.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from secretflow_serving.protos import attr_pb2 as secretflow__serving_dot_protos_dot_attr__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\"secretflow_serving/protos/op.proto\x12\x15secretflow.serving.op\x1a$secretflow_serving/protos/attr.proto\"/\n\x05IoDef\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n\x04\x64\x65sc\x18\x02 \x01(\tR\x04\x64\x65sc\"\x8f\x01\n\x05OpTag\x12\x1e\n\nreturnable\x18\x01 \x01(\x08R\nreturnable\x12\x1c\n\tmergeable\x18\x02 \x01(\x08R\tmergeable\x12\x1f\n\x0bsession_run\x18\x03 \x01(\x08R\nsessionRun\x12\'\n\x0fvariable_inputs\x18\x05 \x01(\x08R\x0evariableInputs\"\x9b\x02\n\x05OpDef\x12\x12\n\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n\x04\x64\x65sc\x18\x02 \x01(\tR\x04\x64\x65sc\x12\x18\n\x07version\x18\x03 \x01(\tR\x07version\x12.\n\x03tag\x18\x04 \x01(\x0b\x32\x1c.secretflow.serving.op.OpTagR\x03tag\x12\x34\n\x06inputs\x18\x06 \x03(\x0b\x32\x1c.secretflow.serving.op.IoDefR\x06inputs\x12\x34\n\x06output\x18\x07 \x01(\x0b\x32\x1c.secretflow.serving.op.IoDefR\x06output\x12\x34\n\x05\x61ttrs\x18\x08 \x03(\x0b\x32\x1e.secretflow.serving.op.AttrDefR\x05\x61ttrsb\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'secretflow_serving.protos.op_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _IODEF._serialized_start=99
  _IODEF._serialized_end=146
  _OPTAG._serialized_start=149
  _OPTAG._serialized_end=292
  _OPDEF._serialized_start=295
  _OPDEF._serialized_end=578
# @@protoc_insertion_point(module_scope)
