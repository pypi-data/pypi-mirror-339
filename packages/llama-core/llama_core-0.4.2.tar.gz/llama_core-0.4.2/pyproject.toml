[build-system]
requires = ["scikit-build-core[pyproject]>=0.9.2"]
build-backend = "scikit_build_core.build"

[project]
name = "llama_core"
dynamic = ["version"]
description = "gguf connector core built on llama.cpp"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "calcuis", email = "info@calcu.io" },
]
dependencies = [
    "typing-extensions>=4.5.0",
    "diskcache>=5.6.1",
    "jinja2>=3.1.3",
    "numpy>=1.26.4",
    "pocketsphinx>=5.0.3",
    "speechrecognition>=3.10.3",
]
requires-python = ">=3.8"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]


[project.optional-dependencies]
server = [
    "uvicorn>=0.22.0",
    "fastapi>=0.100.0",
    "pydantic-settings>=2.0.1",
    "sse-starlette>=1.6.1",
    "starlette-context>=0.3.6,<0.4",
    "PyYAML>=5.1",
]
test = [
    "pytest>=7.4.0",
    "httpx>=0.24.1",
    "scipy>=1.10",
    "fastapi>=0.100.0",
    "sse-starlette>=1.6.1",
    "starlette-context>=0.3.6,<0.4",
    "pydantic-settings>=2.0.1",
    "huggingface-hub>=0.23.0"
]
dev = [
    "black>=23.3.0",
    "twine>=4.0.2",
    "mkdocs>=1.4.3",
    "mkdocstrings[python]>=0.22.0",
    "mkdocs-material>=9.1.18",
    "pytest>=7.4.0",
    "httpx>=0.24.1",
]
all = [
    "llama_core[server,test,dev]",
]

[tool.scikit-build]
wheel.packages = ["llama_core"]
cmake.verbose = true
cmake.minimum-version = "3.21"
minimum-version = "0.5.1"
sdist.include = [".git", "vendor/llama.cpp/*"]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
input = "llama_core/__init__.py"

[project.urls]
Homepage = "https://github.com/calcuis/llama-core"
Issues = "https://github.com/calcuis/llama-core/issues"

[tool.pytest.ini_options]
testpaths = "tests"
