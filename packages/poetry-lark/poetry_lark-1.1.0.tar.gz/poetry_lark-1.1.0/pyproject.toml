[tool.poetry]
name = "poetry-lark"
version = "1.1.0"
description = "Plugin which integrates Lark into the Poetry build system."
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Plugins",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Text Processing",
    "Topic :: Utilities"
]
authors = [
    "Mikhalev Oleg <mhalairt@gmail.com>"
]
license = "BSD-2-Clause"
repository = "https://github.com/mhalairt/poetry-lark"
readme = "README.md"
packages = [
    {include = "poetry_lark", from = "src"}
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
poetry = "^2.1.2"
lark = "^1.2.2"
regex = {version = "*", optional = true}
interegular = {version = ">=0.3.1,<0.4.0", optional = true}

[tool.poetry.extras]
regex = ["regex"]
interegular = ["interegular"]

[tool.poetry.plugins."poetry.application.plugin"]
lark-standalone = "poetry_lark.plugin:LarkStandalonePlugin"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
flake8 = "^7.2.0"
flake8-pyproject = "^1.2.3"
flake8-bandit = "^4.1.1"
flake8-builtins = "^2.5.0"
flake8-commas = "^4.0.0"
flake8-comprehensions = "^3.16.0"
flake8-docstrings = "^1.7.0"
flake8-isort = "^6.1.2"
flake8-quotes = "^3.4.0"
flake8-type-checking = "^3.0.0"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.3.5"
pytest-cov = "^6.1.1"
pytest-mock = "^3.14.0"
pytest-xdist = "^3.6.1"

[tool.flake8]
filename = "src/**/*.py"
max-line-length = 110
max-complexity = 12
multiline-quotes = "single"
docstring-quotes = "double"
inline-quotes = "single"

[tool.bandit]
exclude_dirs = ["tests"]

[tool.isort]
src_paths = ["src"]
line_length = 110
atomic = true

[tool.pytest.ini_options]
addopts = "--cov src --cov-fail-under=80 --quiet --strict-config --strict-markers"
pythonpath = ["src"]

[tool.coverage.run]
command_line = "-m pytest"

[tool.coverage.report]
include = ["src/**/*.py"]
show_missing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
