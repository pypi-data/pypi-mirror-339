# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: mercurial-operations.proto for package 'hgitaly'

require 'grpc'
require 'mercurial-operations_pb'

module Hgitaly
  module MercurialOperationsService
    class Service

      include ::GRPC::GenericService

      self.marshal_class_method = :encode
      self.unmarshal_class_method = :decode
      self.service_name = 'hgitaly.MercurialOperationsService'

      # Provide all information for a possible merge
      #
      # Will be used in mergeability checks and last-minute checks if needed.
      rpc :MergeAnalysis, ::Hgitaly::MergeAnalysisRequest, ::Hgitaly::MergeAnalysisResponse
      # Publish a changeset
      #
      # As any publication in Mercurial, it also publishes all ancestors that
      # were not already public.
      rpc :PublishChangeset, ::Hgitaly::PublishChangesetRequest, ::Hgitaly::PublishChangesetResponse
      # Censor a changeset
      #
      # Equivalent of `hg censor`
      rpc :Censor, ::Hgitaly::CensorRequest, ::Hgitaly::CensorResponse
      # MergeBranch plays the same role as OperationService.UsermergeBranch with the following differences:
      #
      # - It is not a 2-phase operation, hence not streaming
      # - The Request message has a slighly different set of options
      rpc :MergeBranch, ::Hgitaly::MergeBranchRequest, ::Hgitaly::MergeBranchResponse
    end

    Stub = Service.rpc_stub_class
  end
end
