name: LlamaVector CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - '**' # Trigger on any change within the package directory
      - '.github/workflows/llamavector_ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**' # Trigger on any change within the package directory
      - '.github/workflows/llamavector_ci.yml'
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read # Default permission

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # Keep OS/Python matrix aligned with project requirements
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        # Consider excluding GPU tests or OS combinations if dependencies are tricky
        # exclude:
        #   - os: windows-latest
        #     python-version: "3.8"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    # Optional: Cache dependencies for faster builds
    # - name: Cache pip dependencies
    #   uses: actions/cache@v3
    #   with:
    #     path: ~/.cache/pip
    #     key: ${{ runner.os }}-pip-${{ hashFiles('llamavector-pkg/pyproject.toml') }}
    #     restore-keys: |
    #       ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./llamavector-pkg
      run: |
        python -m pip install --upgrade pip
        # Install with dev dependencies
        pip install -e ".[dev]"

    - name: Lint with Ruff
      working-directory: ./llamavector-pkg
      run: ruff check .

    - name: Format with Black
      working-directory: ./llamavector-pkg
      run: black --check .

    - name: Sort imports with isort
      working-directory: ./llamavector-pkg
      run: isort --check-only .

    - name: Type check with MyPy
      working-directory: ./llamavector-pkg
      run: mypy src/

    - name: Run tests with Pytest
      working-directory: ./llamavector-pkg
      run: pytest --cov=src --cov-report=xml

    # Optional: Upload coverage to Codecov
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # Use GitHub App integration if possible, token as fallback
        slug: ${{ github.repository }} # Or specify manually if needed
        fail_ci_if_error: false
        verbose: true 