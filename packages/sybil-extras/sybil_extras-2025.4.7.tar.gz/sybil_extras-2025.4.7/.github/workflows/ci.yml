---

name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # * is a special character in YAML so you have to quote this string
    # Run at 1:00 every day
    - cron: 0 1 * * *

jobs:
  build:

    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12', '3.13']
        platform: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    env:
      # We run tests against "." and not the tests directory as we test the README
      # and documentation.
      # We use "-s" to allow for the pty tests to run.
      TEST_COMMAND: uv run --extra=dev pytest -s -vvv .

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: '**/pyproject.toml'

      - name: Lint
        run: |
          uv run --extra=dev pre-commit run --all-files --hook-stage pre-commit --verbose
          uv run --extra=dev pre-commit run --all-files --hook-stage pre-push --verbose
          uv run --extra=dev pre-commit run --all-files --hook-stage manual --verbose
        env:
          UV_PYTHON: ${{ matrix.python-version }}

      - name: Run tests Linux
        if: matrix.platform == 'ubuntu-latest'
        run: |
          ${{ env.TEST_COMMAND }} --cov=src/ --cov=tests --cov-report term-missing --cov-report=xml --cov-fail-under 100
        env:
          UV_PYTHON: ${{ matrix.python-version }}

      # Wasteful to run this on Linux, but worth it to see if any issues are platform specific,
      # and to ensure the tests run without a tty.
      - name: Run tests all platforms (no tty)
        run: |
          ${{ env.TEST_COMMAND }}
        env:
          UV_PYTHON: ${{ matrix.python-version }}

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - uses: pre-commit-ci/lite-action@v1.1.0
        if: always()

  completion-ci:
    needs: build
    runs-on: ubuntu-latest
    if: always()  # Run even if one matrix job fails
    steps:
      - name: Check matrix job status
        run: |-
          if ! ${{ needs.build.result == 'success' }}; then
            echo "One or more matrix jobs failed"
            exit 1
          fi
