# Generated by Django 5.1.5 on 2025-01-16 15:23

import uuid
from django.utils import timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.SAAS_TENANT_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('tenant', models.OneToOneField(on_delete=models.CASCADE, primary_key=True, related_name='+', serialize=False, to=settings.SAAS_TENANT_MODEL)),
                ('allow_origin', models.CharField(default='*', max_length=255)),
                ('allow_webmention', models.BooleanField(default=False)),
                ('allow_anonymous', models.BooleanField(default=True)),
                ('auto_close', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'webcomment_setting',
            },
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=480)),
                ('url', models.URLField(max_length=255)),
                ('status', models.SmallIntegerField(choices=[(-1, 'disabled'), (0, 'closed'), (1, 'open')], default=1)),
                ('created_at', models.DateTimeField(default=timezone.now)),
                ('tenant', models.ForeignKey(on_delete=models.CASCADE, related_name='+', to=settings.SAAS_TENANT_MODEL)),
            ],
            options={
                'db_table': 'webcomment_thread',
                'ordering': ['-created_at'],
                'unique_together': {('tenant', 'url')},
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('type', models.SmallIntegerField(choices=[(1, 'comment'), (2, 'webmention')], default=1)),
                ('status', models.SmallIntegerField(choices=[(0, 'hidden'), (1, 'pending'), (2, 'approved')], default=1)),
                ('reply_path', models.TextField(blank=True, editable=False, null=True)),
                ('reply_count', models.IntegerField(default=0)),
                ('anonymous_user', models.JSONField(blank=True, null=True)),
                ('receive_email', models.BooleanField(default=False)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(default=timezone.now)),
                ('login_user', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('reply_root', models.ForeignKey(blank=True, null=True, on_delete=models.SET_NULL, related_name='+', to='webcomment.comment')),
                ('tenant', models.ForeignKey(on_delete=models.CASCADE, related_name='+', to=settings.SAAS_TENANT_MODEL)),
                ('thread', models.ForeignKey(on_delete=models.CASCADE, to='webcomment.thread')),
            ],
            options={
                'db_table': 'webcomment_comment',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ThreadTarget',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('webmention_endpoint', models.URLField(max_length=255)),
                ('target', models.URLField(max_length=255)),
                ('status_code', models.SmallIntegerField(blank=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=timezone.now)),
                ('tenant', models.ForeignKey(on_delete=models.CASCADE, related_name='+', to=settings.SAAS_TENANT_MODEL)),
                ('thread', models.ForeignKey(on_delete=models.CASCADE, related_name='targets', to='webcomment.thread')),
            ],
            options={
                'db_table': 'webcomment_thread_target',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Reaction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('source_sha1', models.CharField(db_index=True, max_length=42)),
                ('type', models.SmallIntegerField(choices=[(1, 'like'), (2, 'repost'), (3, 'bookmark')])),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=timezone.now)),
                ('tenant', models.ForeignKey(on_delete=models.CASCADE, related_name='+', to=settings.SAAS_TENANT_MODEL)),
                ('thread', models.ForeignKey(on_delete=models.CASCADE, to='webcomment.thread')),
            ],
            options={
                'db_table': 'webcomment_reaction',
                'ordering': ['-id'],
                'unique_together': {('thread', 'source_sha1')},
            },
        ),
        migrations.CreateModel(
            name='Webmention',
            fields=[
                ('comment', models.OneToOneField(on_delete=models.CASCADE, primary_key=True, serialize=False, to='webcomment.comment')),
                ('source_url', models.URLField(max_length=255)),
                ('source_sha1', models.CharField(blank=True, db_index=True, max_length=42, null=True)),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('thread', models.ForeignKey(on_delete=models.CASCADE, to='webcomment.thread')),
            ],
            options={
                'db_table': 'webcomment_webmention',
                'unique_together': {('thread', 'source_sha1')},
            },
        ),
    ]
