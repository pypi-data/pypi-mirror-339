Metadata-Version: 2.4
Name: python-simhash
Version: 0.1.0
Classifier: Programming Language :: Rust
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Summary: SimHash algorithm implementation in Rust for Python
Author-email: Tim Pogue <tim@emergentmethods.ai>
License: MIT
Requires-Python: >=3.10, <4.0
Description-Content-Type: text/markdown; charset=UTF-8; variant=GFM
Project-URL: repository, https://gitlab.com/emergentmethods/simhash

# Python Simhash

![PyPI - Python Version](https://img.shields.io/pypi/pyversions/python-simhash?style=flat-square)
![PyPI - Version](https://img.shields.io/pypi/v/python-simhash?style=flat-square)


## Features

- **Written in Rust**: The underlying library and bindings are written in Rust, which makes it fast and memory-efficient.
- **Safe**: The Rust implementation is memory-safe and thread-safe.

## Quick Start

### Installation

```bash
pip install python-simhash
```

### Basic Usage

```python
from simhash import simhash, hamming_distance


fingerprint1 = simhash("hello world this is a message saying some things".split(), hasher="xxh3")
fingerprint2 = simhash("hello world this is a message saying some other things".split(), hasher="xxh3")

print(hamming_distance(fingerprint1, fingerprint2))
```

## License
This project is licensed under MIT License.

## Support & Feedback
If you encounter any issues or have feedback, please open an issue. We'd love to hear from you!

Made with ❤️ by Emergent Methods





