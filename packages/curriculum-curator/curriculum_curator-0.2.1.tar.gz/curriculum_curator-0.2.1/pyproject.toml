[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "curriculum-curator"
version = "0.2.1"
authors = [
    {name = "Curriculum Curator Team", email = "example@example.com"},
]
description = "An educational content workflow orchestration tool for LLM integration"
readme = "README.md"
license = "MIT"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Education",
    "Topic :: Education",
    "Topic :: Text Processing",
]

dependencies = [
    "python-frontmatter>=1.0.0",
    "pyyaml>=6.0",
    "structlog>=23.1.0",
    "litellm>=1.0.0",
    "backoff>=2.2.1",
    "scikit-learn>=1.2.0",
    "typer>=0.9.0",
    "rich>=13.3.0",
    "markdown>=3.4.0",
    "beautifulsoup4>=4.12.0",
    "pydantic>=2.5.0",
    "sentence-transformers>=2.2.2",  # For similarity validator
    "textstat>=0.7.3",               # For readability validator
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.0.262",
    "mypy>=1.8.0",
    "pre-commit>=3.6.0",
    "isort>=5.13.2",
    "mkdocs>=1.4.3",
    "mkdocs-material>=9.1.8",
    "twine>=6.0.1",
    "build>=0.10.0",
]

web = [
    "fasthtml>=0.2.0",
]

[project.urls]
"Homepage" = "https://github.com/teaching-repositories/curriculum-curator"
"Bug Tracker" = "https://github.com/teaching-repositories/curriculum-curator/issues"
"Documentation" = "https://github.com/teaching-repositories/curriculum-curator/blob/main/docs"

[project.scripts]
curator = "curriculum_curator.cli:main"

[tool.setuptools]
packages = [
    "curriculum_curator",
    "curriculum_curator.config",
    "curriculum_curator.content",
    "curriculum_curator.core",
    "curriculum_curator.llm",
    "curriculum_curator.output",
    "curriculum_curator.persistence",
    "curriculum_curator.prompt",
    "curriculum_curator.remediation",
    "curriculum_curator.remediation.remediators",
    "curriculum_curator.remediation.remediators.autofix",
    "curriculum_curator.remediation.remediators.language",
    "curriculum_curator.remediation.remediators.rewrite",
    "curriculum_curator.remediation.remediators.workflow",
    "curriculum_curator.tools",
    "curriculum_curator.utils",
    "curriculum_curator.validation",
    "curriculum_curator.validation.validators",
    "curriculum_curator.validation.validators.accuracy",
    "curriculum_curator.validation.validators.alignment",
    "curriculum_curator.validation.validators.language",
    "curriculum_curator.validation.validators.quality",
    "curriculum_curator.validation.validators.safety",
    "curriculum_curator.validation.validators.style",
    "curriculum_curator.workflow"
]
include-package-data = true

[tool.ruff]
line-length = 100
target-version = "py39"
src = ["curriculum_curator"]
include = ["*.py", "*.pyi", "**/pyproject.toml", "*.ipynb"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "N",   # pep8-naming
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "A",   # flake8-builtins
    "C4",  # flake8-comprehensions
    "T10", # flake8-debugger
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
]
ignore = [
    "D100",  # Missing docstring in public module
    "D104",  # Missing docstring in public package
    "D203",  # 1 blank line required before class docstring
    "D213",  # Multi-line docstring summary should start at the second line
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
docstring-code-format = true

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
