"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .document import Document, DocumentTypedDict
from .httpmetadata import HTTPMetadata, HTTPMetadataTypedDict
from .inputsource import InputSource, InputSourceTypedDict
from abbyy_document_ai.types import BaseModel
import pydantic
from typing import Dict, List, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class BeginDangerousGoodsDeclarationFieldExtractionProcessDangerousGoodsDeclarationRequestTypedDict(
    TypedDict
):
    r"""Request to process a document using the dangerous-goods-declaration model"""

    input_source: InputSourceTypedDict
    r"""The source of the document(s) to be processed"""


class BeginDangerousGoodsDeclarationFieldExtractionProcessDangerousGoodsDeclarationRequest(
    BaseModel
):
    r"""Request to process a document using the dangerous-goods-declaration model"""

    input_source: Annotated[InputSource, pydantic.Field(alias="inputSource")]
    r"""The source of the document(s) to be processed"""


class BeginDangerousGoodsDeclarationFieldExtractionResponseTypedDict(TypedDict):
    http_meta: HTTPMetadataTypedDict
    headers: Dict[str, List[str]]
    documents: NotRequired[List[DocumentTypedDict]]
    r"""A list containing the document(s) sent for processing"""


class BeginDangerousGoodsDeclarationFieldExtractionResponse(BaseModel):
    http_meta: Annotated[Optional[HTTPMetadata], pydantic.Field(exclude=True)] = None

    headers: Dict[str, List[str]]

    documents: Optional[List[Document]] = None
    r"""A list containing the document(s) sent for processing"""
