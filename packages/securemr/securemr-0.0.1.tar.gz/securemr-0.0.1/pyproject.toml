[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "securemr"
dynamic = ["version"]
description = "Python bindings for SecureMR."
readme = "README.md"
license = {file = "LICENSE"}
requires-python = "==3.10.*"
dependencies = [
  "numpy<=2.0",
  "opencv-python",
  "pure-python-adb",
]

[project.optional-dependencies]
test = [
  "coverage",
  "pytest",
  "pytest-xdist",
  "pytest-pythonpath",
  "pytest-cov",
  "pytest-html",
  "pytest-repeat",
  "pytest-watch",
  "mypy==0.910",
  "toml",
]
dev = [
  "pre-commit>=2.13.0",
  "pre-commit-hooks>=4.0.1",
  "isort==5.6.4",
  "flake8-pyproject",
  "flake8-bugbear==21.4.3",
  "flake8-comprehensions==3.6.0",
  "autoflake==1.4",
  "black==22.3.0",
  "pydocstyle==6.1.1",
  "pep8-naming==0.12.1",
  "mypy",
  "build",
  "twine"
]

[[project.authors]]
name = "bingwen.ai"
email = "bingwen.ai@bytedance.com"

[project.urls]
repository = "https://github.com/Pico-Developer/pySecureMR"

[tool.setuptools]
zip-safe = false
include-package-data = true
packages = {find = {}}

[tool.setuptools.dynamic]
version = {attr = "securemr.__version__"}

[tool.pytest.ini_options]
norecursedirs = [
    ".git",
    "dist",
    "build",
]
python_files = ["test_*.py"]
addopts = [
    "--strict",
    "--doctest-modules",
    "--color=yes",
    "--durations=10",
]
junit_duration_report = "call"

[tool.coverage.report]
exclude_lines = [
    "pragma: no-cover",
    "warnings",
    "pass",
    "rank_zero_warn",
    "raise NotImplementedError",
]

[tool.isort]
line_length = 119
multi_line_output = 5
known_third_party = ["PIL", "addict", "easydict", "fsspec", "lmdb", "msgpack", "numpy", "cv2", "pycocotools", "pytest", "scipy", "six", "termcolor", "torch", "torchvision", "yaml"]
known_locals = ["utilities"]
no_lines_before = ["STDLIB", "LOCALFOLDER"]
sections = ["FUTURE", "STDLIB", "FIRSTPARTY", "THIRDPARTY", "LOCALS", "LOCALFOLDER"]
skip_glob = [
    "docs/*",
    "3rdparty/*",
    "tmp_*",
]

[tool.yapf]
based_on_style = "pep8"
spaces_around_power_operator = true
dedent_closing_brackets = true
blank_line_before_nested_class_or_def = true

[tool.flake8]
max-line-length = 119
exclude = ["docs/*", "tests/*" , "examples/*"]
per-file-ignores = """
    __init__.py: F401,F403
"""
select = ["E", "W", "F"]
verbose = 2
format = "pylint"
extend-ignore = ["E731"]

[tool.easy_install]
index_url = "https://pypi.hobot.cc/simple"

[tool.pydocstyle]
convention = "pep257"

[tool.mypy]
files = ["securemr"]
disallow_untyped_defs = "True"
ignore_missing_imports = "True"
show_error_codes = "True"
warn_redundant_casts = "True"
warn_unused_configs = "True"
warn_unused_ignores = "True"
allow_redefinition = "True"
follow_imports = "silent"
follow_imports_for_stubs = "True"
exclude = []

# TODO: Fix typing for these modules
[[tool.mypy.overrides]]
module = [
]
ignore_errors = "True"


[[tool.mypy.overrides]]
module = [
]
ignore_errors = "False"
