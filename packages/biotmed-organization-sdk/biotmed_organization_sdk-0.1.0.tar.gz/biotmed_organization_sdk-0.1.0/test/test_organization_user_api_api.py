# coding: utf-8

"""
    BioT Organization Service

    APIs document (version: 9.2.19)

    The version of the OpenAPI document: 9.2.19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from biotmed_organization_sdk.api.organization_user_api_api import OrganizationUserAPIApi


class TestOrganizationUserAPIApi(unittest.TestCase):
    """OrganizationUserAPIApi unit test stubs"""

    def setUp(self) -> None:
        self.api = OrganizationUserAPIApi()

    def tearDown(self) -> None:
        pass

    def test_change_organization_user_enabled_state(self) -> None:
        """Test case for change_organization_user_enabled_state

        Enable or Disable Organization User
        """
        pass

    def test_create_organization_user(self) -> None:
        """Test case for create_organization_user

        Create a new Organization User by Template id
        """
        pass

    def test_create_organization_user_by_template_name(self) -> None:
        """Test case for create_organization_user_by_template_name

        Create a new Organization User by Template name
        """
        pass

    def test_delete_organization_user(self) -> None:
        """Test case for delete_organization_user

        Delete Organization User
        """
        pass

    def test_get_organization_user(self) -> None:
        """Test case for get_organization_user

        Get Organization User by ID
        """
        pass

    def test_get_organization_user_self(self) -> None:
        """Test case for get_organization_user_self

        Get self Organization User by ID from access token
        """
        pass

    def test_search_organization_users(self) -> None:
        """Test case for search_organization_users

        Search Organization User entities by filter
        """
        pass

    def test_update_organization_user(self) -> None:
        """Test case for update_organization_user

        Update Organization User
        """
        pass


if __name__ == '__main__':
    unittest.main()
