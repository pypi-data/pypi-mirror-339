# coding: utf-8

"""
    BioT Organization Service

    APIs document (version: 9.2.19)

    The version of the OpenAPI document: 9.2.19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from biotmed_organization_sdk.models.patient_response import PatientResponse

class TestPatientResponse(unittest.TestCase):
    """PatientResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatientResponse:
        """Test PatientResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatientResponse`
        """
        model = PatientResponse()
        if include_optional:
            return PatientResponse(
                name = biotmed_organization_sdk.models.name.Name(
                    first_name = 'John', 
                    last_name = 'Smith', ),
                description = 'Lorem Ipsum',
                email = 'john.smith@biot-med.com',
                phone = '+12345678901',
                locale = 'en-us',
                gender = 'FEMALE',
                date_of_birth = '2007-12-20',
                address = biotmed_organization_sdk.models.address.Address(
                    country_code = 'US', 
                    state = 'Massachusetts', 
                    city = 'Boston', 
                    zip_code = '02101', 
                    address1 = '11', 
                    address2 = 'Entry B, Apartment 1', ),
                mfa = biotmed_organization_sdk.models.mfa_dto.MfaDto(
                    enabled = True, 
                    expiration_in_minutes = 1, ),
                credential_type = 'PASSWORD',
                additional_phone = '+12345678901',
                national_id = '123456789',
                id = '3fa85f64-5717-4562-b3fc-2c963f66afa6',
                owner_organization = biotmed_organization_sdk.models.basic_referenced_entity_data_uuidid.BasicReferencedEntityDataUUIDId(
                    id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', 
                    template_id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', 
                    parent_entity_id = '', 
                    template_name = '', 
                    name = '', ),
                caregiver = biotmed_organization_sdk.models.basic_referenced_entity_data_uuidid.BasicReferencedEntityDataUUIDId(
                    id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', 
                    template_id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', 
                    parent_entity_id = '', 
                    template_name = '', 
                    name = '', ),
                creation_time = '2007-12-20T10:15:30Z',
                last_modified_time = '2007-12-20T10:15:30Z',
                invitation_accepted = True,
                enabled = 'ENABLED|DISABLED',
                username = 'john@biotmail.com or john123',
                registration_source = 'INVITATION',
                can_login = True,
                nickname = '',
                caption = ''
            )
        else:
            return PatientResponse(
                name = biotmed_organization_sdk.models.name.Name(
                    first_name = 'John', 
                    last_name = 'Smith', ),
                email = 'john.smith@biot-med.com',
                id = '3fa85f64-5717-4562-b3fc-2c963f66afa6',
                creation_time = '2007-12-20T10:15:30Z',
                last_modified_time = '2007-12-20T10:15:30Z',
                invitation_accepted = True,
        )
        """

    def testPatientResponse(self):
        """Test PatientResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
