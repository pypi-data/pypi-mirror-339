# coding: utf-8

"""
    BioT Organization Service

    APIs document (version: 9.2.19)

    The version of the OpenAPI document: 9.2.19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from biotmed_organization_sdk.models.create_registration_code_by_template_name_request import CreateRegistrationCodeByTemplateNameRequest

class TestCreateRegistrationCodeByTemplateNameRequest(unittest.TestCase):
    """CreateRegistrationCodeByTemplateNameRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateRegistrationCodeByTemplateNameRequest:
        """Test CreateRegistrationCodeByTemplateNameRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateRegistrationCodeByTemplateNameRequest`
        """
        model = CreateRegistrationCodeByTemplateNameRequest()
        if include_optional:
            return CreateRegistrationCodeByTemplateNameRequest(
                code = 'RegistrationCode123',
                owner_organization = biotmed_organization_sdk.models.reference_attribute_uuidid_request.ReferenceAttributeUUIDIdRequest(
                    id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', )
            )
        else:
            return CreateRegistrationCodeByTemplateNameRequest(
                code = 'RegistrationCode123',
                owner_organization = biotmed_organization_sdk.models.reference_attribute_uuidid_request.ReferenceAttributeUUIDIdRequest(
                    id = '3fa85f64-5717-4562-b3fc-2c963f66afa6', ),
        )
        """

    def testCreateRegistrationCodeByTemplateNameRequest(self):
        """Test CreateRegistrationCodeByTemplateNameRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
