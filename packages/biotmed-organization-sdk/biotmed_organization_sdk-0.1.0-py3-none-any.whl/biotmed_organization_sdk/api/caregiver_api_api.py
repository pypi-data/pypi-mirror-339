# coding: utf-8

"""
    BioT Organization Service

    APIs document (version: 9.2.19)

    The version of the OpenAPI document: 9.2.19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from biotmed_organization_sdk.models.caregiver_response import CaregiverResponse
from biotmed_organization_sdk.models.create_caregiver_by_template_name_request import CreateCaregiverByTemplateNameRequest
from biotmed_organization_sdk.models.create_caregiver_request import CreateCaregiverRequest
from biotmed_organization_sdk.models.search_request_v2 import SearchRequestV2
from biotmed_organization_sdk.models.search_response_caregiver_response import SearchResponseCaregiverResponse
from biotmed_organization_sdk.models.update_caregiver_request import UpdateCaregiverRequest

from biotmed_organization_sdk.api_client import ApiClient, RequestSerialized
from biotmed_organization_sdk.api_response import ApiResponse
from biotmed_organization_sdk.rest import RESTResponseType


class CaregiverAPIApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def change_caregiver_enabled_state(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID")],
        state: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CaregiverResponse:
        """Enable or Disable Caregiver User

        Enable or Disable Caregiver User    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID|3fa85f64-5717-4562-b3fc-2c963f66afa6| |state|string|true|null||   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID (required)
        :type id: str
        :param state: (required)
        :type state: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._change_caregiver_enabled_state_serialize(
            id=id,
            state=state,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def change_caregiver_enabled_state_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID")],
        state: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CaregiverResponse]:
        """Enable or Disable Caregiver User

        Enable or Disable Caregiver User    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID|3fa85f64-5717-4562-b3fc-2c963f66afa6| |state|string|true|null||   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID (required)
        :type id: str
        :param state: (required)
        :type state: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._change_caregiver_enabled_state_serialize(
            id=id,
            state=state,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def change_caregiver_enabled_state_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID")],
        state: StrictStr,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Enable or Disable Caregiver User

        Enable or Disable Caregiver User    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID|3fa85f64-5717-4562-b3fc-2c963f66afa6| |state|string|true|null||   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID (required)
        :type id: str
        :param state: (required)
        :type state: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._change_caregiver_enabled_state_serialize(
            id=id,
            state=state,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _change_caregiver_enabled_state_serialize(
        self,
        id,
        state,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        if state is not None:
            _path_params['state'] = state
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/v1/users/caregivers/{id}/enabled-state/{state}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def create_caregiver(
        self,
        create_caregiver_request: CreateCaregiverRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CaregiverResponse:
        """Create a new Caregiver by Template id

        Create a new Caregiver by Template id    Email confirmation landing page is required as a header  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_credentialType|string|false|What type of credentials is used when logging in to the system. Only one type can be used. Default:PASSWORD Values:PASSWORD,OTP|| |_dateOfBirth|string|false|A person's date of birth A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|true|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|true||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|A person's locale Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|MFA login enabled or disabled|| |_mfa.expirationInMinutes|integer|false|MFA expiration time in minutes|| |_name|object|true||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|true||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|A person's phone An E.164 formatted phone number|+12345678901| |_templateId|string|true|The id of a template that is configured in the settings service.|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param create_caregiver_request: (required)
        :type create_caregiver_request: CreateCaregiverRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_caregiver_serialize(
            create_caregiver_request=create_caregiver_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '201': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def create_caregiver_with_http_info(
        self,
        create_caregiver_request: CreateCaregiverRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CaregiverResponse]:
        """Create a new Caregiver by Template id

        Create a new Caregiver by Template id    Email confirmation landing page is required as a header  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_credentialType|string|false|What type of credentials is used when logging in to the system. Only one type can be used. Default:PASSWORD Values:PASSWORD,OTP|| |_dateOfBirth|string|false|A person's date of birth A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|true|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|true||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|A person's locale Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|MFA login enabled or disabled|| |_mfa.expirationInMinutes|integer|false|MFA expiration time in minutes|| |_name|object|true||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|true||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|A person's phone An E.164 formatted phone number|+12345678901| |_templateId|string|true|The id of a template that is configured in the settings service.|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param create_caregiver_request: (required)
        :type create_caregiver_request: CreateCaregiverRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_caregiver_serialize(
            create_caregiver_request=create_caregiver_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '201': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def create_caregiver_without_preload_content(
        self,
        create_caregiver_request: CreateCaregiverRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create a new Caregiver by Template id

        Create a new Caregiver by Template id    Email confirmation landing page is required as a header  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_credentialType|string|false|What type of credentials is used when logging in to the system. Only one type can be used. Default:PASSWORD Values:PASSWORD,OTP|| |_dateOfBirth|string|false|A person's date of birth A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|true|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|true||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|A person's locale Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|MFA login enabled or disabled|| |_mfa.expirationInMinutes|integer|false|MFA expiration time in minutes|| |_name|object|true||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|true||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|A person's phone An E.164 formatted phone number|+12345678901| |_templateId|string|true|The id of a template that is configured in the settings service.|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param create_caregiver_request: (required)
        :type create_caregiver_request: CreateCaregiverRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_caregiver_serialize(
            create_caregiver_request=create_caregiver_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '201': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _create_caregiver_serialize(
        self,
        create_caregiver_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if create_caregiver_request is not None:
            _body_params = create_caregiver_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/v1/users/caregivers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def create_caregiver_by_template_name(
        self,
        template_name: StrictStr,
        create_caregiver_by_template_name_request: CreateCaregiverByTemplateNameRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CaregiverResponse:
        """Create a new Caregiver by Template name

        Create a new Caregiver by Template name    Email confirmation landing page is required as a header  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_credentialType|string|false|What type of credentials is used when logging in to the system. Only one type can be used. Default:PASSWORD Values:PASSWORD,OTP|| |_dateOfBirth|string|false|A person's date of birth A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|true|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|true||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|A person's locale Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|MFA login enabled or disabled|| |_mfa.expirationInMinutes|integer|false|MFA expiration time in minutes|| |_name|object|true||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|true||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|A person's phone An E.164 formatted phone number|+12345678901| Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |templateName|string|true|null||   This API requires **PROTECTED_API** permission(s).  

        :param template_name: (required)
        :type template_name: str
        :param create_caregiver_by_template_name_request: (required)
        :type create_caregiver_by_template_name_request: CreateCaregiverByTemplateNameRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_caregiver_by_template_name_serialize(
            template_name=template_name,
            create_caregiver_by_template_name_request=create_caregiver_by_template_name_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '201': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def create_caregiver_by_template_name_with_http_info(
        self,
        template_name: StrictStr,
        create_caregiver_by_template_name_request: CreateCaregiverByTemplateNameRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CaregiverResponse]:
        """Create a new Caregiver by Template name

        Create a new Caregiver by Template name    Email confirmation landing page is required as a header  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_credentialType|string|false|What type of credentials is used when logging in to the system. Only one type can be used. Default:PASSWORD Values:PASSWORD,OTP|| |_dateOfBirth|string|false|A person's date of birth A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|true|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|true||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|A person's locale Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|MFA login enabled or disabled|| |_mfa.expirationInMinutes|integer|false|MFA expiration time in minutes|| |_name|object|true||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|true||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|A person's phone An E.164 formatted phone number|+12345678901| Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |templateName|string|true|null||   This API requires **PROTECTED_API** permission(s).  

        :param template_name: (required)
        :type template_name: str
        :param create_caregiver_by_template_name_request: (required)
        :type create_caregiver_by_template_name_request: CreateCaregiverByTemplateNameRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_caregiver_by_template_name_serialize(
            template_name=template_name,
            create_caregiver_by_template_name_request=create_caregiver_by_template_name_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '201': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def create_caregiver_by_template_name_without_preload_content(
        self,
        template_name: StrictStr,
        create_caregiver_by_template_name_request: CreateCaregiverByTemplateNameRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create a new Caregiver by Template name

        Create a new Caregiver by Template name    Email confirmation landing page is required as a header  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_credentialType|string|false|What type of credentials is used when logging in to the system. Only one type can be used. Default:PASSWORD Values:PASSWORD,OTP|| |_dateOfBirth|string|false|A person's date of birth A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|true|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|true||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|A person's locale Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|MFA login enabled or disabled|| |_mfa.expirationInMinutes|integer|false|MFA expiration time in minutes|| |_name|object|true||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|true||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|A person's phone An E.164 formatted phone number|+12345678901| Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |templateName|string|true|null||   This API requires **PROTECTED_API** permission(s).  

        :param template_name: (required)
        :type template_name: str
        :param create_caregiver_by_template_name_request: (required)
        :type create_caregiver_by_template_name_request: CreateCaregiverByTemplateNameRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._create_caregiver_by_template_name_serialize(
            template_name=template_name,
            create_caregiver_by_template_name_request=create_caregiver_by_template_name_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '201': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _create_caregiver_by_template_name_serialize(
        self,
        template_name,
        create_caregiver_by_template_name_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if template_name is not None:
            _path_params['templateName'] = template_name
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if create_caregiver_by_template_name_request is not None:
            _body_params = create_caregiver_by_template_name_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/v1/users/caregivers/templates/{templateName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def delete_caregiver(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be deleted")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete Caregiver

        Delete Caregiver    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be deleted|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be deleted (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_caregiver_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '204': None,
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def delete_caregiver_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be deleted")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete Caregiver

        Delete Caregiver    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be deleted|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be deleted (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_caregiver_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '204': None,
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def delete_caregiver_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be deleted")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete Caregiver

        Delete Caregiver    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be deleted|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be deleted (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._delete_caregiver_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '204': None,
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _delete_caregiver_serialize(
        self,
        id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/v1/users/caregivers/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_caregiver(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be fetched")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CaregiverResponse:
        """Get Caregiver by ID

        Get Caregiver by ID    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be fetched|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be fetched (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_caregiver_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_caregiver_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be fetched")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CaregiverResponse]:
        """Get Caregiver by ID

        Get Caregiver by ID    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be fetched|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be fetched (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_caregiver_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_caregiver_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be fetched")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Caregiver by ID

        Get Caregiver by ID    Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be fetched|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be fetched (required)
        :type id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_caregiver_serialize(
            id=id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_caregiver_serialize(
        self,
        id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/users/caregivers/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_caregiver_self(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CaregiverResponse:
        """Get self Caregiver by ID from access token

        Get self Caregiver by ID from access token      This API requires **PROTECTED_API** permission(s).  

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_caregiver_self_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_caregiver_self_with_http_info(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CaregiverResponse]:
        """Get self Caregiver by ID from access token

        Get self Caregiver by ID from access token      This API requires **PROTECTED_API** permission(s).  

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_caregiver_self_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_caregiver_self_without_preload_content(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get self Caregiver by ID from access token

        Get self Caregiver by ID from access token      This API requires **PROTECTED_API** permission(s).  

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_caregiver_self_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_caregiver_self_serialize(
        self,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/users/caregivers/self',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def search_caregivers(
        self,
        search_request: Annotated[Optional[SearchRequestV2], Field(description="Search request parameters: filter, sort and page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SearchResponseCaregiverResponse:
        """Search Caregiver entities by filter

        Search Caregiver entities by filter  Returns list of Caregiver, the response can be filtered, sorted and supports pagination   **For more information and examples on creating search requests, click <a href=\"https://docs.biot-med.com/docs/using-biot-search-apis\" target=\"_blank\">here.</a>** ## Filter Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field  By using the logical additionalProps $AND, $OR, $NOT, you can add complex nested logic filters. When sending these props, you must send only the nested filter field inside the filter value. This will allow you to group additional filters using logical AND/OR/NOT operators. When not sending a logic prop (including when not sending a nested logic prop), the props are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned.  ***filter*** items possible values: [ *_id*,*_email*,*_phone*,*_description*,*_locale*,*_gender*,*_name.firstName*,*_name.lastName*,*_address.countryCode*,*_address.state*,*_address.city*,*_address.zipCode*,*_address.address1*,*_address.address2*,*_dateOfBirth*,*_ownerOrganization.id*,*_templateId*,*_templateName*,*_degree*,*_enabled*,*_employeeId*,*_creationTime*,*_lastModifiedTime*,*_mfa.enabled*,*_mfa.expirationInMinutes* ] and all custom attributes of all templates  ## Sort Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort  The first field is the primary sort, the second is used when two values of the first field are the same, and so forth  ***sort.order*** default value is DESC  ***sort.prop*** possible values:[ *_id*,*_email*,*_phone*,*_description*,*_locale*,*_gender*,*_name.firstName*,*_name.lastName*,*_address.countryCode*,*_address.state*,*_address.city*,*_address.zipCode*,*_address.address1*,*_address.address2*,*_dateOfBirth*,*_ownerOrganization.id*,*_degree*,*_enabled*,*_employeeId*,*_creationTime*,*_lastModifiedTime*,*_mfa.enabled*,*_mfa.expirationInMinutes* ]  If sort was not specified, the result will be sorted by: *_creationTime* DESC  ## Free text search When freeTextSearch is passed, the free text search will be performed on every field except those of type Date  If used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned  ## Page ***limit*** max number of results that will be returned for each page. If not specify, the default will be 100  ***page*** page number starting from 0. If not specify, the default will be 0  ## Build URL Encode the JSON object and use the encoded string as the searchRequest parameter:  https://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>  Query Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |searchRequest||false|Search request parameters: filter, sort and page||   This API requires **PROTECTED_API** permission(s).  

        :param search_request: Search request parameters: filter, sort and page
        :type search_request: SearchRequestV2
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_caregivers_serialize(
            search_request=search_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "SearchResponseCaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def search_caregivers_with_http_info(
        self,
        search_request: Annotated[Optional[SearchRequestV2], Field(description="Search request parameters: filter, sort and page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SearchResponseCaregiverResponse]:
        """Search Caregiver entities by filter

        Search Caregiver entities by filter  Returns list of Caregiver, the response can be filtered, sorted and supports pagination   **For more information and examples on creating search requests, click <a href=\"https://docs.biot-med.com/docs/using-biot-search-apis\" target=\"_blank\">here.</a>** ## Filter Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field  By using the logical additionalProps $AND, $OR, $NOT, you can add complex nested logic filters. When sending these props, you must send only the nested filter field inside the filter value. This will allow you to group additional filters using logical AND/OR/NOT operators. When not sending a logic prop (including when not sending a nested logic prop), the props are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned.  ***filter*** items possible values: [ *_id*,*_email*,*_phone*,*_description*,*_locale*,*_gender*,*_name.firstName*,*_name.lastName*,*_address.countryCode*,*_address.state*,*_address.city*,*_address.zipCode*,*_address.address1*,*_address.address2*,*_dateOfBirth*,*_ownerOrganization.id*,*_templateId*,*_templateName*,*_degree*,*_enabled*,*_employeeId*,*_creationTime*,*_lastModifiedTime*,*_mfa.enabled*,*_mfa.expirationInMinutes* ] and all custom attributes of all templates  ## Sort Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort  The first field is the primary sort, the second is used when two values of the first field are the same, and so forth  ***sort.order*** default value is DESC  ***sort.prop*** possible values:[ *_id*,*_email*,*_phone*,*_description*,*_locale*,*_gender*,*_name.firstName*,*_name.lastName*,*_address.countryCode*,*_address.state*,*_address.city*,*_address.zipCode*,*_address.address1*,*_address.address2*,*_dateOfBirth*,*_ownerOrganization.id*,*_degree*,*_enabled*,*_employeeId*,*_creationTime*,*_lastModifiedTime*,*_mfa.enabled*,*_mfa.expirationInMinutes* ]  If sort was not specified, the result will be sorted by: *_creationTime* DESC  ## Free text search When freeTextSearch is passed, the free text search will be performed on every field except those of type Date  If used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned  ## Page ***limit*** max number of results that will be returned for each page. If not specify, the default will be 100  ***page*** page number starting from 0. If not specify, the default will be 0  ## Build URL Encode the JSON object and use the encoded string as the searchRequest parameter:  https://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>  Query Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |searchRequest||false|Search request parameters: filter, sort and page||   This API requires **PROTECTED_API** permission(s).  

        :param search_request: Search request parameters: filter, sort and page
        :type search_request: SearchRequestV2
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_caregivers_serialize(
            search_request=search_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "SearchResponseCaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def search_caregivers_without_preload_content(
        self,
        search_request: Annotated[Optional[SearchRequestV2], Field(description="Search request parameters: filter, sort and page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Search Caregiver entities by filter

        Search Caregiver entities by filter  Returns list of Caregiver, the response can be filtered, sorted and supports pagination   **For more information and examples on creating search requests, click <a href=\"https://docs.biot-med.com/docs/using-biot-search-apis\" target=\"_blank\">here.</a>** ## Filter Each additionalProp can filter one field, inside additionalProp there are many optional conditions that can be used for filtering that field  By using the logical additionalProps $AND, $OR, $NOT, you can add complex nested logic filters. When sending these props, you must send only the nested filter field inside the filter value. This will allow you to group additional filters using logical AND/OR/NOT operators. When not sending a logic prop (including when not sending a nested logic prop), the props are bundled together using logical AND operators, this means that only the items that match all filter conditions for that field will be returned.  ***filter*** items possible values: [ *_id*,*_email*,*_phone*,*_description*,*_locale*,*_gender*,*_name.firstName*,*_name.lastName*,*_address.countryCode*,*_address.state*,*_address.city*,*_address.zipCode*,*_address.address1*,*_address.address2*,*_dateOfBirth*,*_ownerOrganization.id*,*_templateId*,*_templateName*,*_degree*,*_enabled*,*_employeeId*,*_creationTime*,*_lastModifiedTime*,*_mfa.enabled*,*_mfa.expirationInMinutes* ] and all custom attributes of all templates  ## Sort Results can be sorted by multiple fields, the order of the fields in the sort request governs the hierarchy of the sort  The first field is the primary sort, the second is used when two values of the first field are the same, and so forth  ***sort.order*** default value is DESC  ***sort.prop*** possible values:[ *_id*,*_email*,*_phone*,*_description*,*_locale*,*_gender*,*_name.firstName*,*_name.lastName*,*_address.countryCode*,*_address.state*,*_address.city*,*_address.zipCode*,*_address.address1*,*_address.address2*,*_dateOfBirth*,*_ownerOrganization.id*,*_degree*,*_enabled*,*_employeeId*,*_creationTime*,*_lastModifiedTime*,*_mfa.enabled*,*_mfa.expirationInMinutes* ]  If sort was not specified, the result will be sorted by: *_creationTime* DESC  ## Free text search When freeTextSearch is passed, the free text search will be performed on every field except those of type Date  If used together with filters, freeTextSearch will be bundled to the filters with the logical AND operator, this means that only items that match all filters (and each filter's conditions) and the free text search will be returned  ## Page ***limit*** max number of results that will be returned for each page. If not specify, the default will be 100  ***page*** page number starting from 0. If not specify, the default will be 0  ## Build URL Encode the JSON object and use the encoded string as the searchRequest parameter:  https://&lt;URL&gt;?searchRequest=<ENCODED_JSON_STRING>  Query Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |searchRequest||false|Search request parameters: filter, sort and page||   This API requires **PROTECTED_API** permission(s).  

        :param search_request: Search request parameters: filter, sort and page
        :type search_request: SearchRequestV2
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_caregivers_serialize(
            search_request=search_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "SearchResponseCaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '504': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _search_caregivers_serialize(
        self,
        search_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if search_request is not None:
            
            _query_params.append(('searchRequest', search_request))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/v1/users/caregivers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def update_caregiver(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be updated")],
        update_caregiver_request: UpdateCaregiverRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CaregiverResponse:
        """Update Caregiver

        Update Caregiver  Performs partial update, if a field is specified in the request it will be updated  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_dateOfBirth|string|false|A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|false|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|false||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|Is mfa enabled in login|| |_mfa.expirationInMinutes|integer|false|Mfa expiration in minutes|5| |_name|object|false||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|false||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|An E.164 formatted phone number|+12345678901| Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be updated|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be updated (required)
        :type id: str
        :param update_caregiver_request: (required)
        :type update_caregiver_request: UpdateCaregiverRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_caregiver_serialize(
            id=id,
            update_caregiver_request=update_caregiver_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def update_caregiver_with_http_info(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be updated")],
        update_caregiver_request: UpdateCaregiverRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CaregiverResponse]:
        """Update Caregiver

        Update Caregiver  Performs partial update, if a field is specified in the request it will be updated  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_dateOfBirth|string|false|A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|false|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|false||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|Is mfa enabled in login|| |_mfa.expirationInMinutes|integer|false|Mfa expiration in minutes|5| |_name|object|false||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|false||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|An E.164 formatted phone number|+12345678901| Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be updated|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be updated (required)
        :type id: str
        :param update_caregiver_request: (required)
        :type update_caregiver_request: UpdateCaregiverRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_caregiver_serialize(
            id=id,
            update_caregiver_request=update_caregiver_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def update_caregiver_without_preload_content(
        self,
        id: Annotated[StrictStr, Field(description="Caregiver ID that needs to be updated")],
        update_caregiver_request: UpdateCaregiverRequest,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update Caregiver

        Update Caregiver  Performs partial update, if a field is specified in the request it will be updated  (*)This parameter is mandatory only if its optional parent attribute is defined. Click <a href=\"https://docs.biot-med.com/docs/biot-rest-api#api-optional-parameters\" target=\"_blank\">here</a> for more information.  Request Body Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |&lt;customAttribute1&gt;|&lt;customAttribute1Type&gt;|false|Regular custom attribute 1 value|| |&lt;customAttributeN&gt;|&lt;customAttributeNType&gt;|false|Regular custom attribute N value|| |_address|object|false||| |_address.address1|string|false|An address|11 Main St.| |_address.address2|string|false|An address's specifics|Entry B, Apartment 1| |_address.city|string|false|A city|Boston| |_address.countryCode|string|true(*)|A 2-letter country code defined in ISO-3166|US| |_address.state|string|false|A state|Massachusetts| |_address.zipCode|string|false|A zipcode|02101| |_dateOfBirth|string|false|A UTC date in the ISO-8601 format|2007-12-20| |_degree|string|false|An caregiver's name Values:MEDICAL_DOCTOR,DOCTOR_OF_OSTEOPATHY,PHYSICIAN_ASSISTANT,REGISTERED_NURSE,CLINICAL_NURSE_SPECIALISTS,NURSE_PRACTITIONER,LICENSED_PRACTICAL_NURSE,MEDICAL_ASSISTANT,NO_DEGREE,OTHER|PHYSICIAN_ASSISTANT| |_description|string|false|A description, can be up to 5000 characters long|Lorem Ipsum| |_email|string|false|An email address in the RFC-5322 specification|john.smith@biot-med.com| |_employeeId|string|false||| |_gender|string|false|A persons gender Values:MALE,FEMALE,UNDISCLOSED|FEMALE| |_locale|string|false|Locale in the following format: {language-ISO639}-{countryCode-ISO3166} lowercase.|en-us| |_mfa|object|false||| |_mfa.enabled|boolean|true(*)|Is mfa enabled in login|| |_mfa.expirationInMinutes|integer|false|Mfa expiration in minutes|5| |_name|object|false||| |_name.firstName|string|true(*)|A person's first name|John| |_name.lastName|string|true(*)|A person's last name|Smith| |_ownerOrganization|object|false||| |_ownerOrganization.id|string|true(*)|A UUID formatted string|3fa85f64-5717-4562-b3fc-2c963f66afa6| |_phone|string|false|An E.164 formatted phone number|+12345678901| Path Parameters:  | Parameter   |Type   | Mandatory| Description          | Example   | |-------------|-------|----------|----------------------|-----------| |id|string|true|Caregiver ID that needs to be updated|3fa85f64-5717-4562-b3fc-2c963f66afa6|   This API requires **PROTECTED_API** permission(s).  

        :param id: Caregiver ID that needs to be updated (required)
        :type id: str
        :param update_caregiver_request: (required)
        :type update_caregiver_request: UpdateCaregiverRequest
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._update_caregiver_serialize(
            id=id,
            update_caregiver_request=update_caregiver_request,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '400': "ErrorResponse",
            '200': "CaregiverResponse",
            '500': "ErrorResponse",
            '401': "ErrorResponse",
            '403': "ErrorResponse",
            '404': "ErrorResponse",
            '504': "ErrorResponse",
            '409': "ErrorResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _update_caregiver_serialize(
        self,
        id,
        update_caregiver_request,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if id is not None:
            _path_params['id'] = id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if update_caregiver_request is not None:
            _body_params = update_caregiver_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/v1/users/caregivers/{id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


