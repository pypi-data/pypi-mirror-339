# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: inference_graph.proto
# Protobuf Python Version: 5.28.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    1,
    '',
    'inference_graph.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import modelfile_v2_pb2 as modelfile__v2__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15inference_graph.proto\x12\x0finference_graph\x1a\x12modelfile-v2.proto\"\x8c\x01\n\x0bModelSource\x12-\n\nfrom_proto\x18\x01 \x01(\x0b\x32\x17.modelfile.v2.ModelFileH\x00\x12\x19\n\x0f\x66rom_network_id\x18\x02 \x01(\tH\x00\x12$\n\x1a\x66rom_network_experiment_id\x18\x03 \x01(\tH\x00\x42\r\n\x0bsource_type\"\xf1\x02\n\x0f\x43onstTensorNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06output\x18\x02 \x01(\t\x12\r\n\x05shape\x18\x03 \x03(\r\x12\x43\n\x0buint64_data\x18\x04 \x01(\x0b\x32,.inference_graph.ConstTensorNode.Uint64ArrayH\x00\x12\x41\n\nint64_data\x18\x05 \x01(\x0b\x32+.inference_graph.ConstTensorNode.Int64ArrayH\x00\x12\x45\n\x0c\x66loat64_data\x18\x06 \x01(\x0b\x32-.inference_graph.ConstTensorNode.Float64ArrayH\x00\x1a\x1b\n\x0bUint64Array\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x04\x1a\x1a\n\nInt64Array\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x12\x1a\x1c\n\x0c\x46loat64Array\x12\x0c\n\x04\x64\x61ta\x18\x01 \x03(\x01\x42\x0b\n\tdata_type\"L\n\x12GenerateNumberNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06output\x18\x02 \x01(\t\x12\x0b\n\x03min\x18\x03 \x01(\x04\x12\x0b\n\x03max\x18\x04 \x01(\x04\"^\n\x0e\x41\x64\x64NumbersNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x16\n\x0einput_number_1\x18\x02 \x01(\t\x12\x16\n\x0einput_number_2\x18\x03 \x01(\t\x12\x0e\n\x06output\x18\x04 \x01(\t\"X\n\x0fImageResizeNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x12\n\ninput_size\x18\x02 \x01(\t\x12\x13\n\x0binput_image\x18\x03 \x01(\t\x12\x0e\n\x06output\x18\x04 \x01(\t\"\xb0\x01\n\x10ImagePatchesNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0binput_image\x18\x02 \x01(\t\x12\x13\n\x0binput_boxes\x18\x03 \x01(\t\x12\x17\n\x0finput_batch_map\x18\x04 \x01(\t\x12\x19\n\x11input_target_size\x18\x05 \x01(\t\x12 \n\x18input_maximum_iterations\x18\x06 \x01(\t\x12\x0e\n\x06output\x18\x07 \x01(\t\"?\n\x11VirtualCameraNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06output\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\"z\n\x17ImageClassificationNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x02 \x01(\t\x12\x0e\n\x06output\x18\x03 \x01(\t\x12\x32\n\x0cmodel_source\x18\x04 \x01(\x0b\x32\x1c.inference_graph.ModelSource\"{\n\x18ImageObjectDetectionNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x02 \x01(\t\x12\x0e\n\x06output\x18\x03 \x01(\t\x12\x32\n\x0cmodel_source\x18\x04 \x01(\x0b\x32\x1c.inference_graph.ModelSource\"o\n\x0cImageOcrNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05input\x18\x02 \x01(\t\x12\x0e\n\x06output\x18\x03 \x01(\t\x12\x32\n\x0cmodel_source\x18\x04 \x01(\x0b\x32\x1c.inference_graph.ModelSource\"\x91\x01\n\x15\x42oundingBoxFilterNode\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\"\n\x1ainput_confidence_threshold\x18\x02 \x01(\t\x12\x1b\n\x13input_iou_threshold\x18\x03 \x01(\t\x12\x13\n\x0binput_boxes\x18\x04 \x01(\t\x12\x14\n\x0coutput_boxes\x18\x05 \x01(\t\"\xbd\x05\n\x04Node\x12=\n\x11\x63onst_tensor_node\x18\x01 \x01(\x0b\x32 .inference_graph.ConstTensorNodeH\x00\x12\x43\n\x14generate_number_node\x18\x02 \x01(\x0b\x32#.inference_graph.GenerateNumberNodeH\x00\x12;\n\x10\x61\x64\x64_numbers_node\x18\x03 \x01(\x0b\x32\x1f.inference_graph.AddNumbersNodeH\x00\x12=\n\x11image_resize_node\x18\x04 \x01(\x0b\x32 .inference_graph.ImageResizeNodeH\x00\x12?\n\x12image_patches_node\x18\x05 \x01(\x0b\x32!.inference_graph.ImagePatchesNodeH\x00\x12\x41\n\x13virtual_camera_node\x18\x06 \x01(\x0b\x32\".inference_graph.VirtualCameraNodeH\x00\x12M\n\x19image_classification_node\x18\x07 \x01(\x0b\x32(.inference_graph.ImageClassificationNodeH\x00\x12P\n\x1bimage_object_detection_node\x18\x08 \x01(\x0b\x32).inference_graph.ImageObjectDetectionNodeH\x00\x12\x37\n\x0eimage_ocr_node\x18\t \x01(\x0b\x32\x1d.inference_graph.ImageOcrNodeH\x00\x12J\n\x18\x62ounding_box_filter_node\x18\n \x01(\x0b\x32&.inference_graph.BoundingBoxFilterNodeH\x00\x42\x0b\n\tnode_type\"U\n\x05Graph\x12$\n\x05nodes\x18\x01 \x03(\x0b\x32\x15.inference_graph.Node\x12\x12\n\ncreated_at\x18\x02 \x01(\x03\x12\x12\n\nlicense_id\x18\x03 \x01(\tBNZ0github.com/DENKweit/denkproto-go/inference_graph\xaa\x02\x19\x44\x45NK.Proto.InferenceGraphb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'inference_graph_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'Z0github.com/DENKweit/denkproto-go/inference_graph\252\002\031DENK.Proto.InferenceGraph'
  _globals['_MODELSOURCE']._serialized_start=63
  _globals['_MODELSOURCE']._serialized_end=203
  _globals['_CONSTTENSORNODE']._serialized_start=206
  _globals['_CONSTTENSORNODE']._serialized_end=575
  _globals['_CONSTTENSORNODE_UINT64ARRAY']._serialized_start=477
  _globals['_CONSTTENSORNODE_UINT64ARRAY']._serialized_end=504
  _globals['_CONSTTENSORNODE_INT64ARRAY']._serialized_start=506
  _globals['_CONSTTENSORNODE_INT64ARRAY']._serialized_end=532
  _globals['_CONSTTENSORNODE_FLOAT64ARRAY']._serialized_start=534
  _globals['_CONSTTENSORNODE_FLOAT64ARRAY']._serialized_end=562
  _globals['_GENERATENUMBERNODE']._serialized_start=577
  _globals['_GENERATENUMBERNODE']._serialized_end=653
  _globals['_ADDNUMBERSNODE']._serialized_start=655
  _globals['_ADDNUMBERSNODE']._serialized_end=749
  _globals['_IMAGERESIZENODE']._serialized_start=751
  _globals['_IMAGERESIZENODE']._serialized_end=839
  _globals['_IMAGEPATCHESNODE']._serialized_start=842
  _globals['_IMAGEPATCHESNODE']._serialized_end=1018
  _globals['_VIRTUALCAMERANODE']._serialized_start=1020
  _globals['_VIRTUALCAMERANODE']._serialized_end=1083
  _globals['_IMAGECLASSIFICATIONNODE']._serialized_start=1085
  _globals['_IMAGECLASSIFICATIONNODE']._serialized_end=1207
  _globals['_IMAGEOBJECTDETECTIONNODE']._serialized_start=1209
  _globals['_IMAGEOBJECTDETECTIONNODE']._serialized_end=1332
  _globals['_IMAGEOCRNODE']._serialized_start=1334
  _globals['_IMAGEOCRNODE']._serialized_end=1445
  _globals['_BOUNDINGBOXFILTERNODE']._serialized_start=1448
  _globals['_BOUNDINGBOXFILTERNODE']._serialized_end=1593
  _globals['_NODE']._serialized_start=1596
  _globals['_NODE']._serialized_end=2297
  _globals['_GRAPH']._serialized_start=2299
  _globals['_GRAPH']._serialized_end=2384
# @@protoc_insertion_point(module_scope)
