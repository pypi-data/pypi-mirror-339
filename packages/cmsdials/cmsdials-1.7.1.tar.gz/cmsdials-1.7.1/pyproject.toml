[tool.poetry]
name = "cmsdials"
version = "1.7.1"
description = "The Python api client interface to DIALS service"
authors = ["Gabriel Moreira <gabrielmscampos@gmail.com>"]
readme = "README.md"
include = ["LICENSE"]
repository = "https://github.com/cms-DQM/dials-py"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "cmsdials" }
]

[tool.poetry.dependencies]
python = "^3.9"
requests = "^2.31.0"
urllib3 = "^1.26.16"
pydantic = "^2.8.2"
pandas = {version = ">=1.5.3", optional = true}
tqdm = {version = ">=4.66.1", optional = true}

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.6.2"
ruff = "^0.4.2"
notebook = "^7.1.3"
pytest = "^8.2.0"
pytest-cov = "^6.0.0"
tox = "^4.24.1"

[tool.poetry.extras]
pandas = ["pandas"]
tqdm = ["tqdm"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
    "virtualenvs",
]
line-length = 120
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-bandit
    "S",
    # flake8-blind-except
    "BLE",
    # flake8-builtins
    "A",
    # isort
    "I",
    # flake8-logging-format
    "G",
    # flake8-no-pep420
    "INP",
    # Ruff-specific rules
    "RUF"
]
ignore = [
  # Disable eradicate (commented code removal)
  "ERA001",
  # Disable Conflicting lint rules,
  # see https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
  "W191",
  "E501",
  "E111",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
  # Disable unused `noqa` directive
  "RUF100",
]
# Allow unused variables when underscore-prefixed:
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
lines-after-imports = 2

[tool.ruff.lint.per-file-ignores]
# Ignore "E402", "F403", "F405" (import violations) in __init__.py files.
# Ignore "S" (flake8-bandit) and "N802" (function name should be lowercase) in tests and docs.
# Ignore "RUF" (Ruff-specific rules) and "I" (isort) in migrations.
"__init__.py" = ["E402", "F403", "F405"]
"**/{tests,docs}/*" = ["E402", "F403", "F405", "S", "N802"]
"**/*test*.py" = ["E402", "F403", "F405", "S", "N802"]

[tool.poetry-dynamic-versioning]
enable = false

[tool.tox]
requires = ["tox>=4.24"]
env_list = ["py39", "py310", "py311", "py312"]

[tool.tox.env_run_base]
description = "Run test under {base_python}"
commands = [["pytest", "tests"]]
passenv = ["SECRET_KEY", "BASE_URL"]
allowlist_externals = ["pytest"]

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"
