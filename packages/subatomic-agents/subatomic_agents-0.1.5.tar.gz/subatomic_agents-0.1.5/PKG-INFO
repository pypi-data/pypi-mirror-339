Metadata-Version: 2.4
Name: subatomic_agents
Version: 0.1.5
Summary: A powerful multi-agent framework for processing and understanding multimodal information with GenAI.
Author-email: Karl Simon <karl@getsubatomic.ai>, Aaron Sosa <wilfredo@getsubatomic.ai>
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: langchain
Requires-Dist: langchain_community
Requires-Dist: langchain_google_genai
Requires-Dist: langchain_core
Requires-Dist: langchain_text_splitters
Requires-Dist: python_dotenv
Requires-Dist: google_generativeai
Requires-Dist: langchain_openai
Requires-Dist: pydantic
Requires-Dist: langgraph
Requires-Dist: langchain_chroma
Requires-Dist: chromadb
Requires-Dist: youtube_transcript_api
Requires-Dist: pytube
Requires-Dist: pypdf
Requires-Dist: unstructured
Requires-Dist: python-magic
Requires-Dist: python-pptx
Requires-Dist: docx2txt
Requires-Dist: openpyxl
Requires-Dist: jq
Requires-Dist: gdown
Requires-Dist: weasyprint
Requires-Dist: pdf2docx

# Subatomic Agents API 

**Subatomic Agents** is a modular, enterprise-grade AI framework by [Subatomic](https://www.getsubatomic.ai) for automating and scaling business intelligence workflows using agent-based architectures.

*This package provides the **Sales Proposal Agent**, which transforms meeting transcripts and summaries into structured, client-ready sales proposals.*

---

## *ðŸš€ Features*

- *Includes the Sales Proposal Agent for generating structured, client-ready proposals from meeting inputs*

---

## *ðŸ“† Installation*

*Install via *[*PyPI*](https://pypi.org/project/subatomic-agents/)*:*

```bash
pip install subatomic-agents
```

---

## *ðŸ§  Usage*

```python
from subatomic_agents.sales_proposal.services.agentic_generator import sales_proposal_agentic_generator

result = sales_proposal_agentic_generator(
    query = """
    Please, create a Sales Proposal with these guidelines:
    Meeting Summary URLs (and file types): https://example.com (pdf)
    Meeting Transcript URL (and file type): https://example2.com (pdf)
    """
)

print(f"FINAL RESULT => {result}")
```

---

## *ðŸ“‚ Output*

*Returns a structured JSON dictionary representing the sales proposal (excluding internal vector data).*\
*The result is also saved to **`sales_proposal_{id}.pdf`** and **`sales_proposal_{id}.docx`**.*

---

## *âž• Extending the Framework*

*This framework is modular and designed for easy extension:*

- *Add new agents in **`agents/`***
- *Define prompt strategies in **`factories/`***
- *Extend the generation flow via **`SalesProposalGeneratorService`***

---

## *ðŸ§ª Requirements*

- *Python 3.9+*
- *Compatible with **`uv`**, **`pip`**, or **`poetry`**-based environments*

---

## *ðŸ‘¥ Authors*

*Built by *[*Subatomic*](https://www.getsubatomic.ai)*

- *Karl Simon Â· *[*karl@getsubatomic.ai*](mailto:karl@getsubatomic.ai)*
- *Aaron Sosa Â· *[*wilfredo@getsubatomic.ai*](mailto:wilfredo@getsubatomic.ai)*

---
