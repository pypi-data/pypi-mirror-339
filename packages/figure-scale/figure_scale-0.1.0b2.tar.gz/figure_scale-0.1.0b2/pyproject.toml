
[build-system]
requires = ["hatchling>=1.21.0", "hatch-vcs>=0.3.0"]
build-backend = "hatchling.build"

[project]
name = "figure-scale"
description = "Make matplotlib figures with the coorect scale."
readme = "README.md"
license = "MIT"
requires-python = ">=3.8"
authors = [{ name = "fschuch", email = "me@fschuch.com" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: Matplotlib",
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Visualization",
]
dynamic = ["version"]
dependencies = ["matplotlib>=3.2.0"]

[project.urls]
Source = "https://github.com/fschuch/figure-scale"
Tracker = "https://github.com/fschuch/figure-scale/issues"
Changelog = "https://github.com/fschuch/figure-scale/releases"

[tool.pytest.ini_options]
addopts = [
    "--doctest-modules",
    "--doctest-continue-on-failure",
    "--doctest-report=ndiff",
]

[tool.coverage.run]
branch = true
relative_files = true
source = ["figure_scale", "tests"]
omit = ["figure_scale/_version.py"]

[tool.coverage.report]
fail_under = 90
precision = 2
show_missing = true
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
extend-exclude = ["./docs/conf.py"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"] # imported but unused
"*.ipynb" = ["E402"]     # module level import not at top of file

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
pretty = true
ignore_missing_imports = true
exclude = ["docs/conf.py"]

[tool.codespell]
skip = "docs/conf.py"
check-filenames = true

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.hooks.vcs]
version-file = "figure_scale/_version.py"

[tool.hatch.envs.default]
description = "Base development environment"
installer = "uv"
dependencies = [
    "coverage[toml]>=7.5.3",
    "pre-commit>=3.5.0",
    "pint>=0.15.0",
    "pytest-cov>=5.0.0",
    "pytest>=8.2.2",
]

[tool.hatch.envs.default.scripts]
pre-commit-install = "pre-commit install {args}"
pre-commit-uninstall = "pre-commit uninstall {args}"
check = "pre-commit run {args} --all-files"
type = "check mypy {args}"
lint = "check ruff {args}"
format = "check ruff-format {args}"
test = "pytest --cov --cov-report=term {args}"
test-no-cov = "test --no-cov {args}"
qa = ["check", "test", "echo 'âœ… QA passed'"]

[tool.hatch.envs.test]
description = "Extended test environment"
extra-dependencies = ["pytest-randomly", "pytest-rerunfailures", "pytest-xdist"]

[tool.hatch.envs.test.scripts]
extended = "test -n auto --reruns 7 --reruns-delay 1 {args}"

[[tool.hatch.envs.test.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.docs]
description = "Documentation environment"
template = "docs"
install = true
installer = "uv"
python = "3.12"
dependencies = [
    "docutils==0.20.1",
    "jupyter-book==1.0.0",
    "sphinx-autobuild==2024.4.16",
    "sphinx==7.3.7",
]

[tool.hatch.envs.docs.scripts]
config = "jupyter-book config sphinx docs {args}"
build = ["config", "jupyter-book build docs --path-output build {args}"]
serve = [
    "config",
    "sphinx-autobuild docs build/_build/html --open-browser --watch figure_scale {args}",
]
