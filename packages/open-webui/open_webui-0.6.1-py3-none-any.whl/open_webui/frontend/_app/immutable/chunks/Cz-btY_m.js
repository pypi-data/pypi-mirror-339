import{e as h}from"./BWfq-JMv.js";import{a as A}from"./Dwx6w9TH.js";import{g as O}from"./DWbe5Lgm.js";import"./Cdll-xsj.js";import{t as b}from"./DMk2eJ1b.js";const z=async(e="",i=null,t=!1)=>{let n=null;const o=await fetch(`${h}/api/models${t?"/base":""}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(n=s,console.log(s),null));if(n)throw n;let a=(o==null?void 0:o.data)??[];if(i&&!t){let s=[];if(i){const r=i.OPENAI_API_BASE_URLS,d=i.OPENAI_API_KEYS,j=i.OPENAI_API_CONFIGS,c=[];for(const u in r){const f=r[u];if(u.toString()in j){const y=j[u.toString()]??{},$=(y==null?void 0:y.enable)??!0,T=(y==null?void 0:y.model_ids)??[];if($)if(T.length>0){const g={object:"list",data:T.map(p=>({id:p,name:p,owned_by:"openai",openai:{id:p},urlIdx:u}))};c.push((async()=>g)())}else c.push((async()=>await O(f,d[u]).then(g=>g).catch(g=>({object:"list",data:[],urlIdx:u})))());else c.push((async()=>({object:"list",data:[],urlIdx:u}))())}}const m=await Promise.all(c);for(const u in m){const f=m[u],y=j[u.toString()]??{};let $=Array.isArray(f)?f:(f==null?void 0:f.data)??[];$=$.map(p=>({...p,openai:{id:p.id},urlIdx:u}));const T=y.prefix_id;if(T)for(const p of $)p.id=`${T}.${p.id}`;const g=y.tags;if(g)for(const p of $)p.tags=g;s=s.concat($)}}a=a.concat(s.map(r=>({...r,name:(r==null?void 0:r.name)??(r==null?void 0:r.id),direct:!0})));const l={};for(const r of a)l[r.id]=r;a=Object.values(l)}return a},N=async(e,i)=>{let t=null;const n=await fetch(`${h}/api/chat/completed`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(i)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?t=o.detail:t=o,null));if(t)throw t;return n},_=async(e,i,t)=>{let n=null;const o=await fetch(`${h}/api/chat/actions/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(t)}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?n=a.detail:n=a,null));if(n)throw n;return o},R=async(e,i)=>{let t=null;const n=await fetch(`${h}/api/tasks/stop/${i}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?t=o.detail:t=o,null));if(t)throw t;return n},E=async(e,i)=>{let t=null;const n=await fetch(`${i}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?t=a.detail:t=a,null));if(t)throw t;const o={openapi:n,info:n.info,specs:A(n)};return console.log(o),o},U=async(e,i)=>(await Promise.all(i.filter(t=>{var n;return(n=t==null?void 0:t.config)==null?void 0:n.enable}).map(async t=>{const n=await E(t==null?void 0:t.key,(t==null?void 0:t.url)+"/"+((t==null?void 0:t.path)??"openapi.json")).catch(o=>(b.error(e.t("Failed to connect to {{URL}} OpenAPI tool server",{URL:(t==null?void 0:t.url)+"/"+((t==null?void 0:t.path)??"openapi.json")})),null));if(n){const{openapi:o,info:a,specs:s}=n;return{url:t==null?void 0:t.url,openapi:o,info:a,specs:s}}}))).filter(t=>t),J=async(e,i,t,n,o)=>{let a=null;try{const s=Object.entries(o.openapi.paths).find(([p,w])=>Object.entries(w).some(([S,P])=>P.operationId===t));if(!s)throw new Error(`No matching route found for operationId: ${t}`);const[l,r]=s,d=Object.entries(r).find(([p,w])=>w.operationId===t);if(!d)throw new Error(`No matching method found for operationId: ${t}`);const[j,c]=d,m={},u={};let f={};c.parameters&&c.parameters.forEach(p=>{const w=p.name,S=p.in;n.hasOwnProperty(w)&&(S==="path"?m[w]=n[w]:S==="query"&&(u[w]=n[w]))});let y=`${i}${l}`;if(Object.entries(m).forEach(([p,w])=>{y=y.replace(new RegExp(`{${p}}`,"g"),encodeURIComponent(w))}),Object.keys(u).length>0){const p=new URLSearchParams(Object.entries(u).map(([w,S])=>[w,String(S)])).toString();y+=`?${p}`}if(c.requestBody&&c.requestBody.content){const p=Object.keys(c.requestBody.content)[0];if(n!==void 0)f=n;else throw new Error(`Request body expected for operation '${t}' but none found.`)}const $={"Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}};let T={method:j.toUpperCase(),headers:$};["post","put","patch"].includes(j.toLowerCase())&&c.requestBody&&(T.body=JSON.stringify(f));const g=await fetch(y,T);if(!g.ok){const p=await g.text();throw new Error(`HTTP error! Status: ${g.status}. Message: ${p}`)}return await g.json()}catch(s){return a=s.message,console.error("API Request Error:",a),{error:a}}},L=async(e="")=>{let i=null;const t=await fetch(`${h}/api/v1/tasks/config`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return t},q=async(e,i)=>{let t=null;const n=await fetch(`${h}/api/v1/tasks/config/update`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(i)}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),"detail"in o?t=o.detail:t=o,null));if(t)throw t;return n},G=async(e="",i,t,n)=>{var s,l;let o=null;const a=await fetch(`${h}/api/v1/tasks/tags/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,messages:t,...n&&{chat_id:n}})}).then(async r=>{if(!r.ok)throw await r.json();return r.json()}).catch(r=>(console.log(r),"detail"in r&&(o=r.detail),null));if(o)throw o;try{const d=(((l=(s=a==null?void 0:a.choices[0])==null?void 0:s.message)==null?void 0:l.content)??"").replace(/['‘’`]/g,'"'),j=d.indexOf("{"),c=d.lastIndexOf("}");if(j!==-1&&c!==-1){const m=d.substring(j,c+1),u=JSON.parse(m);return u&&u.tags?Array.isArray(u.tags)?u.tags:[]:[]}return[]}catch(r){return console.error("Failed to parse response: ",r),[]}},M=async(e="",i,t,n)=>{var l,r;let o=null;const a=await fetch(`${h}/api/v1/tasks/emoji/completions`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:t,...n&&{chat_id:n}})}).then(async d=>{if(!d.ok)throw await d.json();return d.json()}).catch(d=>(console.log(d),"detail"in d&&(o=d.detail),null));if(o)throw o;const s=((r=(l=a==null?void 0:a.choices[0])==null?void 0:l.message)==null?void 0:r.content.replace(/["']/g,""))??null;return s&&new RegExp("\\p{Extended_Pictographic}","u").test(s)?s.match(new RegExp("\\p{Extended_Pictographic}","gu"))[0]:null},D=async(e="",i,t,n,o="search query")=>{var d,j;const a=new AbortController;let s=null;const l=await fetch(`${h}/api/v1/tasks/auto/completions`,{signal:a.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:t,...n&&{messages:n},type:o,stream:!1})}).then(async c=>{if(!c.ok)throw await c.json();return c.json()}).catch(c=>(console.log(c),"detail"in c&&(s=c.detail),null));if(s)throw s;const r=((j=(d=l==null?void 0:l.choices[0])==null?void 0:d.message)==null?void 0:j.content)??"";try{const c=r.indexOf("{"),m=r.lastIndexOf("}");if(c!==-1&&m!==-1){const u=r.substring(c,m+1),f=JSON.parse(u);return f&&f.text?f.text:""}return r}catch(c){return console.error("Failed to parse response: ",c),r}},F=async(e="",i,t,n)=>{const o=new AbortController;let a=null;const s=await fetch(`${h}/api/v1/tasks/moa/completions`,{signal:o.signal,method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({model:i,prompt:t,responses:n,stream:!0})}).catch(l=>(console.log(l),a=l,null));if(a)throw a;return[s,o]},V=async(e="")=>{let i=null;const t=await fetch(`${h}/api/v1/pipelines/list`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),i=o,null));if(i)throw i;return(t==null?void 0:t.data)??[]},v=async(e,i,t)=>{let n=null;const o=new FormData;o.append("file",i),o.append("urlIdx",t);const a=await fetch(`${h}/api/v1/pipelines/upload`,{method:"POST",headers:{...e&&{authorization:`Bearer ${e}`}},body:o}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),"detail"in s?n=s.detail:n=s,null));if(n)throw n;return a},W=async(e,i,t)=>{let n=null;const o=await fetch(`${h}/api/v1/pipelines/add`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({url:i,urlIdx:t})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?n=a.detail:n=a,null));if(n)throw n;return o},K=async(e,i,t)=>{let n=null;const o=await fetch(`${h}/api/v1/pipelines/delete`,{method:"DELETE",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify({id:i,urlIdx:t})}).then(async a=>{if(!a.ok)throw await a.json();return a.json()}).catch(a=>(console.log(a),"detail"in a?n=a.detail:n=a,null));if(n)throw n;return o},Y=async(e,i)=>{let t=null;const n=new URLSearchParams;i!==void 0&&n.append("urlIdx",i);const o=await fetch(`${h}/api/v1/pipelines/?${n.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),t=s,null));if(t)throw t;return(o==null?void 0:o.data)??[]},H=async(e,i,t)=>{let n=null;const o=new URLSearchParams;t!==void 0&&o.append("urlIdx",t);const a=await fetch(`${h}/api/v1/pipelines/${i}/valves?${o.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return a},Q=async(e,i,t)=>{let n=null;const o=new URLSearchParams;t!==void 0&&o.append("urlIdx",t);const a=await fetch(`${h}/api/v1/pipelines/${i}/valves/spec?${o.toString()}`,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}}}).then(async s=>{if(!s.ok)throw await s.json();return s.json()}).catch(s=>(console.log(s),n=s,null));if(n)throw n;return a},X=async(e="",i,t,n)=>{let o=null;const a=new URLSearchParams;n!==void 0&&a.append("urlIdx",n);const s=await fetch(`${h}/api/v1/pipelines/${i}/valves/update?${a.toString()}`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json",...e&&{authorization:`Bearer ${e}`}},body:JSON.stringify(t)}).then(async l=>{if(!l.ok)throw await l.json();return l.json()}).catch(l=>(console.log(l),"detail"in l?o=l.detail:o=l,null));if(o)throw o;return s},Z=async()=>{let e=null;const i=await fetch(`${h}/api/config`,{method:"GET",credentials:"include",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),e=t,null));if(e)throw e;return i},tt=async()=>{let e=null;const i=await fetch(`${h}/api/changelog`,{method:"GET",headers:{"Content-Type":"application/json"}}).then(async t=>{if(!t.ok)throw await t.json();return t.json()}).catch(t=>(console.log(t),e=t,null));if(e)throw e;return i},nt=async e=>{let i=null;const t=await fetch(`${h}/api/version/updates`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return t},ot=async e=>{let i=null;const t=await fetch(`${h}/api/webhook`,{method:"GET",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`}}).then(async n=>{if(!n.ok)throw await n.json();return n.json()}).catch(n=>(console.log(n),i=n,null));if(i)throw i;return t.url},et=async(e,i)=>{let t=null;const n=await fetch(`${h}/api/webhook`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${e}`},body:JSON.stringify({url:i})}).then(async o=>{if(!o.ok)throw await o.json();return o.json()}).catch(o=>(console.log(o),t=o,null));if(t)throw t;return n.url};export{Z as a,E as b,G as c,ot as d,J as e,nt as f,z as g,V as h,X as i,Q as j,H as k,Y as l,W as m,K as n,v as o,L as p,q,U as r,tt as s,D as t,et as u,M as v,_ as w,R as x,F as y,N as z};
//# sourceMappingURL=Cz-btY_m.js.map
