"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from documenso_sdk import utils
from documenso_sdk.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, TypedDict


class TemplateDeleteTemplateDirectLinkRequestTypedDict(TypedDict):
    template_id: float


class TemplateDeleteTemplateDirectLinkRequest(BaseModel):
    template_id: Annotated[float, pydantic.Field(alias="templateId")]


class TemplateDeleteTemplateDirectLinkInternalServerErrorIssueTypedDict(TypedDict):
    message: str


class TemplateDeleteTemplateDirectLinkInternalServerErrorIssue(BaseModel):
    message: str


class TemplateDeleteTemplateDirectLinkInternalServerErrorData(BaseModel):
    message: str

    code: str

    issues: Optional[List[TemplateDeleteTemplateDirectLinkInternalServerErrorIssue]] = (
        None
    )


class TemplateDeleteTemplateDirectLinkInternalServerError(Exception):
    r"""Internal server error"""

    data: TemplateDeleteTemplateDirectLinkInternalServerErrorData

    def __init__(self, data: TemplateDeleteTemplateDirectLinkInternalServerErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, TemplateDeleteTemplateDirectLinkInternalServerErrorData
        )


class TemplateDeleteTemplateDirectLinkBadRequestIssueTypedDict(TypedDict):
    message: str


class TemplateDeleteTemplateDirectLinkBadRequestIssue(BaseModel):
    message: str


class TemplateDeleteTemplateDirectLinkBadRequestErrorData(BaseModel):
    message: str

    code: str

    issues: Optional[List[TemplateDeleteTemplateDirectLinkBadRequestIssue]] = None


class TemplateDeleteTemplateDirectLinkBadRequestError(Exception):
    r"""Invalid input data"""

    data: TemplateDeleteTemplateDirectLinkBadRequestErrorData

    def __init__(self, data: TemplateDeleteTemplateDirectLinkBadRequestErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, TemplateDeleteTemplateDirectLinkBadRequestErrorData
        )


class TemplateDeleteTemplateDirectLinkResponseTypedDict(TypedDict):
    r"""Successful response"""

    success: bool


class TemplateDeleteTemplateDirectLinkResponse(BaseModel):
    r"""Successful response"""

    success: bool
