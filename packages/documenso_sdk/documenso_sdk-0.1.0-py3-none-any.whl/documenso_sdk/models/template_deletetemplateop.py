"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from documenso_sdk import utils
from documenso_sdk.types import BaseModel
import pydantic
from typing import List, Optional
from typing_extensions import Annotated, TypedDict


class TemplateDeleteTemplateRequestTypedDict(TypedDict):
    template_id: float


class TemplateDeleteTemplateRequest(BaseModel):
    template_id: Annotated[float, pydantic.Field(alias="templateId")]


class TemplateDeleteTemplateInternalServerErrorIssueTypedDict(TypedDict):
    message: str


class TemplateDeleteTemplateInternalServerErrorIssue(BaseModel):
    message: str


class TemplateDeleteTemplateInternalServerErrorData(BaseModel):
    message: str

    code: str

    issues: Optional[List[TemplateDeleteTemplateInternalServerErrorIssue]] = None


class TemplateDeleteTemplateInternalServerError(Exception):
    r"""Internal server error"""

    data: TemplateDeleteTemplateInternalServerErrorData

    def __init__(self, data: TemplateDeleteTemplateInternalServerErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(
            self.data, TemplateDeleteTemplateInternalServerErrorData
        )


class TemplateDeleteTemplateBadRequestIssueTypedDict(TypedDict):
    message: str


class TemplateDeleteTemplateBadRequestIssue(BaseModel):
    message: str


class TemplateDeleteTemplateBadRequestErrorData(BaseModel):
    message: str

    code: str

    issues: Optional[List[TemplateDeleteTemplateBadRequestIssue]] = None


class TemplateDeleteTemplateBadRequestError(Exception):
    r"""Invalid input data"""

    data: TemplateDeleteTemplateBadRequestErrorData

    def __init__(self, data: TemplateDeleteTemplateBadRequestErrorData):
        self.data = data

    def __str__(self) -> str:
        return utils.marshal_json(self.data, TemplateDeleteTemplateBadRequestErrorData)


class TemplateDeleteTemplateResponseTypedDict(TypedDict):
    r"""Successful response"""

    success: bool


class TemplateDeleteTemplateResponse(BaseModel):
    r"""Successful response"""

    success: bool
