Metadata-Version: 2.4
Name: llamapersonalization
Version: 0.1.0
Summary: User profile management, preference modeling, and personalization features for LlamaAI Ecosystem
Project-URL: Homepage, https://github.com/yourusername/llamapersonalization-pkg
Project-URL: Bug Tracker, https://github.com/yourusername/llamapersonalization-pkg/issues
Project-URL: Documentation, https://yourusername.github.io/llamapersonalization-pkg/
Author-email: Your Name <your.email@example.com>
License: MIT License
        
        Copyright (c) 2024 Your Name # Replace with current year and your name/organization
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE. 
License-File: LICENSE
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.8
Requires-Dist: aiosqlite
Requires-Dist: alembic>=1.10.0
Requires-Dist: asyncpg
Requires-Dist: llamavector>=0.1.0
Requires-Dist: loguru>=0.7.0
Requires-Dist: numpy>=1.21.0
Requires-Dist: pandas>=1.5.0
Requires-Dist: pydantic>=1.10.0
Requires-Dist: redis[hiredis]>=4.5.0
Requires-Dist: scikit-learn>=1.1.0
Requires-Dist: sqlalchemy[asyncio]>=2.0.0
Provides-Extra: all
Requires-Dist: black>=23.3.0; extra == 'all'
Requires-Dist: fastapi>=0.95.0; extra == 'all'
Requires-Dist: isort>=5.12.0; extra == 'all'
Requires-Dist: mkdocs-material>=9.1.6; extra == 'all'
Requires-Dist: mkdocs>=1.4.2; extra == 'all'
Requires-Dist: mkdocstrings[python]>=0.20.0; extra == 'all'
Requires-Dist: mypy>=1.2.0; extra == 'all'
Requires-Dist: pre-commit>=3.3.1; extra == 'all'
Requires-Dist: pytest-asyncio; extra == 'all'
Requires-Dist: pytest-cov>=4.1.0; extra == 'all'
Requires-Dist: pytest-mock>=3.10.0; extra == 'all'
Requires-Dist: pytest>=7.3.1; extra == 'all'
Requires-Dist: ruff>=0.0.260; extra == 'all'
Requires-Dist: uvicorn[standard]>=0.21.0; extra == 'all'
Provides-Extra: api
Requires-Dist: fastapi>=0.95.0; extra == 'api'
Requires-Dist: uvicorn[standard]>=0.21.0; extra == 'api'
Provides-Extra: dev
Requires-Dist: black>=23.3.0; extra == 'dev'
Requires-Dist: isort>=5.12.0; extra == 'dev'
Requires-Dist: mypy>=1.2.0; extra == 'dev'
Requires-Dist: pre-commit>=3.3.1; extra == 'dev'
Requires-Dist: pytest-asyncio; extra == 'dev'
Requires-Dist: pytest-cov>=4.1.0; extra == 'dev'
Requires-Dist: pytest-mock>=3.10.0; extra == 'dev'
Requires-Dist: pytest>=7.3.1; extra == 'dev'
Requires-Dist: ruff>=0.0.260; extra == 'dev'
Provides-Extra: docs
Requires-Dist: mkdocs-material>=9.1.6; extra == 'docs'
Requires-Dist: mkdocs>=1.4.2; extra == 'docs'
Requires-Dist: mkdocstrings[python]>=0.20.0; extra == 'docs'
Description-Content-Type: text/markdown

# llama-personalization

[![PyPI version](https://img.shields.io/pypi/v/llama_personalization.svg)](https://pypi.org/project/llama_personalization/)
[![License](https://img.shields.io/github/license/llamasearchai/llama-personalization)](https://github.com/llamasearchai/llama-personalization/blob/main/LICENSE)
[![Python Version](https://img.shields.io/pypi/pyversions/llama_personalization.svg)](https://pypi.org/project/llama_personalization/)
[![CI Status](https://github.com/llamasearchai/llama-personalization/actions/workflows/llamasearchai_ci.yml/badge.svg)](https://github.com/llamasearchai/llama-personalization/actions/workflows/llamasearchai_ci.yml)

**Llama Personalization (llama-personalization)** is a toolkit within the LlamaSearch AI ecosystem focused on delivering personalized experiences. It likely involves user profiling, preference learning, and adapting content or recommendations based on individual user data.

## Key Features

- **Personalization Engine:** The core logic for generating personalized results resides here (`engine.py`).
- **User Profiling:** Likely involves mechanisms to build and maintain user profiles.
- **Preference Learning:** May include algorithms to learn user preferences from interactions.
- **Command-Line Interface:** Provides CLI access to personalization functions (`cli.py`).
- **Core Module:** Orchestrates the personalization process (`core.py`).
- **Configurable:** Allows customization of models, data sources, and algorithms (`config.py`).

## Installation

```bash
pip install llama-personalization
# Or install directly from GitHub for the latest version:
# pip install git+https://github.com/llamasearchai/llama-personalization.git
```

## Usage

### Command-Line Interface (CLI)

*(CLI usage examples will be added here.)*

```bash
llama-personalization --user-id 123 get-recommendations --item-type article
```

### Python Client

*(Python client usage examples will be added here.)*

```python
# Placeholder for Python client usage
# from llama_personalization import PersonalizationClient, UserProfile

# client = PersonalizationClient(config_path="config.yaml")

# # Update user profile
# profile = UserProfile(user_id="user456", interests=["ai", "python"])
# client.update_profile(profile)

# # Get personalized recommendations
# recommendations = client.get_recommendations(user_id="user456", context="homepage")
# print(recommendations)
```

## Architecture Overview

```mermaid
graph TD
    A[User Data / Interaction History] --> B{Personalization Engine (engine.py)};
    C[Context (e.g., current page)] --> B;
    B --> D[User Profile Store];
    B --> E[Recommendation / Content Models];
    B --> F[Personalized Output (Recommendations, Content)];

    G{Core Module (core.py)} -- Manages --> B;
    H[CLI (cli.py)] -- Interacts --> G;
    I[Configuration (config.py)] -- Configures --> G;
    I -- Configures --> B;

    style B fill:#f9f,stroke:#333,stroke-width:2px
    style D fill:#ccf,stroke:#333,stroke-width:1px
    style E fill:#ccf,stroke:#333,stroke-width:1px
```

1.  **Input:** Takes user data, interaction history, and current context.
2.  **Engine:** The core personalization engine processes inputs, potentially updating user profiles and querying models.
3.  **Data/Models:** Interacts with user profile storage and recommendation/content generation models.
4.  **Output:** Produces personalized recommendations, content adjustments, or other tailored experiences.
5.  **Core/CLI/Config:** The core module orchestrates the process, accessible via CLI and configured by `config.py`.

## Configuration

*(Details on configuring user data sources, recommendation algorithms, profile storage, etc., will be added here.)*

## Development

### Setup

```bash
# Clone the repository
git clone https://github.com/llamasearchai/llama-personalization.git
cd llama-personalization

# Install in editable mode with development dependencies
pip install -e ".[dev]"
```

### Testing

```bash
pytest tests/
```

### Contributing

Contributions are welcome! Please refer to [CONTRIBUTING.md](CONTRIBUTING.md) and submit a Pull Request.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.
