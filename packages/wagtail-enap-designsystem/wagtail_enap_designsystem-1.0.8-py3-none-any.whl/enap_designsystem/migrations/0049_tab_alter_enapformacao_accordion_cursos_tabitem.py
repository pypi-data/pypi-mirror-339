# Generated by Django 5.1.6 on 2025-03-20 00:40

import django.db.models.deletion
import modelcluster.fields
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("enap_designsystem", "0048_enapformacao_wizard"),
    ]

    operations = [
        migrations.CreateModel(
            name="Tab",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=255, verbose_name="Título do Componente"
                    ),
                ),
            ],
            options={
                "verbose_name": "Enap Tab v1",
                "verbose_name_plural": "Enap Tabs v1",
            },
        ),
        migrations.AlterField(
            model_name="enapformacao",
            name="accordion_cursos",
            field=wagtail.fields.StreamField(
                [("enap_accordion", 5), ("button_group", 11), ("carousel", 18)],
                blank=True,
                block_lookup={
                    0: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [("", "Default")],
                            "label": "Template",
                            "required": False,
                        },
                    ),
                    1: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "label": "Custom CSS Class",
                            "max_length": 255,
                            "required": False,
                        },
                    ),
                    2: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"label": "Custom ID", "max_length": 255, "required": False},
                    ),
                    3: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("custom_template", 0),
                                ("custom_css_class", 1),
                                ("custom_id", 2),
                            ]
                        ],
                        {},
                    ),
                    4: (
                        "wagtail.snippets.blocks.SnippetChooserBlock",
                        ("enap_designsystem.EnapAccordionSnippet",),
                        {},
                    ),
                    5: (
                        "wagtail.blocks.StructBlock",
                        [[("settings", 3), ("accordion", 4)]],
                        {},
                    ),
                    6: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                ("solid", "Solid - Fundo colorido"),
                                ("outline", "Outline - Apenas contorno"),
                            ],
                            "help_text": "Estilo visual dos botões",
                        },
                    ),
                    7: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {"help_text": "Texto do botão", "required": True},
                    ),
                    8: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "URL para onde o botão vai direcionar (opcional)",
                            "required": False,
                        },
                    ),
                    9: ("wagtail.blocks.StructBlock", [[("label", 7), ("url", 8)]], {}),
                    10: (
                        "wagtail.blocks.ListBlock",
                        (9,),
                        {
                            "help_text": "Adicione botões ao grupo (entre 1 e 10)",
                            "max_num": 10,
                            "min_num": 1,
                        },
                    ),
                    11: (
                        "wagtail.blocks.StructBlock",
                        [[("style", 6), ("buttons", 10)]],
                        {},
                    ),
                    12: (
                        "wagtail.images.blocks.ImageChooserBlock",
                        (),
                        {"help_text": "Imagem de fundo para o slide", "required": True},
                    ),
                    13: (
                        "wagtail.blocks.ChoiceBlock",
                        [],
                        {
                            "choices": [
                                ("title_center", "Título centralizado"),
                                (
                                    "title_desc_left",
                                    "Título e descrição à esquerda com grafismo",
                                ),
                                ("blank", "Slide em branco"),
                            ],
                            "help_text": "Escolha o formato do slide",
                        },
                    ),
                    14: (
                        "wagtail.blocks.CharBlock",
                        (),
                        {
                            "help_text": "Título do slide (não usado no formato em branco)",
                            "required": False,
                        },
                    ),
                    15: (
                        "wagtail.blocks.TextBlock",
                        (),
                        {
                            "help_text": "Descrição do slide (usado apenas no formato 'Título e descrição à esquerda')",
                            "required": False,
                        },
                    ),
                    16: (
                        "wagtail.blocks.StructBlock",
                        [
                            [
                                ("background_image", 12),
                                ("slide_type", 13),
                                ("title", 14),
                                ("description", 15),
                            ]
                        ],
                        {},
                    ),
                    17: (
                        "wagtail.blocks.ListBlock",
                        (16,),
                        {
                            "help_text": "Adicione slides ao carrossel (entre 1 e 10)",
                            "max_num": 10,
                            "min_num": 1,
                        },
                    ),
                    18: ("wagtail.blocks.StructBlock", [[("slides", 17)]], {}),
                },
                null=True,
            ),
        ),
        migrations.CreateModel(
            name="TabItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "title",
                    models.CharField(max_length=255, verbose_name="Título da Aba"),
                ),
                (
                    "content",
                    wagtail.fields.RichTextField(verbose_name="Conteúdo da Aba"),
                ),
                (
                    "tab",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tab_items",
                        to="enap_designsystem.tab",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
