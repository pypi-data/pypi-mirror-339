Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    LBRACE
    MULTILINE_COMMENT
    RBRACE

Grammar

Rule 0     S' -> config
Rule 1     config -> config statement
Rule 2     config -> statement
Rule 3     statement -> table
Rule 4     statement -> key_value_pair
Rule 5     statement -> INDENT
Rule 6     statement -> DEDENT
Rule 7     table -> LBRACKET IDENTIFIER RBRACKET
Rule 8     table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT
Rule 9     key_value_pair -> IDENTIFIER EQUALS value
Rule 10    value -> STRING
Rule 11    value -> NUMBER
Rule 12    value -> DYNAMIC_PLACEHOLDER
Rule 13    statements -> statements statement
Rule 14    statements -> statement
Rule 15    indent_statement -> INDENT
Rule 16    dedent_statement -> DEDENT

Terminals, with rules where they appear

COMMENT              : 
DEDENT               : 6 8 16
DYNAMIC_PLACEHOLDER  : 12
EQUALS               : 9
IDENTIFIER           : 7 8 9
INDENT               : 5 8 15
LBRACE               : 
LBRACKET             : 7 8
MULTILINE_COMMENT    : 
NUMBER               : 11
RBRACE               : 
RBRACKET             : 7 8
STRING               : 10
error                : 

Nonterminals, with rules where they appear

config               : 1 0
dedent_statement     : 
indent_statement     : 
key_value_pair       : 4
statement            : 1 2 13 14
statements           : 8 13
table                : 3
value                : 9

Parsing method: LALR

state 0

    (0) S' -> . config
    (1) config -> . config statement
    (2) config -> . statement
    (3) statement -> . table
    (4) statement -> . key_value_pair
    (5) statement -> . INDENT
    (6) statement -> . DEDENT
    (7) table -> . LBRACKET IDENTIFIER RBRACKET
    (8) table -> . LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT
    (9) key_value_pair -> . IDENTIFIER EQUALS value

    INDENT          shift and go to state 5
    DEDENT          shift and go to state 6
    LBRACKET        shift and go to state 7
    IDENTIFIER      shift and go to state 8

    config                         shift and go to state 1
    statement                      shift and go to state 2
    table                          shift and go to state 3
    key_value_pair                 shift and go to state 4

state 1

    (0) S' -> config .
    (1) config -> config . statement
    (3) statement -> . table
    (4) statement -> . key_value_pair
    (5) statement -> . INDENT
    (6) statement -> . DEDENT
    (7) table -> . LBRACKET IDENTIFIER RBRACKET
    (8) table -> . LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT
    (9) key_value_pair -> . IDENTIFIER EQUALS value

    INDENT          shift and go to state 5
    DEDENT          shift and go to state 6
    LBRACKET        shift and go to state 7
    IDENTIFIER      shift and go to state 8

    statement                      shift and go to state 9
    table                          shift and go to state 3
    key_value_pair                 shift and go to state 4

state 2

    (2) config -> statement .

    INDENT          reduce using rule 2 (config -> statement .)
    DEDENT          reduce using rule 2 (config -> statement .)
    LBRACKET        reduce using rule 2 (config -> statement .)
    IDENTIFIER      reduce using rule 2 (config -> statement .)
    $end            reduce using rule 2 (config -> statement .)


state 3

    (3) statement -> table .

    INDENT          reduce using rule 3 (statement -> table .)
    DEDENT          reduce using rule 3 (statement -> table .)
    LBRACKET        reduce using rule 3 (statement -> table .)
    IDENTIFIER      reduce using rule 3 (statement -> table .)
    $end            reduce using rule 3 (statement -> table .)


state 4

    (4) statement -> key_value_pair .

    INDENT          reduce using rule 4 (statement -> key_value_pair .)
    DEDENT          reduce using rule 4 (statement -> key_value_pair .)
    LBRACKET        reduce using rule 4 (statement -> key_value_pair .)
    IDENTIFIER      reduce using rule 4 (statement -> key_value_pair .)
    $end            reduce using rule 4 (statement -> key_value_pair .)


state 5

    (5) statement -> INDENT .

    INDENT          reduce using rule 5 (statement -> INDENT .)
    DEDENT          reduce using rule 5 (statement -> INDENT .)
    LBRACKET        reduce using rule 5 (statement -> INDENT .)
    IDENTIFIER      reduce using rule 5 (statement -> INDENT .)
    $end            reduce using rule 5 (statement -> INDENT .)


state 6

    (6) statement -> DEDENT .

    INDENT          reduce using rule 6 (statement -> DEDENT .)
    DEDENT          reduce using rule 6 (statement -> DEDENT .)
    LBRACKET        reduce using rule 6 (statement -> DEDENT .)
    IDENTIFIER      reduce using rule 6 (statement -> DEDENT .)
    $end            reduce using rule 6 (statement -> DEDENT .)


state 7

    (7) table -> LBRACKET . IDENTIFIER RBRACKET
    (8) table -> LBRACKET . IDENTIFIER RBRACKET INDENT statements DEDENT

    IDENTIFIER      shift and go to state 10


state 8

    (9) key_value_pair -> IDENTIFIER . EQUALS value

    EQUALS          shift and go to state 11


state 9

    (1) config -> config statement .

    INDENT          reduce using rule 1 (config -> config statement .)
    DEDENT          reduce using rule 1 (config -> config statement .)
    LBRACKET        reduce using rule 1 (config -> config statement .)
    IDENTIFIER      reduce using rule 1 (config -> config statement .)
    $end            reduce using rule 1 (config -> config statement .)


state 10

    (7) table -> LBRACKET IDENTIFIER . RBRACKET
    (8) table -> LBRACKET IDENTIFIER . RBRACKET INDENT statements DEDENT

    RBRACKET        shift and go to state 12


state 11

    (9) key_value_pair -> IDENTIFIER EQUALS . value
    (10) value -> . STRING
    (11) value -> . NUMBER
    (12) value -> . DYNAMIC_PLACEHOLDER

    STRING          shift and go to state 14
    NUMBER          shift and go to state 15
    DYNAMIC_PLACEHOLDER shift and go to state 16

    value                          shift and go to state 13

state 12

    (7) table -> LBRACKET IDENTIFIER RBRACKET .
    (8) table -> LBRACKET IDENTIFIER RBRACKET . INDENT statements DEDENT

  ! shift/reduce conflict for INDENT resolved as shift
    DEDENT          reduce using rule 7 (table -> LBRACKET IDENTIFIER RBRACKET .)
    LBRACKET        reduce using rule 7 (table -> LBRACKET IDENTIFIER RBRACKET .)
    IDENTIFIER      reduce using rule 7 (table -> LBRACKET IDENTIFIER RBRACKET .)
    $end            reduce using rule 7 (table -> LBRACKET IDENTIFIER RBRACKET .)
    INDENT          shift and go to state 17

  ! INDENT          [ reduce using rule 7 (table -> LBRACKET IDENTIFIER RBRACKET .) ]


state 13

    (9) key_value_pair -> IDENTIFIER EQUALS value .

    INDENT          reduce using rule 9 (key_value_pair -> IDENTIFIER EQUALS value .)
    DEDENT          reduce using rule 9 (key_value_pair -> IDENTIFIER EQUALS value .)
    LBRACKET        reduce using rule 9 (key_value_pair -> IDENTIFIER EQUALS value .)
    IDENTIFIER      reduce using rule 9 (key_value_pair -> IDENTIFIER EQUALS value .)
    $end            reduce using rule 9 (key_value_pair -> IDENTIFIER EQUALS value .)


state 14

    (10) value -> STRING .

    INDENT          reduce using rule 10 (value -> STRING .)
    DEDENT          reduce using rule 10 (value -> STRING .)
    LBRACKET        reduce using rule 10 (value -> STRING .)
    IDENTIFIER      reduce using rule 10 (value -> STRING .)
    $end            reduce using rule 10 (value -> STRING .)


state 15

    (11) value -> NUMBER .

    INDENT          reduce using rule 11 (value -> NUMBER .)
    DEDENT          reduce using rule 11 (value -> NUMBER .)
    LBRACKET        reduce using rule 11 (value -> NUMBER .)
    IDENTIFIER      reduce using rule 11 (value -> NUMBER .)
    $end            reduce using rule 11 (value -> NUMBER .)


state 16

    (12) value -> DYNAMIC_PLACEHOLDER .

    INDENT          reduce using rule 12 (value -> DYNAMIC_PLACEHOLDER .)
    DEDENT          reduce using rule 12 (value -> DYNAMIC_PLACEHOLDER .)
    LBRACKET        reduce using rule 12 (value -> DYNAMIC_PLACEHOLDER .)
    IDENTIFIER      reduce using rule 12 (value -> DYNAMIC_PLACEHOLDER .)
    $end            reduce using rule 12 (value -> DYNAMIC_PLACEHOLDER .)


state 17

    (8) table -> LBRACKET IDENTIFIER RBRACKET INDENT . statements DEDENT
    (13) statements -> . statements statement
    (14) statements -> . statement
    (3) statement -> . table
    (4) statement -> . key_value_pair
    (5) statement -> . INDENT
    (6) statement -> . DEDENT
    (7) table -> . LBRACKET IDENTIFIER RBRACKET
    (8) table -> . LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT
    (9) key_value_pair -> . IDENTIFIER EQUALS value

    INDENT          shift and go to state 5
    DEDENT          shift and go to state 6
    LBRACKET        shift and go to state 7
    IDENTIFIER      shift and go to state 8

    statements                     shift and go to state 18
    statement                      shift and go to state 19
    table                          shift and go to state 3
    key_value_pair                 shift and go to state 4

state 18

    (8) table -> LBRACKET IDENTIFIER RBRACKET INDENT statements . DEDENT
    (13) statements -> statements . statement
    (3) statement -> . table
    (4) statement -> . key_value_pair
    (5) statement -> . INDENT
    (6) statement -> . DEDENT
    (7) table -> . LBRACKET IDENTIFIER RBRACKET
    (8) table -> . LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT
    (9) key_value_pair -> . IDENTIFIER EQUALS value

    DEDENT          shift and go to state 20
    INDENT          shift and go to state 5
    LBRACKET        shift and go to state 7
    IDENTIFIER      shift and go to state 8

    statement                      shift and go to state 21
    table                          shift and go to state 3
    key_value_pair                 shift and go to state 4

state 19

    (14) statements -> statement .

    DEDENT          reduce using rule 14 (statements -> statement .)
    INDENT          reduce using rule 14 (statements -> statement .)
    LBRACKET        reduce using rule 14 (statements -> statement .)
    IDENTIFIER      reduce using rule 14 (statements -> statement .)


state 20

    (8) table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT .
    (6) statement -> DEDENT .

  ! reduce/reduce conflict for DEDENT resolved using rule 6 (statement -> DEDENT .)
  ! reduce/reduce conflict for INDENT resolved using rule 6 (statement -> DEDENT .)
  ! reduce/reduce conflict for LBRACKET resolved using rule 6 (statement -> DEDENT .)
  ! reduce/reduce conflict for IDENTIFIER resolved using rule 6 (statement -> DEDENT .)
    $end            reduce using rule 8 (table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT .)
    DEDENT          reduce using rule 6 (statement -> DEDENT .)
    INDENT          reduce using rule 6 (statement -> DEDENT .)
    LBRACKET        reduce using rule 6 (statement -> DEDENT .)
    IDENTIFIER      reduce using rule 6 (statement -> DEDENT .)

  ! INDENT          [ reduce using rule 8 (table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT .) ]
  ! DEDENT          [ reduce using rule 8 (table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT .) ]
  ! LBRACKET        [ reduce using rule 8 (table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT .) ]
  ! IDENTIFIER      [ reduce using rule 8 (table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT .) ]


state 21

    (13) statements -> statements statement .

    DEDENT          reduce using rule 13 (statements -> statements statement .)
    INDENT          reduce using rule 13 (statements -> statements statement .)
    LBRACKET        reduce using rule 13 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 13 (statements -> statements statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INDENT in state 12 resolved as shift
WARNING: reduce/reduce conflict in state 20 resolved using rule (statement -> DEDENT)
WARNING: rejected rule (table -> LBRACKET IDENTIFIER RBRACKET INDENT statements DEDENT) in state 20
