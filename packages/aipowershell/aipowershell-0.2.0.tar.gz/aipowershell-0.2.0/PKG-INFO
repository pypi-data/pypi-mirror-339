Metadata-Version: 2.4
Name: aipowershell
Version: 0.2.0
Summary: An AI-powered smart shell with command suggestions and natural language processing
Home-page: https://github.com/yourusername/aipowershell
Author: Your Name
Author-email: your.email@example.com
Project-URL: Bug Reports, https://github.com/yourusername/aipowershell/issues
Project-URL: Source, https://github.com/yourusername/aipowershell
Keywords: ai shell cli powershell assistant openai deepseek
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: System :: Shells
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: openai>=1.0.0
Requires-Dist: prompt_toolkit>=3.0.0
Requires-Dist: python-dotenv>=0.19.0
Requires-Dist: requests>=2.26.0
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license-file
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# AI Power Shell

An AI-powered smart shell with command suggestions and natural language processing.

## What's New in 0.2.0
- Improved error handling and analysis
- Better command suggestions
- Support for project structure analysis
- Enhanced natural language processing
- Performance improvements

## Installation

```bash
pip install aipowershell
```

## Usage

1. Set your OpenRouter API key in your environment:
```bash
export DEEPSEEK_API="your-api-key-here"
```

2. Run the shell:
```bash
aipowershell
```

## Features

- AI-powered command suggestions
- Natural language command processing (prefix with ?)
- Error analysis and fixing
- Project structure analysis
- Improved command completion
- Better error handling

## Examples

```bash
$ ?show current directory  # Will translate to: pwd
$ ?list all files         # Will translate to: ls -la
$ !error ModuleNotFoundError: No module named 'pandas'  # Will analyze and fix the error
```

## Requirements
- Python 3.6+
- OpenAI API key or OpenRouter API key

