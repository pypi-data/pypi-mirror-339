name: labtasker

services:
  mongo-init-keyfile: # 1. setup keyfile
    image: mongo:latest
    restart: no
    volumes:
      - ./docker/mongodb/init.d:/init.d:ro
      - mongo-keyfile:/data/configdb:rw
    entrypoint: [ "/bin/bash", "-c", 'exec "$@"', "--" ]
    command: [ "/init.d/init-keyfile.sh" ]

  mongodb: # 2. start mongodb
    image: mongo:latest
    container_name: labtasker-mongodb
    depends_on:
      mongo-init-keyfile:
        condition: service_completed_successfully
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME:-labtasker_db}
    command: [ "--bind_ip_all", "--replSet", "rs0", "--keyFile", "/data/configdb/mongo-keyfile" ]
    volumes:
      - mongo-data:/data/db:rw
      - mongo-keyfile:/data/configdb:rw
    ports:
      - ${EXPOSE_DB:+${DB_PORT:-27017}:27017}
    networks:
      - labtasker-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 60s
    restart: unless-stopped

  mongo-post-init: # 3. setup replica set and database
    image: mongo:latest
    restart: no
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./docker/mongodb/post-init.d:/post-init.d:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${DB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_NAME:-labtasker_db}
    entrypoint: [ "/bin/bash", "-c", 'exec "$@"', "--" ]
    command: [ "/post-init.d/init-mongo.sh" ]
    networks:
      - labtasker-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
      network: host
    image: ghcr.io/luocfprime/labtasker-api
    container_name: labtasker-api
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-labtasker_db}
      - DB_HOST=mongodb
      - DB_PORT=${DB_PORT:-27017}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-9321}
      - PERIODIC_TASK_INTERVAL=${PERIODIC_TASK_INTERVAL:-30}
    ports:
      - "${API_PORT:-9321}:${API_PORT:-9321}"
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - labtasker-network
    restart: unless-stopped

volumes:
  mongo-data:
    name: labtasker-mongo-data
  mongo-keyfile:
    name: labtasker-mongo-keyfile

networks:
  labtasker-network:
    name: labtasker-network
    driver: bridge
